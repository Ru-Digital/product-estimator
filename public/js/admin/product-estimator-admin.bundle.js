/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/admin.js":
/*!*************************!*\
  !*** ./src/js/admin.js ***!
  \*************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _admin_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./admin/index */ \"./src/js/admin/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n\n\nvar logger = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.createLogger)('ProductEstimatorAdmin');\nlogger.log('Product Estimator Admin initialized');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYWRtaW4uanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXVCO0FBQ2U7QUFFdEMsSUFBTUMsTUFBTSxHQUFHRCxvREFBWSxDQUFDLHVCQUF1QixDQUFDO0FBQ3BEQyxNQUFNLENBQUNDLEdBQUcsQ0FBQyxxQ0FBcUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2R1Y3QtZXN0aW1hdG9yLy4vc3JjL2pzL2FkbWluLmpzPzIzMWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2FkbWluL2luZGV4JztcbmltcG9ydCB7IGNyZWF0ZUxvZ2dlciB9IGZyb20gJ0B1dGlscyc7XG5cbmNvbnN0IGxvZ2dlciA9IGNyZWF0ZUxvZ2dlcignUHJvZHVjdEVzdGltYXRvckFkbWluJyk7XG5sb2dnZXIubG9nKCdQcm9kdWN0IEVzdGltYXRvciBBZG1pbiBpbml0aWFsaXplZCcpO1xuIl0sIm5hbWVzIjpbImNyZWF0ZUxvZ2dlciIsImxvZ2dlciIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/admin.js\n");

/***/ }),

/***/ "./src/js/admin/ProductEstimatorAdmin.js":
/*!***********************************************!*\
  !*** ./src/js/admin/ProductEstimatorAdmin.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n\n\n/**\n * Admin JavaScript functionality\n *\n * General admin functionality for the Product Estimator plugin in the ADMIN\n * Note: Tab management functionality has been moved to ProductEstimatorSettings.js\n */\n\nvar logger = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.createLogger)('ProductEstimatorAdmin');\nvar ProductEstimatorAdmin = /*#__PURE__*/function () {\n  /**\n   * Initialize the admin functionality\n   */\n  function ProductEstimatorAdmin() {\n    var _this = this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ProductEstimatorAdmin);\n    // Initialize when document is ready\n    jQuery(document).ready(function () {\n      _this.initializeVariables();\n      _this.bindEvents();\n\n      // Only initialize tabs if we're not on the settings page\n      if (!_this.isSettingsPage()) {\n        _this.initializeTabs();\n      }\n    });\n  }\n\n  /**\n   * Check if we're on the settings page to avoid conflicts\n   * @returns {boolean} Whether this is the settings page\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ProductEstimatorAdmin, [{\n    key: \"isSettingsPage\",\n    value: function isSettingsPage() {\n      // Check if URL contains settings page identifier\n      var urlParams = new URLSearchParams(window.location.search);\n      var page = urlParams.get('page');\n      return page && page.indexOf('-settings') > -1;\n    }\n\n    /**\n     * Initialize class variables\n     */\n  }, {\n    key: \"initializeVariables\",\n    value: function initializeVariables() {\n      this.formChanged = false;\n      this.currentTab = '';\n      this.reportData = null;\n      this.chart = null;\n    }\n\n    /**\n     * Bind event listeners\n     */\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var $ = jQuery;\n\n      // Only bind tab events if not on settings page\n      if (!this.isSettingsPage()) {\n        // Tab switching\n        $('.nav-tab-wrapper').on('click', '.nav-tab', this.handleTabClick.bind(this));\n      }\n\n      // Real-time validation\n      this.initializeValidation();\n\n      // Window beforeunload\n      $(window).on('beforeunload', this.handleBeforeUnload.bind(this));\n    }\n\n    /**\n     * Initialize tab functionality\n     */\n  }, {\n    key: \"initializeTabs\",\n    value: function initializeTabs() {\n      var $ = jQuery;\n\n      // Get first tab if none is active\n      var $firstTab = $('.nav-tab:first');\n      var firstTabId = $firstTab.data('tab') || 'tab-1';\n      $('.tab-content').hide();\n      $(\"#\".concat(firstTabId)).show();\n      $firstTab.addClass('nav-tab-active');\n      this.currentTab = firstTabId;\n\n      // Check for URL parameters\n      var urlParams = new URLSearchParams(window.location.search);\n      var tab = urlParams.get('tab');\n      if (tab) {\n        this.switchTab(tab);\n      }\n    }\n\n    /**\n     * Handle tab clicks\n     * @param {Event} e - Click event\n     */\n  }, {\n    key: \"handleTabClick\",\n    value: function handleTabClick(e) {\n      e.preventDefault();\n      var $ = jQuery;\n      var tab = $(e.currentTarget).data('tab');\n      if (this.formChanged) {\n        if (confirm(productEstimatorAdmin.i18n.unsavedChanges)) {\n          this.switchTab(tab);\n        }\n      } else {\n        this.switchTab(tab);\n      }\n    }\n\n    /**\n     * Switch to specified tab\n     * @param {string} tab - Tab identifier\n     */\n  }, {\n    key: \"switchTab\",\n    value: function switchTab(tab) {\n      var $ = jQuery;\n      $('.nav-tab').removeClass('nav-tab-active');\n      $(\".nav-tab[data-tab=\\\"\".concat(tab, \"\\\"]\")).addClass('nav-tab-active');\n      $('.tab-content').hide();\n      $(\"#\".concat(tab)).show();\n      this.currentTab = tab;\n\n      // Update URL without reload\n      var url = new URL(window.location);\n      url.searchParams.set('tab', tab);\n      window.history.pushState({}, '', url);\n\n      // Load tab-specific content\n      if (tab === 'reports' && !this.reportData) {\n        this.loadInitialReport();\n      }\n    }\n\n    /**\n     * Initialize form validation\n     */\n  }, {\n    key: \"initializeValidation\",\n    value: function initializeValidation() {\n      // Skip this if we're on the settings page\n      if (this.isSettingsPage()) {\n        return;\n      }\n      var $ = jQuery;\n      var $form = $('.product-estimator-form');\n\n      // Real-time email validation\n      $form.find('input[type=\"email\"]').on('change', function (e) {\n        var $input = $(e.currentTarget);\n        var email = $input.val();\n        if (email && !(0,_utils__WEBPACK_IMPORTED_MODULE_2__.validateEmail)(email)) {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_2__.showFieldError)($input, productEstimatorAdmin.i18n.invalidEmail);\n        } else {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clearFieldError)($input);\n        }\n      });\n\n      // Number range validation\n      $form.find('input[type=\"number\"]').on('change', function (e) {\n        var $input = $(e.currentTarget);\n        var value = parseInt($input.val());\n        var min = parseInt($input.attr('min'));\n        var max = parseInt($input.attr('max'));\n        if (value < min || value > max) {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_2__.showFieldError)($input, productEstimatorAdmin.i18n.numberRange.replace('%min%', min).replace('%max%', max));\n        } else {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clearFieldError)($input);\n        }\n      });\n    }\n\n    /**\n     * Handle window beforeunload event\n     * @param {Event} e - BeforeUnload event\n     * @returns {string|undefined} Confirmation message or undefined if no changes\n     */\n  }, {\n    key: \"handleBeforeUnload\",\n    value: function handleBeforeUnload(e) {\n      if (this.formChanged) {\n        e.preventDefault();\n        return productEstimatorAdmin.i18n.unsavedChanges;\n      }\n    }\n\n    /**\n     * Load initial report data (placeholder for report functionality)\n     */\n  }, {\n    key: \"loadInitialReport\",\n    value: function loadInitialReport() {\n      // This would load report data from the server via AJAX\n    }\n  }]);\n}(); // Create instance\nnew ProductEstimatorAdmin();\n// Log initialization\nlogger.log('ProductEstimatorAdmin initialized');\n\n// Export for module use\n/* harmony default export */ __webpack_exports__[\"default\"] = (ProductEstimatorAdmin);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUNuQixXQUFXLEVBQUU7UUFDcEJtQixDQUFDLENBQUNDLGNBQWMsQ0FBQyxDQUFDO1FBQ2xCLE9BQU9HLHFCQUFxQixDQUFDQyxJQUFJLENBQUNDLGNBQWM7TUFDbEQ7SUFDRjs7SUFFQTtBQUNGO0FBQ0E7RUFGRTtJQUFBbkMsR0FBQTtJQUFBQyxLQUFBLEVBR0EsU0FBQTBDLGlCQUFpQkEsQ0FBQSxFQUFHO01BQ2xCO0lBQUE7RUFDRDtBQUFBLEtBR0g7QUFDQSxJQUFJdEQscUJBQXFCLENBQUMsQ0FBQztBQUMzQjtBQUNBRCxNQUFNLENBQUNvRSxHQUFHLENBQUMsbUNBQW1DLENBQUM7O0FBRS9DO0FBQ0EsK0RBQWVuRSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9kdWN0LWVzdGltYXRvci8uL3NyYy9qcy9hZG1pbi9Qcm9kdWN0RXN0aW1hdG9yQWRtaW4uanM/MDgwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFkbWluIEphdmFTY3JpcHQgZnVuY3Rpb25hbGl0eVxuICpcbiAqIEdlbmVyYWwgYWRtaW4gZnVuY3Rpb25hbGl0eSBmb3IgdGhlIFByb2R1Y3QgRXN0aW1hdG9yIHBsdWdpbiBpbiB0aGUgQURNSU5cbiAqIE5vdGU6IFRhYiBtYW5hZ2VtZW50IGZ1bmN0aW9uYWxpdHkgaGFzIGJlZW4gbW92ZWQgdG8gUHJvZHVjdEVzdGltYXRvclNldHRpbmdzLmpzXG4gKi9cbmltcG9ydCB7IHNob3dGaWVsZEVycm9yLCBjbGVhckZpZWxkRXJyb3IsIHZhbGlkYXRlRW1haWwsIGNyZWF0ZUxvZ2dlciB9IGZyb20gJ0B1dGlscyc7XG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoJ1Byb2R1Y3RFc3RpbWF0b3JBZG1pbicpO1xuXG5jbGFzcyBQcm9kdWN0RXN0aW1hdG9yQWRtaW4ge1xuICAvKipcbiAgICogSW5pdGlhbGl6ZSB0aGUgYWRtaW4gZnVuY3Rpb25hbGl0eVxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gSW5pdGlhbGl6ZSB3aGVuIGRvY3VtZW50IGlzIHJlYWR5XG4gICAgalF1ZXJ5KGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XG4gICAgICB0aGlzLmluaXRpYWxpemVWYXJpYWJsZXMoKTtcbiAgICAgIHRoaXMuYmluZEV2ZW50cygpO1xuXG4gICAgICAvLyBPbmx5IGluaXRpYWxpemUgdGFicyBpZiB3ZSdyZSBub3Qgb24gdGhlIHNldHRpbmdzIHBhZ2VcbiAgICAgIGlmICghdGhpcy5pc1NldHRpbmdzUGFnZSgpKSB7XG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZVRhYnMoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiB3ZSdyZSBvbiB0aGUgc2V0dGluZ3MgcGFnZSB0byBhdm9pZCBjb25mbGljdHNcbiAgICogQHJldHVybnMge2Jvb2xlYW59IFdoZXRoZXIgdGhpcyBpcyB0aGUgc2V0dGluZ3MgcGFnZVxuICAgKi9cbiAgaXNTZXR0aW5nc1BhZ2UoKSB7XG4gICAgLy8gQ2hlY2sgaWYgVVJMIGNvbnRhaW5zIHNldHRpbmdzIHBhZ2UgaWRlbnRpZmllclxuICAgIGNvbnN0IHVybFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaCk7XG4gICAgY29uc3QgcGFnZSA9IHVybFBhcmFtcy5nZXQoJ3BhZ2UnKTtcbiAgICByZXR1cm4gcGFnZSAmJiBwYWdlLmluZGV4T2YoJy1zZXR0aW5ncycpID4gLTE7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbGl6ZSBjbGFzcyB2YXJpYWJsZXNcbiAgICovXG4gIGluaXRpYWxpemVWYXJpYWJsZXMoKSB7XG4gICAgdGhpcy5mb3JtQ2hhbmdlZCA9IGZhbHNlO1xuICAgIHRoaXMuY3VycmVudFRhYiA9ICcnO1xuICAgIHRoaXMucmVwb3J0RGF0YSA9IG51bGw7XG4gICAgdGhpcy5jaGFydCA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogQmluZCBldmVudCBsaXN0ZW5lcnNcbiAgICovXG4gIGJpbmRFdmVudHMoKSB7XG4gICAgY29uc3QgJCA9IGpRdWVyeTtcblxuICAgIC8vIE9ubHkgYmluZCB0YWIgZXZlbnRzIGlmIG5vdCBvbiBzZXR0aW5ncyBwYWdlXG4gICAgaWYgKCF0aGlzLmlzU2V0dGluZ3NQYWdlKCkpIHtcbiAgICAgIC8vIFRhYiBzd2l0Y2hpbmdcbiAgICAgICQoJy5uYXYtdGFiLXdyYXBwZXInKS5vbignY2xpY2snLCAnLm5hdi10YWInLCB0aGlzLmhhbmRsZVRhYkNsaWNrLmJpbmQodGhpcykpO1xuICAgIH1cblxuICAgIC8vIFJlYWwtdGltZSB2YWxpZGF0aW9uXG4gICAgdGhpcy5pbml0aWFsaXplVmFsaWRhdGlvbigpO1xuXG4gICAgLy8gV2luZG93IGJlZm9yZXVubG9hZFxuICAgICQod2luZG93KS5vbignYmVmb3JldW5sb2FkJywgdGhpcy5oYW5kbGVCZWZvcmVVbmxvYWQuYmluZCh0aGlzKSk7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbGl6ZSB0YWIgZnVuY3Rpb25hbGl0eVxuICAgKi9cbiAgaW5pdGlhbGl6ZVRhYnMoKSB7XG4gICAgY29uc3QgJCA9IGpRdWVyeTtcblxuICAgIC8vIEdldCBmaXJzdCB0YWIgaWYgbm9uZSBpcyBhY3RpdmVcbiAgICBjb25zdCAkZmlyc3RUYWIgPSAkKCcubmF2LXRhYjpmaXJzdCcpO1xuICAgIGNvbnN0IGZpcnN0VGFiSWQgPSAkZmlyc3RUYWIuZGF0YSgndGFiJykgfHwgJ3RhYi0xJztcblxuICAgICQoJy50YWItY29udGVudCcpLmhpZGUoKTtcbiAgICAkKGAjJHtmaXJzdFRhYklkfWApLnNob3coKTtcbiAgICAkZmlyc3RUYWIuYWRkQ2xhc3MoJ25hdi10YWItYWN0aXZlJyk7XG4gICAgdGhpcy5jdXJyZW50VGFiID0gZmlyc3RUYWJJZDtcblxuICAgIC8vIENoZWNrIGZvciBVUkwgcGFyYW1ldGVyc1xuICAgIGNvbnN0IHVybFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaCk7XG4gICAgY29uc3QgdGFiID0gdXJsUGFyYW1zLmdldCgndGFiJyk7XG5cbiAgICBpZiAodGFiKSB7XG4gICAgICB0aGlzLnN3aXRjaFRhYih0YWIpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGUgdGFiIGNsaWNrc1xuICAgKiBAcGFyYW0ge0V2ZW50fSBlIC0gQ2xpY2sgZXZlbnRcbiAgICovXG4gIGhhbmRsZVRhYkNsaWNrKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgJCA9IGpRdWVyeTtcbiAgICBjb25zdCB0YWIgPSAkKGUuY3VycmVudFRhcmdldCkuZGF0YSgndGFiJyk7XG5cbiAgICBpZiAodGhpcy5mb3JtQ2hhbmdlZCkge1xuICAgICAgaWYgKGNvbmZpcm0ocHJvZHVjdEVzdGltYXRvckFkbWluLmkxOG4udW5zYXZlZENoYW5nZXMpKSB7XG4gICAgICAgIHRoaXMuc3dpdGNoVGFiKHRhYik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc3dpdGNoVGFiKHRhYik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFN3aXRjaCB0byBzcGVjaWZpZWQgdGFiXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0YWIgLSBUYWIgaWRlbnRpZmllclxuICAgKi9cbiAgc3dpdGNoVGFiKHRhYikge1xuICAgIGNvbnN0ICQgPSBqUXVlcnk7XG5cbiAgICAkKCcubmF2LXRhYicpLnJlbW92ZUNsYXNzKCduYXYtdGFiLWFjdGl2ZScpO1xuICAgICQoYC5uYXYtdGFiW2RhdGEtdGFiPVwiJHt0YWJ9XCJdYCkuYWRkQ2xhc3MoJ25hdi10YWItYWN0aXZlJyk7XG5cbiAgICAkKCcudGFiLWNvbnRlbnQnKS5oaWRlKCk7XG4gICAgJChgIyR7dGFifWApLnNob3coKTtcblxuICAgIHRoaXMuY3VycmVudFRhYiA9IHRhYjtcblxuICAgIC8vIFVwZGF0ZSBVUkwgd2l0aG91dCByZWxvYWRcbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbik7XG4gICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoJ3RhYicsIHRhYik7XG4gICAgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKHt9LCAnJywgdXJsKTtcblxuICAgIC8vIExvYWQgdGFiLXNwZWNpZmljIGNvbnRlbnRcbiAgICBpZiAodGFiID09PSAncmVwb3J0cycgJiYgIXRoaXMucmVwb3J0RGF0YSkge1xuICAgICAgdGhpcy5sb2FkSW5pdGlhbFJlcG9ydCgpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBJbml0aWFsaXplIGZvcm0gdmFsaWRhdGlvblxuICAgKi9cbiAgaW5pdGlhbGl6ZVZhbGlkYXRpb24oKSB7XG4gICAgLy8gU2tpcCB0aGlzIGlmIHdlJ3JlIG9uIHRoZSBzZXR0aW5ncyBwYWdlXG4gICAgaWYgKHRoaXMuaXNTZXR0aW5nc1BhZ2UoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0ICQgPSBqUXVlcnk7XG4gICAgY29uc3QgJGZvcm0gPSAkKCcucHJvZHVjdC1lc3RpbWF0b3ItZm9ybScpO1xuXG4gICAgLy8gUmVhbC10aW1lIGVtYWlsIHZhbGlkYXRpb25cbiAgICAkZm9ybS5maW5kKCdpbnB1dFt0eXBlPVwiZW1haWxcIl0nKS5vbignY2hhbmdlJywgKGUpID0+IHtcbiAgICAgIGNvbnN0ICRpbnB1dCA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgIGNvbnN0IGVtYWlsID0gJGlucHV0LnZhbCgpO1xuXG4gICAgICBpZiAoZW1haWwgJiYgIXZhbGlkYXRlRW1haWwoZW1haWwpKSB7XG4gICAgICAgIHNob3dGaWVsZEVycm9yKCRpbnB1dCwgcHJvZHVjdEVzdGltYXRvckFkbWluLmkxOG4uaW52YWxpZEVtYWlsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNsZWFyRmllbGRFcnJvcigkaW5wdXQpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gTnVtYmVyIHJhbmdlIHZhbGlkYXRpb25cbiAgICAkZm9ybS5maW5kKCdpbnB1dFt0eXBlPVwibnVtYmVyXCJdJykub24oJ2NoYW5nZScsIChlKSA9PiB7XG4gICAgICBjb25zdCAkaW5wdXQgPSAkKGUuY3VycmVudFRhcmdldCk7XG4gICAgICBjb25zdCB2YWx1ZSA9IHBhcnNlSW50KCRpbnB1dC52YWwoKSk7XG4gICAgICBjb25zdCBtaW4gPSBwYXJzZUludCgkaW5wdXQuYXR0cignbWluJykpO1xuICAgICAgY29uc3QgbWF4ID0gcGFyc2VJbnQoJGlucHV0LmF0dHIoJ21heCcpKTtcblxuICAgICAgaWYgKHZhbHVlIDwgbWluIHx8IHZhbHVlID4gbWF4KSB7XG4gICAgICAgIHNob3dGaWVsZEVycm9yKCRpbnB1dCwgcHJvZHVjdEVzdGltYXRvckFkbWluLmkxOG4ubnVtYmVyUmFuZ2VcbiAgICAgICAgICAucmVwbGFjZSgnJW1pbiUnLCBtaW4pXG4gICAgICAgICAgLnJlcGxhY2UoJyVtYXglJywgbWF4KSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjbGVhckZpZWxkRXJyb3IoJGlucHV0KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGUgd2luZG93IGJlZm9yZXVubG9hZCBldmVudFxuICAgKiBAcGFyYW0ge0V2ZW50fSBlIC0gQmVmb3JlVW5sb2FkIGV2ZW50XG4gICAqIEByZXR1cm5zIHtzdHJpbmd8dW5kZWZpbmVkfSBDb25maXJtYXRpb24gbWVzc2FnZSBvciB1bmRlZmluZWQgaWYgbm8gY2hhbmdlc1xuICAgKi9cbiAgaGFuZGxlQmVmb3JlVW5sb2FkKGUpIHtcbiAgICBpZiAodGhpcy5mb3JtQ2hhbmdlZCkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgcmV0dXJuIHByb2R1Y3RFc3RpbWF0b3JBZG1pbi5pMThuLnVuc2F2ZWRDaGFuZ2VzO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBMb2FkIGluaXRpYWwgcmVwb3J0IGRhdGEgKHBsYWNlaG9sZGVyIGZvciByZXBvcnQgZnVuY3Rpb25hbGl0eSlcbiAgICovXG4gIGxvYWRJbml0aWFsUmVwb3J0KCkge1xuICAgIC8vIFRoaXMgd291bGQgbG9hZCByZXBvcnQgZGF0YSBmcm9tIHRoZSBzZXJ2ZXIgdmlhIEFKQVhcbiAgfVxufVxuXG4vLyBDcmVhdGUgaW5zdGFuY2Vcbm5ldyBQcm9kdWN0RXN0aW1hdG9yQWRtaW4oKTtcbi8vIExvZyBpbml0aWFsaXphdGlvblxubG9nZ2VyLmxvZygnUHJvZHVjdEVzdGltYXRvckFkbWluIGluaXRpYWxpemVkJyk7XG5cbi8vIEV4cG9ydCBmb3IgbW9kdWxlIHVzZVxuZXhwb3J0IGRlZmF1bHQgUHJvZHVjdEVzdGltYXRvckFkbWluO1xuIl0sIm5hbWVzIjpbInNob3dGaWVsZEVycm9yIiwiY2xlYXJGaWVsZEVycm9yIiwidmFsaWRhdGVFbWFpbCIsImNyZWF0ZUxvZ2dlciIsImxvZ2dlciIsIlByb2R1Y3RFc3RpbWF0b3JBZG1pbiIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrIiwialF1ZXJ5IiwiZG9jdW1lbnQiLCJyZWFkeSIsImluaXRpYWxpemVWYXJpYWJsZXMiLCJiaW5kRXZlbnRzIiwiaXNTZXR0aW5nc1BhZ2UiLCJpbml0aWFsaXplVGFicyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwidXJsUGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwid2luZG93IiwibG9jYXRpb24iLCJzZWFyY2giLCJwYWdlIiwiZ2V0IiwiaW5kZXhPZiIsImZvcm1DaGFuZ2VkIiwiY3VycmVudFRhYiIsInJlcG9ydERhdGEiLCJjaGFydCIsIiQiLCJvbiIsImhhbmRsZVRhYkNsaWNrIiwiYmluZCIsImluaXRpYWxpemVWYWxpZGF0aW9uIiwiaGFuZGxlQmVmb3JlVW5sb2FkIiwiJGZpcnN0VGFiIiwiZmlyc3RUYWJJZCIsImRhdGEiLCJoaWRlIiwiY29uY2F0Iiwic2hvdyIsImFkZENsYXNzIiwidGFiIiwic3dpdGNoVGFiIiwiZSIsInByZXZlbnREZWZhdWx0IiwiY3VycmVudFRhcmdldCIsImNvbmZpcm0iLCJwcm9kdWN0RXN0aW1hdG9yQWRtaW4iLCJpMThuIiwidW5zYXZlZENoYW5nZXMiLCJyZW1vdmVDbGFzcyIsInVybCIsIlVSTCIsInNlYXJjaFBhcmFtcyIsInNldCIsImhpc3RvcnkiLCJwdXNoU3RhdGUiLCJsb2FkSW5pdGlhbFJlcG9ydCIsIiRmb3JtIiwiZmluZCIsIiRpbnB1dCIsImVtYWlsIiwidmFsIiwiaW52YWxpZEVtYWlsIiwicGFyc2VJbnQiLCJtaW4iLCJhdHRyIiwibWF4IiwibnVtYmVyUmFuZ2UiLCJyZXBsYWNlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/admin/ProductEstimatorAdmin.js\n");

/***/ }),

/***/ "./src/js/admin/common/AdminTableManager.js":
/*!**************************************************!*\
  !*** ./src/js/admin/common/AdminTableManager.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n/* harmony import */ var _VerticalTabbedModule_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./VerticalTabbedModule.js */ \"./src/js/admin/common/VerticalTabbedModule.js\");\n\n\n\n\n\n\n\n\n\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_7__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n// File: admin/js/common/AdminTableManager.js\n\n/**\n * AdminTableManager.js\n *\n * Base class for managing admin list tables with add/edit/delete functionality\n * driven by AJAX. It relies on a specific HTML structure and localized data\n * provided by the corresponding PHP settings module.\n * Now extends VerticalTabbedModule.\n */\n // Import utilities needed for this class\n\n\nvar AdminTableManager = /*#__PURE__*/function (_VerticalTabbedModule) {\n  /**\n   * Constructor for AdminTableManager.\n   * @param {object} config - Configuration object for the module.\n   * @param {string} config.mainTabId - The ID of the main horizontal tab this table manager belongs to.\n   * @param {string} config.localizedDataName - The name of the global JS object holding localized data.\n   */\n  function AdminTableManager(config) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, AdminTableManager);\n    // Configuration for the VerticalTabbedModule parent class\n    var vtmConfig = _objectSpread(_objectSpread({}, config), {}, {\n      // Includes mainTabId, localizedDataName, and possibly defaultSubTabId\n      // Only set defaultSubTabId if not already provided in config\n      defaultSubTabId: config.defaultSubTabId || config.mainTabId + '_table',\n      // Use more predictable format\n      ajaxActionPrefix: \"atm_form_save_\".concat(config.mainTabId)\n    });\n    _this = _callSuper(this, AdminTableManager, [vtmConfig]); // Calls VerticalTabbedModule constructor\n    _this.config = config; // <<<< ADD THIS LINE\n\n    // --- CORRECTED LOGGER INITIALIZATION ---\n    // Use `config.mainTabId` (from this constructor's direct argument `config`)\n    // This `config` is guaranteed to have `mainTabId` as passed by ProductAdditionsSettingsModule.\n\n    var loggerName = \"AdminTableManager:\".concat(config.mainTabId || 'Generic');\n    _this.logger = (0,_utils__WEBPACK_IMPORTED_MODULE_9__.createLogger)(loggerName); // Pass the pre-constructed string\n\n    // `this.settings` is initialized by the `super(vtmConfig)` call chain (ProductEstimatorSettings).\n    // `this.settings.tab_id` will hold the mainTabId.\n    // A check for its presence after super() is good practice.\n    if (!_this.settings || !_this.settings.tab_id) {\n      // This was previously an empty block, but it should log a warning\n      _this.logger.warn('AdminTableManager: No tab_id found in settings.');\n    }\n    _this.formModified = false;\n    _this.isEditMode = false;\n    _this.currentItemId = null;\n    // Note: this.settings (formerly this.localizedData) is initialized by ProductEstimatorSettings\n    return _this;\n  }\n\n  /**\n   * Validates that essential settings (now from this.settings) are provided.\n   * @private\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(AdminTableManager, _VerticalTabbedModule);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(AdminTableManager, [{\n    key: \"_validateSettings\",\n    value: function _validateSettings() {\n      if (!this.settings || this.settings.tab_id === undefined) {\n        throw new Error(\"AdminTableManager: Essential property 'this.settings.tab_id' was not initialized by the parent class. Cannot validate settings.\");\n      }\n      if (Object.keys(this.settings).length === 0) {\n        var errorMsg = \"AdminTableManager: Settings (this.settings) is an empty object\";\n        if (this.settingsObjectName) {\n          errorMsg += \" (expected from window.\".concat(this.settingsObjectName, \"). This might happen if the global object is empty or not correctly populated.\");\n        }\n        throw new Error(errorMsg + \" Cannot proceed with empty settings for tab \\\"\".concat(this.settings.tab_id, \"\\\".\"));\n      }\n      var required = {\n        actions: ['add_item', 'update_item', 'delete_item'],\n        selectors: ['formContainer', 'form', 'addButton', 'listTableBody', 'editButton', 'deleteButton', 'idInput', 'saveButton', 'cancelButton', 'noItemsMessage', 'formTitle', 'listItemRow', 'listTableContainer', 'listTable'],\n        i18n_keys: ['confirmDelete', 'itemSavedSuccess', 'itemDeletedSuccess', 'errorSavingItem', 'errorDeletingItem', 'addItemButtonLabel', 'editItemFormTitle', 'saving', 'deleting', 'editButtonLabel', 'deleteButtonLabel']\n      };\n      var allValid = true;\n      if (this.settings.ajaxUrl === undefined) {\n        allValid = false;\n      }\n      if (this.settings.nonce === undefined) {\n        allValid = false;\n      }\n      if (this.settings.option_name === undefined) {\n        allValid = false;\n      }\n      if (this.settings.actions) {\n        var _iterator = _createForOfIteratorHelper(required.actions),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n            if (this.settings.actions[key] === undefined) {\n              allValid = false;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        allValid = false;\n      }\n      if (this.settings.selectors) {\n        var _iterator2 = _createForOfIteratorHelper(required.selectors),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _key = _step2.value;\n            if (this.settings.selectors[_key] === undefined) {\n              allValid = false;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else {\n        allValid = false;\n      }\n      if (this.settings.i18n) {\n        var _iterator3 = _createForOfIteratorHelper(required.i18n_keys),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _key2 = _step3.value;\n            if (this.settings.i18n[_key2] === undefined) {\n              this.logger.warn(\"AdminTableManager: Missing i18n key '\".concat(_key2, \"' in settings.i18n\"));\n              allValid = false;\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } else {\n        allValid = false;\n      }\n      if (!allValid) {\n        throw new Error(\"AdminTableManager: Settings validation failed due to missing critical settings in this.settings for tab \\\"\".concat(this.settings.tab_id, \"\\\". Check console for details.\"));\n      }\n    }\n\n    /**\n     * Initializes the table manager. This method overrides VerticalTabbedModule.moduleInit().\n     * It's called after DOM is ready and this.$container is set by the parent class.\n     */\n  }, {\n    key: \"moduleInit\",\n    value: function moduleInit() {\n      _superPropGet(AdminTableManager, \"moduleInit\", this, 3)([]); // Calls VerticalTabbedModule.moduleInit() which sets up $container etc.\n\n      if (!this.$container || !this.$container.length) {\n        if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n          window.ProductEstimatorSettingsInstance.showNotice(\"Critical error: Table manager UI container #\".concat(this.settings.tab_id, \" missing.\"), 'error');\n        }\n        return;\n      }\n      try {\n        this._validateSettings();\n      } catch (error) {\n        if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n          window.ProductEstimatorSettingsInstance.showNotice(\"Error initializing table manager for \".concat(this.settings.tab_id, \": Configuration validation failed. Check console. Details: \").concat(error.message), 'error');\n        }\n        return;\n      }\n      this.cacheDOM();\n      if (this._checkEssentialDOM()) {\n        this.bindEvents();\n        this.updateNoItemsMessageVisibility();\n        this.$(document).trigger(\"admin_table_manager_ready_\".concat(this.settings.tab_id), [this]);\n      } else {\n        if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n          var tabDisplayName = this.settings.tab_id;\n          window.ProductEstimatorSettingsInstance.showNotice(\"Error initializing UI components for \".concat(tabDisplayName, \". Some parts may not work. Check console for missing DOM elements.\"), 'error');\n        }\n      }\n    }\n  }, {\n    key: \"_checkEssentialDOM\",\n    value: function _checkEssentialDOM() {\n      var essentialFound = true;\n      if (!this.settings || !this.settings.selectors) {\n        return false;\n      }\n      var essentialSelectors = ['formContainer', 'form', 'addButton', 'listTableBody', 'listTableContainer', 'listTable', 'noItemsMessage', 'formTitle', 'idInput', 'saveButton', 'cancelButton'];\n      for (var _i = 0, _essentialSelectors = essentialSelectors; _i < _essentialSelectors.length; _i++) {\n        var key = _essentialSelectors[_i];\n        if (!this.dom[key] || !this.dom[key].length) {\n          essentialFound = false;\n        }\n      }\n      return essentialFound;\n    }\n  }, {\n    key: \"cacheDOM\",\n    value: function cacheDOM() {\n      this.dom = {};\n      if (!this.settings || !this.settings.selectors) {\n        return;\n      }\n      if (this.$container && this.$container.length) {\n        for (var key in this.settings.selectors) {\n          if (Object.prototype.hasOwnProperty.call(this.settings.selectors, key)) {\n            this.dom[key] = this.$container.find(this.settings.selectors[key]);\n          }\n        }\n      } else {\n        this.logger.warn(\"AdminTableManager: Container for '\".concat(this.settings.tab_id, \"' not found or has no length.\"));\n      }\n    }\n\n    /**\n     * Binds event handlers to DOM elements.\n     * This method sets up all the common event handling for the table manager.\n     */\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this$dom$addButton,\n        _this$settings$select,\n        _this$settings$select2,\n        _this$dom$form,\n        _this$dom$cancelButto,\n        _this$dom$form2,\n        _this2 = this;\n      if (!this.dom || Object.keys(this.dom).length === 0) {\n        return;\n      }\n      (_this$dom$addButton = this.dom.addButton) === null || _this$dom$addButton === void 0 || _this$dom$addButton.on('click.adminTableManager', this.handleAddNew.bind(this));\n      var editButtonSelector = (_this$settings$select = this.settings.selectors) === null || _this$settings$select === void 0 ? void 0 : _this$settings$select.editButton;\n      var deleteButtonSelector = (_this$settings$select2 = this.settings.selectors) === null || _this$settings$select2 === void 0 ? void 0 : _this$settings$select2.deleteButton;\n      if (this.dom.listTableBody && this.dom.listTableBody.length) {\n        // Bind standard action buttons\n        if (editButtonSelector) {\n          this.dom.listTableBody.on('click.adminTableManager', editButtonSelector, this.handleEdit.bind(this));\n        } else {\n          this.logger.warn(\"AdminTableManager: No edit button selector defined for '\".concat(this.settings.tab_id, \"'.\"));\n        }\n        if (deleteButtonSelector) {\n          this.dom.listTableBody.on('click.adminTableManager', deleteButtonSelector, this.handleDelete.bind(this));\n        } else {\n          this.logger.warn(\"AdminTableManager: No delete button selector defined for '\".concat(this.settings.tab_id, \"'.\"));\n        }\n\n        // Bind custom action buttons if they exist\n        this.bindCustomActionButtons();\n      } else {\n        this.logger.warn(\"AdminTableManager: List table body not found for '\".concat(this.settings.tab_id, \"'.\"));\n      }\n      (_this$dom$form = this.dom.form) === null || _this$dom$form === void 0 || _this$dom$form.on('submit.adminTableManager', this.handleSubmit.bind(this));\n      (_this$dom$cancelButto = this.dom.cancelButton) === null || _this$dom$cancelButto === void 0 || _this$dom$cancelButto.on('click.adminTableManager', this.handleCancel.bind(this));\n      (_this$dom$form2 = this.dom.form) === null || _this$dom$form2 === void 0 || _this$dom$form2.on('change.adminTableManager input.adminTableManager', ':input', function () {\n        _this2.formModified = true;\n      });\n    }\n\n    /**\n     * Binds event handlers for custom action buttons.\n     * Child classes should override this method to bind their custom action buttons.\n     */\n  }, {\n    key: \"bindCustomActionButtons\",\n    value: function bindCustomActionButtons() {\n      // Base implementation does nothing\n      // Child classes should override to handle their custom action buttons\n      // Example implementation:\n      //\n      // if (this.dom.listTableBody) {\n      //   this.dom.listTableBody.on('click.adminTableManager', '.pe-view-product-button', this.handleViewProduct.bind(this));\n      // }\n    }\n  }, {\n    key: \"handleAddNew\",\n    value: function handleAddNew(e) {\n      var _this$dom$formTitle, _this$dom$saveButton, _this$dom$formContain, _this$dom$addButton2;\n      e.preventDefault();\n      this.isEditMode = false;\n      this.currentItemId = null;\n      this.resetForm();\n      (_this$dom$formTitle = this.dom.formTitle) === null || _this$dom$formTitle === void 0 || _this$dom$formTitle.text(this.settings.i18n.addItemFormTitle || 'Add New Item');\n      (_this$dom$saveButton = this.dom.saveButton) === null || _this$dom$saveButton === void 0 || _this$dom$saveButton.text(this.settings.i18n.addItemButtonLabel || this.settings.i18n.saveChangesButton || 'Save Item');\n      (_this$dom$formContain = this.dom.formContainer) === null || _this$dom$formContain === void 0 || _this$dom$formContain.slideDown();\n      (_this$dom$addButton2 = this.dom.addButton) === null || _this$dom$addButton2 === void 0 || _this$dom$addButton2.hide();\n    }\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit(e) {\n      var _this$dom$formTitle2,\n        _this$dom$saveButton2,\n        _this3 = this;\n      e.preventDefault();\n      var $button = this.$(e.currentTarget);\n      var $row = $button.closest(this.settings.selectors.listItemRow);\n      var itemId = $row.data('id');\n      if (!itemId) {\n        this.showNotice('Error: Could not determine the item to edit.', 'error');\n        return;\n      }\n      this.isEditMode = true;\n      this.currentItemId = itemId;\n      this.resetForm();\n      if (this.dom.idInput && this.dom.idInput.length) {\n        this.dom.idInput.val(this.currentItemId);\n      } else {\n        this.logger.warn(\"AdminTableManager: ID input field not found for '\".concat(this.settings.tab_id, \"'.\"));\n      }\n      (_this$dom$formTitle2 = this.dom.formTitle) === null || _this$dom$formTitle2 === void 0 || _this$dom$formTitle2.text(this.settings.i18n.editItemFormTitle || \"Edit Item #\".concat(itemId));\n      (_this$dom$saveButton2 = this.dom.saveButton) === null || _this$dom$saveButton2 === void 0 || _this$dom$saveButton2.text(this.settings.i18n.updateChangesButton || 'Update Item');\n      if (this.settings.actions && this.settings.actions.get_item) {\n        this.showFormLoadingSpinner(true, this.dom.saveButton);\n        _utils__WEBPACK_IMPORTED_MODULE_9__.ajax.ajaxRequest({\n          url: this.settings.ajaxUrl,\n          data: {\n            action: this.settings.actions.get_item,\n            nonce: this.settings.nonce,\n            // This should be the item-specific nonce\n            item_id: itemId,\n            option_name: this.settings.option_name,\n            tab_id: this.settings.tab_id\n          }\n        }).then(function (response) {\n          if (response && response.item && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(response.item) === 'object') {\n            var _this3$dom$formContai, _this3$dom$addButton;\n            _this3.populateFormWithData(response.item);\n            (_this3$dom$formContai = _this3.dom.formContainer) === null || _this3$dom$formContai === void 0 || _this3$dom$formContai.slideDown();\n            (_this3$dom$addButton = _this3.dom.addButton) === null || _this3$dom$addButton === void 0 || _this3$dom$addButton.hide();\n          } else {\n            var errorMsg = response && response.message ? response.message : _this3.settings.i18n.errorLoadingItem || 'Error loading item details.';\n            _this3.showNotice(errorMsg, 'error');\n          }\n        }).catch(function (error) {\n          _this3.showNotice(error.message || _this3.settings.i18n.errorLoadingItem || 'AJAX error loading item.', 'error');\n        }).finally(function () {\n          _this3.showFormLoadingSpinner(false, _this3.dom.saveButton);\n        });\n      } else {\n        var _this$dom$formContain2, _this$dom$addButton3;\n        var itemDataFromButton = $button.data();\n        if (Object.keys(itemDataFromButton).length > 1) {\n          itemDataFromButton.id = itemId;\n          this.populateFormWithData(itemDataFromButton);\n        } else {\n          this.showNotice('Note: Full item details might not be loaded. Displaying basic form for editing.', 'info');\n        }\n        (_this$dom$formContain2 = this.dom.formContainer) === null || _this$dom$formContain2 === void 0 || _this$dom$formContain2.slideDown();\n        (_this$dom$addButton3 = this.dom.addButton) === null || _this$dom$addButton3 === void 0 || _this$dom$addButton3.hide();\n      }\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(e) {\n      var _this4 = this;\n      e.preventDefault();\n      var $button = this.$(e.currentTarget);\n      var $row = $button.closest(this.settings.selectors.listItemRow);\n      var itemId = $row.data('id');\n      if (!itemId) {\n        this.showNotice('Error: Could not determine item to delete.', 'error');\n        return;\n      }\n      if (!confirm(this.settings.i18n.confirmDelete || 'Are you sure you want to delete this item?')) {\n        return;\n      }\n      var originalButtonText = $button.text();\n      $button.prop('disabled', true).text(this.settings.i18n.deleting || 'Deleting...');\n      _utils__WEBPACK_IMPORTED_MODULE_9__.ajax.ajaxRequest({\n        url: this.settings.ajaxUrl,\n        data: {\n          action: this.settings.actions.delete_item,\n          nonce: this.settings.nonce,\n          // Item-specific nonce\n          item_id: itemId,\n          option_name: this.settings.option_name,\n          tab_id: this.settings.tab_id\n        }\n      }).then(function (response) {\n        var isSuccess = response && (response.success === true || response.itemId && response.message);\n        if (isSuccess) {\n          _this4.showNotice(response.data && response.data.message || response.message || _this4.settings.i18n.itemDeletedSuccess || 'Item deleted.', 'success');\n          $row.fadeOut(300, function () {\n            $row.remove();\n            _this4.updateNoItemsMessageVisibility();\n          });\n        } else {\n          _this4.showNotice(response && response.message || response && response.data && response.data.message || _this4.settings.i18n.errorDeletingItem || 'Error deleting item.', 'error');\n          $button.prop('disabled', false).text(originalButtonText);\n        }\n      }).catch(function (error) {\n        _this4.showNotice(error.message || _this4.settings.i18n.errorDeletingItem || 'AJAX error deleting item.', 'error');\n        $button.prop('disabled', false).text(originalButtonText);\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this5 = this;\n      e.preventDefault();\n      if (!this.validateForm()) {\n        this.showNotice(this.settings.i18n.validationFailed || 'Please correct the errors in the form.', 'error');\n        return;\n      }\n      this.showFormLoadingSpinner(true, this.dom.saveButton);\n      var determinedAction = this.isEditMode ? this.settings.actions.update_item : this.settings.actions.add_item;\n      if (!determinedAction) {\n        this.showNotice(this.settings.i18n.errorSavingItem || 'Configuration error: Save action not defined.', 'error');\n        this.showFormLoadingSpinner(false, this.dom.saveButton);\n        return;\n      }\n      var dataPayload = {\n        action: determinedAction,\n        nonce: this.settings.nonce,\n        // Item-specific nonce\n        option_name: this.settings.option_name,\n        tab_id: this.settings.tab_id,\n        item_data: {}\n      };\n      var formFields = this.dom.form.serializeArray();\n      formFields.forEach(function (field) {\n        var fieldName = field.name;\n        var fieldValue = field.value;\n        if (fieldName.endsWith('[]')) {\n          var actualName = fieldName.slice(0, -2);\n          if (!dataPayload.item_data[actualName]) {\n            dataPayload.item_data[actualName] = [];\n          }\n          dataPayload.item_data[actualName].push(fieldValue);\n        } else {\n          dataPayload.item_data[fieldName] = fieldValue;\n        }\n      });\n      if (this.isEditMode && this.currentItemId) {\n        dataPayload.item_id = this.currentItemId;\n      }\n      _utils__WEBPACK_IMPORTED_MODULE_9__.ajax.ajaxRequest({\n        url: this.settings.ajaxUrl,\n        data: dataPayload\n      }).then(function (response) {\n        // Enhanced response validation with detailed logging\n        if (!response) {\n          _this5.showNotice(_this5.settings.i18n.errorSavingItem || 'Error: Empty response from server', 'error');\n          return;\n        }\n        if (response && response.item) {\n          var _this5$dom$formContai, _this5$dom$addButton;\n          _this5.showNotice(response.message || _this5.settings.i18n.itemSavedSuccess || 'Item saved.', 'success');\n\n          // CRITICAL: Handling the first item scenario directly\n          var isFirstItem = !_this5.dom.listTableBody.find('tr').length;\n          if (_this5.isEditMode) {\n            _this5.updateTableRow(response.item);\n          } else {\n            _this5.addTableRow(response.item);\n\n            // Special handling for first item\n            if (isFirstItem) {\n              _this5.dom.listTable.show();\n              _this5.dom.noItemsMessage.hide();\n\n              // Force DOM recalculation/repaint for the table\n              void _this5.dom.listTable[0].offsetHeight;\n            }\n          }\n          (_this5$dom$formContai = _this5.dom.formContainer) === null || _this5$dom$formContai === void 0 || _this5$dom$formContai.slideUp();\n          (_this5$dom$addButton = _this5.dom.addButton) === null || _this5$dom$addButton === void 0 || _this5$dom$addButton.show();\n          _this5.resetForm();\n          _this5.isEditMode = false;\n          _this5.currentItemId = null;\n          _this5.formModified = false;\n        } else {\n          var errorMsg = response && response.message ? response.message : _this5.settings.i18n.errorSavingItem || 'Error saving item or response format incorrect.';\n          var errorsDetail = response && response.errors ? \"<br><pre>\".concat(JSON.stringify(response.errors, null, 2), \"</pre>\") : '';\n          _this5.showNotice(errorMsg + errorsDetail, 'error');\n        }\n      }).catch(function (error) {\n        var errorMsg = error.message || _this5.settings.i18n.errorSavingItem || 'AJAX error during save.';\n        _this5.showNotice(errorMsg, 'error');\n      }).finally(function () {\n        _this5.showFormLoadingSpinner(false, _this5.dom.saveButton);\n      });\n    }\n  }, {\n    key: \"handleCancel\",\n    value: function handleCancel(e) {\n      var _this$dom$formContain3, _this$dom$addButton4;\n      e.preventDefault();\n      if (this.formModified) {\n        if (!confirm(this.settings.i18n.confirmCancelEditing || \"You have unsaved changes. Are you sure you want to cancel?\")) {\n          return;\n        }\n      }\n      (_this$dom$formContain3 = this.dom.formContainer) === null || _this$dom$formContain3 === void 0 || _this$dom$formContain3.slideUp();\n      (_this$dom$addButton4 = this.dom.addButton) === null || _this$dom$addButton4 === void 0 || _this$dom$addButton4.show();\n      this.resetForm();\n      this.isEditMode = false;\n      this.currentItemId = null;\n      this.formModified = false;\n    }\n  }, {\n    key: \"resetForm\",\n    value: function resetForm() {\n      var _this$dom$form$, _this$dom$form3, _this$dom$form4;\n      (_this$dom$form$ = this.dom.form[0]) === null || _this$dom$form$ === void 0 || _this$dom$form$.reset();\n      if (this.dom.idInput && this.dom.idInput.length) {\n        this.dom.idInput.val('');\n      }\n      this.formModified = false;\n      (_this$dom$form3 = this.dom.form) === null || _this$dom$form3 === void 0 || _this$dom$form3.find('.error').removeClass('error');\n      (_this$dom$form4 = this.dom.form) === null || _this$dom$form4 === void 0 || _this$dom$form4.find('.field-error').remove();\n    }\n  }, {\n    key: \"populateFormWithData\",\n    value: function populateFormWithData(itemData) {\n      if (itemData && itemData.id) {\n        if (this.dom.idInput && this.dom.idInput.length) {\n          this.dom.idInput.val(itemData.id);\n        } else {\n          this.logger.warn(\"AdminTableManager: ID input field not found when populating form data for '\".concat(this.settings.tab_id, \"'.\"));\n        }\n      } else {\n        this.logger.warn(\"AdminTableManager: Invalid item data (missing ID) when populating form for '\".concat(this.settings.tab_id, \"'.\"));\n      }\n      this.formModified = false;\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var _this$dom$form5,\n        _this$dom$form6,\n        _this$dom$form7,\n        _this6 = this;\n      var isValid = true;\n      (_this$dom$form5 = this.dom.form) === null || _this$dom$form5 === void 0 || _this$dom$form5.find('.error').removeClass('error');\n      (_this$dom$form6 = this.dom.form) === null || _this$dom$form6 === void 0 || _this$dom$form6.find('.field-error').remove();\n      (_this$dom$form7 = this.dom.form) === null || _this$dom$form7 === void 0 || _this$dom$form7.find('[data-is-required=\"true\"], .is-required').each(function (index, el) {\n        var $field = _this6.$(el);\n        var value = $field.val();\n        if ($field.is(':checkbox')) {\n          if (!$field.is(':checked')) {\n            _this6.showFieldError($field.closest('label').length ? $field.closest('label') : $field, _this6.settings.i18n.fieldRequired || 'This field must be checked.');\n            isValid = false;\n          }\n        } else {\n          if (typeof value === 'string') value = value.trim();\n          if (value === null || value === undefined || value === '' || $field.is('select') && !value) {\n            _this6.showFieldError($field, _this6.settings.i18n.fieldRequired || 'This field is required.');\n            isValid = false;\n          }\n        }\n      });\n      return isValid;\n    }\n  }, {\n    key: \"addTableRow\",\n    value: function addTableRow(itemData) {\n      // Debug table state before adding row\n\n      // Create the row\n      var $row = this.createTableRow(itemData);\n\n      // Add the row to the table\n      if ($row && this.dom.listTableBody && this.dom.listTableBody.length) {\n        this.dom.listTableBody.append($row);\n\n        // Always make table visible after adding a row, and hide the \"no items\" message\n        if (this.dom.listTable) {\n          this.dom.listTable.show();\n        }\n        if (this.dom.noItemsMessage) {\n          this.dom.noItemsMessage.hide();\n        }\n\n        // Skip updateNoItemsMessageVisibility() since we're explicitly handling visibility\n\n        // Debug table state after adding row\n      } else {\n        this.logger.warn(\"AdminTableManager: Could not add table row - either row creation failed or table body not found for '\".concat(this.settings.tab_id, \"'.\"));\n      }\n    }\n  }, {\n    key: \"updateTableRow\",\n    value: function updateTableRow(itemData) {\n      var _this$dom$listTableBo;\n      if (!itemData.id) {\n        return;\n      }\n      if (!this.settings.selectors || !this.settings.selectors.listItemRow) {\n        return;\n      }\n      var $existingRow = (_this$dom$listTableBo = this.dom.listTableBody) === null || _this$dom$listTableBo === void 0 ? void 0 : _this$dom$listTableBo.find(\"\".concat(this.settings.selectors.listItemRow, \"[data-id=\\\"\").concat(itemData.id, \"\\\"]\"));\n      if ($existingRow && $existingRow.length) {\n        var $newRow = this.createTableRow(itemData);\n        if ($newRow) {\n          $existingRow.replaceWith($newRow);\n        } else {\n          this.logger.warn(\"AdminTableManager: Failed to create replacement row for item #\".concat(itemData.id, \" in '\").concat(this.settings.tab_id, \"'.\"));\n        }\n      } else {\n        this.addTableRow(itemData);\n      }\n    }\n\n    /**\n     * Creates a table row from item data.\n     * This method provides a common implementation for creating table rows based on\n     * the table_columns setting provided from PHP.\n     * @param {object} itemData - The item data for the row.\n     * @returns {jQuery} - The jQuery object representing the row.\n     */\n  }, {\n    key: \"createTableRow\",\n    value: function createTableRow(itemData) {\n      var _this7 = this;\n      if (!itemData || !itemData.id) {\n        var _this$dom$listTable;\n        // Return a valid jQuery object for a row, even for an error.\n        var colspan = ((_this$dom$listTable = this.dom.listTable) === null || _this$dom$listTable === void 0 ? void 0 : _this$dom$listTable.find('thead th').length) || 4;\n        return this.$(\"<tr><td colspan=\\\"\".concat(colspan, \"\\\">Error: Invalid item data provided to createTableRow.</td></tr>\"));\n      }\n\n      // Get column information from the settings passed from PHP\n      var tableColumns = this.settings.table_columns || {};\n      if (Object.keys(tableColumns).length === 0) {\n        var _this$dom$listTable2;\n        var _colspan = ((_this$dom$listTable2 = this.dom.listTable) === null || _this$dom$listTable2 === void 0 ? void 0 : _this$dom$listTable2.find('thead th').length) || 4;\n        return this.$(\"<tr><td colspan=\\\"\".concat(_colspan, \"\\\">Error: table_columns data missing in settings for \").concat(this.settings.tab_id, \".</td></tr>\"));\n      }\n\n      // Get selector values\n      var selectors = this.settings.selectors || {};\n      var listItemRowSelector = selectors.listItemRow || 'tr'; // Base class might use this if defined\n      var editButtonClass = (selectors.editButton || '.pe-edit-item-button').replace(/^\\./, '');\n      var deleteButtonClass = (selectors.deleteButton || '.pe-delete-item-button').replace(/^\\./, '');\n\n      // Get i18n strings\n      var i18n = this.settings.i18n || {};\n\n      // Extract just the tag name without any attribute selectors\n      var tagName = listItemRowSelector.split('.')[0].replace(/\\[(.*?)\\]/g, '');\n\n      // Create the row with the correct tag and data-id attribute\n      var $row = this.$(\"<\".concat(tagName, \" data-id=\\\"\").concat(itemData.id, \"\\\"></\").concat(tagName, \">\"));\n\n      // Debug the row element that's being created\n\n      // If listItemRowSelector includes classes, add them: e.g., 'tr.my-custom-row-class'\n      if (listItemRowSelector.includes('.')) {\n        $row.addClass(listItemRowSelector.substring(listItemRowSelector.indexOf('.') + 1).replace(/\\./g, ' '));\n      }\n\n      // Create each cell using the column IDs from PHP\n      Object.entries(tableColumns).forEach(function (_ref) {\n        var _ref2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref, 2),\n          columnId = _ref2[0],\n          columnTitle = _ref2[1];\n        var $cell = _this7.$('<td></td>').addClass(\"column-\".concat(columnId)) // Match the PHP class naming convention\n        .attr('data-colname', columnTitle); // Set the column title for responsive display\n\n        // Log column creation for debugging\n\n        // Hook points for column customization:\n        // 1. Child class can implement a specific method for a column\n        // 2. Generic actions column handler\n        // 3. Default text display\n\n        // Check if the child class has a method to populate specific column content\n        var methodName = \"populateColumn_\".concat(columnId.replace(/[^a-zA-Z0-9_]/g, '_'));\n        if (typeof _this7[methodName] === 'function') {\n          // Let the child class handle this specific column\n          _this7[methodName]($cell, itemData, columnId);\n        } else if (columnId === 'item_actions' || columnId.endsWith('_actions')) {\n          // Default handling for actions column\n          $cell.addClass('actions');\n\n          // Create edit button\n          var $editButton = _this7.$('<button></button>').attr('type', 'button').addClass(\"button button-small \".concat(editButtonClass)).text(i18n.editButtonLabel || 'Edit').data('id', itemData.id);\n\n          // Create delete button\n          var $deleteButton = _this7.$('<button></button>').attr('type', 'button').addClass(\"button button-small \".concat(deleteButtonClass)).text(i18n.deleteButtonLabel || 'Delete').data('id', itemData.id);\n          $cell.append($editButton, ' ', $deleteButton);\n        } else {\n          // Default handling for other columns - just use the display field if available\n          var displayField = \"\".concat(columnId, \"_display\");\n          var displayValue = itemData[displayField] || itemData[columnId] || '';\n          $cell.text(displayValue);\n        }\n\n        // Add the cell to the row\n        $row.append($cell);\n      });\n\n      // Debug the final row structure\n\n      // Allow child classes to perform post-processing on the row\n      if (typeof this.afterRowCreated === 'function') {\n        this.afterRowCreated($row, itemData);\n      }\n      return $row;\n    }\n  }, {\n    key: \"updateNoItemsMessageVisibility\",\n    value: function updateNoItemsMessageVisibility() {\n      if (!this.settings.selectors || !this.settings.selectors.listItemRow) {\n        return;\n      }\n\n      // Debug info\n\n      if (this.dom.noItemsMessage && this.dom.noItemsMessage.length && this.dom.listTableBody && this.dom.listTable) {\n        var rowSelector = this.settings.selectors.listItemRow;\n        var $foundRows = this.dom.listTableBody.find(rowSelector);\n        var hasItems = $foundRows.length > 0;\n        if (hasItems) {\n          this.dom.noItemsMessage.hide();\n          this.dom.listTable.show();\n        } else {\n          this.dom.noItemsMessage.show();\n          this.dom.listTable.hide();\n        }\n      } else {\n        this.logger.warn(\"AdminTableManager: Required DOM elements for no-items message handling not found for '\".concat(this.settings.tab_id, \"'.\"));\n      }\n    }\n  }, {\n    key: \"showFormLoadingSpinner\",\n    value: function showFormLoadingSpinner(isLoading, $button) {\n      var $btn = $button || this.dom.saveButton;\n      if (!$btn || !$btn.length) return;\n      var originalTextKey = 'original-text';\n      var savingText = this.settings.i18n && this.settings.i18n.saving || 'Saving...';\n      if (isLoading) {\n        $btn.prop('disabled', true).addClass('pe-loading');\n        if (!$btn.data(originalTextKey)) {\n          var currentText = $btn.is('input, textarea, select') ? $btn.val() : $btn.text();\n          $btn.data(originalTextKey, currentText);\n        }\n        if ($btn.is('input, textarea, select')) $btn.val(savingText);else $btn.text(savingText);\n      } else {\n        $btn.prop('disabled', false).removeClass('pe-loading');\n        if ($btn.data(originalTextKey)) {\n          var originalText = $btn.data(originalTextKey);\n          if ($btn.is('input, textarea, select')) $btn.val(originalText);else $btn.text(originalText);\n          $btn.removeData(originalTextKey);\n        }\n      }\n    }\n  }]);\n}(_VerticalTabbedModule_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (AdminTableManager);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/admin/common/AdminTableManager.js\n");

/***/ }),

/***/ "./src/js/admin/common/ProductEstimatorSettings.js":
/*!*********************************************************!*\
  !*** ./src/js/admin/common/ProductEstimatorSettings.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n\n\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/**\n * Main Settings JavaScript\n *\n * Handles common functionality for the settings page and serves as a base class for specific settings modules.\n * Modified to work with separate forms for each tab and support module extension.\n */\n\nvar ProductEstimatorSettings = /*#__PURE__*/function () {\n  /**\n   * Initialize the Settings Manager or a Settings Module\n   * @param {object|null} moduleOptions - Options if being used as a base for a module.\n   * { boolean } isModule - True if being initialized as a module.\n   * { string } settingsObjectName - Name of the global object holding localized settings (e.g., 'generalSettings').\n   * { string } defaultTabId - Default tab ID for the module.\n   * { string } loggerName - Name for the logger for this module instance.\n   */\n  function ProductEstimatorSettings() {\n    var _this = this;\n    var moduleOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, ProductEstimatorSettings);\n    this.$ = jQuery;\n    // Use createLogger for consistency if preferred, or the existing `log` for the orchestrator.\n    // For simplicity, the orchestrator part will continue using the imported `log` as per original.\n    // Modules will typically define their own `createLogger` instance.\n    // This logger is for the base class methods when they log.\n    this.baseClassLogger = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.createLogger)(this.constructor.name);\n    if (moduleOptions && moduleOptions.isModule) {\n      // Path for when used as a base for a specific settings module\n      this.settingsObjectName = moduleOptions.settingsObjectName;\n      this.defaultTabId = moduleOptions.defaultTabId;\n      this._initializeModuleSpecificSettings(this.settingsObjectName, this.defaultTabId);\n      this.$(document).ready(function () {\n        _this._finalizeModuleSettings(_this.settingsObjectName);\n        if (typeof _this.moduleInit === 'function') {\n          _this.moduleInit();\n        } else {\n          // No moduleInit method defined in subclass - skipping initialization\n        }\n      });\n    } else {\n      // Original constructor path for the main settings page orchestrator\n      this.formChanged = false;\n      this.currentTab = '';\n      this.formChangeTrackers = {}; // Track form changes per tab\n\n      this.ensureGlobalVariables();\n\n      // Call mainInit for the orchestrator AFTER document is ready, similar to modules\n      this.$(document).ready(function () {\n        _this.mainInit();\n      });\n    }\n  }\n\n  /**\n   * Initialize settings for a derived module.\n   * @param {string} settingsObjectName - The name of the window object holding settings (e.g., 'generalSettings').\n   * @param {string} defaultTabId - The default tab ID for the module.\n   * @protected\n   */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ProductEstimatorSettings, [{\n    key: \"_initializeModuleSpecificSettings\",\n    value: function _initializeModuleSpecificSettings(settingsObjectName, defaultTabId) {\n      var localizedSettings = window[settingsObjectName] || {};\n      this.settings = _objectSpread({}, localizedSettings);\n      this.settings.ajaxUrl = localizedSettings.ajaxUrl || (typeof ajaxurl !== 'undefined' ? ajaxurl : '/wp-admin/admin-ajax.php');\n      this.settings.nonce = localizedSettings.nonce || window.productEstimatorSettings && window.productEstimatorSettings.nonce || '';\n\n      // Ensure 'actions' is an object, merge with any global/default actions\n      var defaultActions = window.productEstimatorSettings && window.productEstimatorSettings.actions || {};\n      this.settings.actions = _objectSpread(_objectSpread({}, defaultActions), localizedSettings.actions || {});\n      // For simple modules, ensure a basic save_settings action if nothing else is provided\n      if (!this.settings.actions.save_settings && defaultTabId) {\n        this.settings.actions.save_settings = \"save_\".concat(defaultTabId, \"_settings\");\n      }\n\n      // Ensure 'selectors' is an object, merge with any global/default selectors\n      var defaultSelectors = window.productEstimatorSettings && window.productEstimatorSettings.selectors || {};\n      this.settings.selectors = _objectSpread(_objectSpread({}, defaultSelectors), localizedSettings.selectors || {});\n      this.settings.i18n = _objectSpread(_objectSpread({}, window.productEstimatorSettings && window.productEstimatorSettings.i18n), localizedSettings.i18n || {});\n      this.settings.tab_id = localizedSettings.tab_id || defaultTabId;\n      this.settings.settingsObjectName = settingsObjectName;\n\n      // The 'option_name' should ideally always come from localizedSettings.\n      // If it might be missing, you'd need a strategy (e.g., a global default or error).\n      if (typeof this.settings.option_name === 'undefined') {\n        // Consider a fallback if appropriate:\n        // this.settings.option_name = 'product_estimator_settings'; // Example global default\n      }\n\n      // Diagnostic logs (keep these or similar)\n      if (typeof localizedSettings.actions === 'undefined') {\n        // Check original localizedSettings\n        this.logger.warn('ProductEstimatorSettings: actions is undefined in localizedSettings');\n      }\n      if (typeof localizedSettings.selectors === 'undefined') {\n        // Check original localizedSettings\n        this.logger.warn('ProductEstimatorSettings: selectors is undefined in localizedSettings');\n      }\n    }\n    /**\n     * Finalize module settings on document.ready (e.g., update nonce).\n     * @param {string} settingsObjectName - The name of the window object holding settings.\n     * @protected\n     */\n  }, {\n    key: \"_finalizeModuleSettings\",\n    value: function _finalizeModuleSettings(settingsObjectName) {\n      var updatedLocalizedSettingsOnReady = window[settingsObjectName] || {};\n      if (updatedLocalizedSettingsOnReady.nonce) {\n        this.settings.nonce = updatedLocalizedSettingsOnReady.nonce;\n      }\n    }\n\n    /**\n     * Ensure all required global variables exist to prevent reference errors (for orchestrator).\n     */\n  }, {\n    key: \"ensureGlobalVariables\",\n    value: function ensureGlobalVariables() {\n      window.featureSwitchesSettings = window.featureSwitchesSettings || {\n        tab_id: 'feature_switches',\n        i18n: {}\n      };\n      window.generalSettings = window.generalSettings || {\n        tab_id: 'general',\n        i18n: {}\n      };\n      window.netsuiteSettings = window.netsuiteSettings || {\n        tab_id: 'netsuite',\n        i18n: {}\n      };\n      window.notificationSettings = window.notificationSettings || {\n        tab_id: 'notifications',\n        i18n: {}\n      };\n      window.pricingRulesSettings = window.pricingRulesSettings || {\n        tab_id: 'pricing_rules',\n        i18n: {}\n      };\n      window.productAdditionsSettings = window.productAdditionsSettings || {\n        tab_id: 'product_additions',\n        i18n: {}\n      };\n      window.productUpgradesSettings = window.productUpgradesSettings || {\n        tab_id: 'product_upgrades',\n        i18n: {}\n      };\n      window.similarProductsSettings = window.similarProductsSettings || {\n        tab_id: 'similar_products',\n        i18n: {}\n      };\n      window.labelSettings = window.labelSettings || {\n        tab_id: 'labels',\n        i18n: {}\n      };\n      window.productEstimatorSettings = window.productEstimatorSettings || {\n        ajax_url: typeof ajaxurl !== 'undefined' ? ajaxurl : '/wp-admin/admin-ajax.php',\n        nonce: '',\n        i18n: {\n          unsavedChanges: 'You have unsaved changes. Are you sure you want to leave this tab?',\n          saveSuccess: 'Settings saved successfully.',\n          saveError: 'Error saving settings.',\n          saving: 'Saving...'\n        }\n      };\n    }\n\n    /**\n     * Initialize the main Settings Manager (orchestrator).\n     */\n  }, {\n    key: \"mainInit\",\n    value: function mainInit() {\n      var urlTab = this.getTabFromUrl();\n      this.currentTab = urlTab !== null ? urlTab : 'general';\n      this.$('.tab-content').hide();\n      this.$(\"#\".concat(this.currentTab)).show();\n      this.$('.nav-tab').removeClass('nav-tab-active');\n      this.$(\".nav-tab[data-tab=\\\"\".concat(this.currentTab, \"\\\"]\")).addClass('nav-tab-active');\n      this.bindMainEvents();\n      this.initFormChangeTracking();\n      this.initializeValidation(); // Global validation for forms handled by orchestrator\n    }\n\n    /**\n     * Bind event handlers for the main Settings Manager (orchestrator).\n     */\n  }, {\n    key: \"bindMainEvents\",\n    value: function bindMainEvents() {\n      var _this2 = this;\n      this.$('.nav-tab-wrapper').on('click', '.nav-tab', this.handleTabClick.bind(this));\n      this.$(document).on('submit', 'form.product-estimator-form', function (e) {\n        var $form = _this2.$(e.currentTarget);\n        if ($form.hasClass('pe-vtabs-tab-form') && $form.attr('data-sub-tab-id')) {\n          return;\n        }\n        e.preventDefault();\n        _this2.handleAjaxFormSubmit(e, $form);\n      });\n      this.$(window).on('beforeunload', this.handleBeforeUnload.bind(this));\n    }\n\n    /**\n     * Handle AJAX form submission for orchestrator-managed forms.\n     * @param {Event} e - Submit event\n     * @param {jQuery} [$form] - Optional: The form element.\n     */\n  }, {\n    key: \"handleAjaxFormSubmit\",\n    value: function handleAjaxFormSubmit(e, $form) {\n      var _this3 = this;\n      $form = $form || this.$(e.target);\n      var tabId = $form.closest('.tab-content').attr('id') || $form.data('tab');\n      var formData = $form.serialize();\n      $form.find('input[type=\"checkbox\"]').each(function (i, el) {\n        var $cb = _this3.$(el);\n        if (!$cb.is(':checked')) {\n          var name = $cb.attr('name');\n          if (name) {\n            var paramRegex = new RegExp(\"(^|&)\".concat(encodeURIComponent(name).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"(?:=[^&]*)?\"));\n            if (formData.match(paramRegex) === null) {\n              formData += \"&\".concat(encodeURIComponent(name), \"=0\");\n            }\n          }\n        }\n      });\n      formData = formData.replace(/^&+/, '').replace(/&&+/g, '&');\n      this.showFormLoading($form);\n      var ajaxAction = \"save_\".concat(tabId, \"_settings\");\n      var localizedData = window.productEstimatorSettings || {\n        nonce: '',\n        ajax_url: ajaxurl,\n        i18n: {}\n      };\n      var ajaxDataPayload = {\n        action: ajaxAction,\n        nonce: localizedData.nonce,\n        form_data: formData\n      };\n      _utils__WEBPACK_IMPORTED_MODULE_3__.ajax.ajaxRequest({\n        url: localizedData.ajax_url,\n        type: 'POST',\n        data: ajaxDataPayload\n      }).then(function (response) {\n        _this3.showNotice(response.message || localizedData.i18n.saveSuccess, 'success');\n        if (_this3.formChangeTrackers) {\n          // Ensure orchestrator properties exist\n          _this3.formChangeTrackers[tabId] = false;\n        }\n        if (tabId === _this3.currentTab) {\n          _this3.formChanged = false;\n        }\n      }).catch(function (error) {\n        var errorMessage = error && error.message ? error.message : localizedData.i18n.saveError;\n        _this3.showNotice(errorMessage, 'error');\n      }).finally(function () {\n        _this3.hideFormLoading($form);\n      });\n    }\n\n    /**\n     * Show loading state for a form.\n     * @param {jQuery} $form - The form element.\n     */\n  }, {\n    key: \"showFormLoading\",\n    value: function showFormLoading($form) {\n      var $submitButton = $form.find(':submit');\n      $submitButton.prop('disabled', true).addClass('loading');\n      $submitButton.data('original-text', $submitButton.val());\n      var savingText = window.productEstimatorSettings && window.productEstimatorSettings.i18n && window.productEstimatorSettings.i18n.saving ? window.productEstimatorSettings.i18n.saving : 'Saving...';\n      $submitButton.val(savingText);\n    }\n\n    /**\n     * Hide loading state for a form.\n     * @param {jQuery} $form - The form element.\n     */\n  }, {\n    key: \"hideFormLoading\",\n    value: function hideFormLoading($form) {\n      var $submitButton = $form.find(':submit');\n      $submitButton.prop('disabled', false).removeClass('loading');\n      if ($submitButton.data('original-text')) {\n        $submitButton.val($submitButton.data('original-text'));\n      }\n    }\n\n    /**\n     * Initialize form change tracking for each tab's form (orchestrator).\n     */\n  }, {\n    key: \"initFormChangeTracking\",\n    value: function initFormChangeTracking() {\n      var self = this;\n      this.$('.tab-content').each(function () {\n        var tabId = self.$(this).attr('id');\n        if (self.formChangeTrackers) {\n          self.formChangeTrackers[tabId] = false;\n        }\n        self.$(\"#\".concat(tabId, \" :input\")).on('change input', function () {\n          if (self.formChangeTrackers) {\n            self.formChangeTrackers[tabId] = true;\n          }\n          if (tabId === self.currentTab) {\n            self.formChanged = true;\n          }\n        });\n      });\n    }\n\n    /**\n     * Initialize form validation for orchestrator-managed forms.\n     */\n  }, {\n    key: \"initializeValidation\",\n    value: function initializeValidation() {\n      var _this4 = this;\n      this.$('.product-estimator-form').each(function (i, form) {\n        var $form = _this4.$(form);\n        // Apply only if not a module-specific form that handles its own validation\n        if (!$form.data('module-managed-validation')) {\n          $form.find('input[type=\"email\"]').on('change', function (e) {\n            var $input = _this4.$(e.currentTarget);\n            if ($input.val() && !_utils__WEBPACK_IMPORTED_MODULE_3__.validation.validateEmail($input.val())) {\n              _this4.showFieldError($input, window.productEstimatorSettings.i18n.invalidEmail || 'Invalid email address');\n            } else {\n              _this4.clearFieldError($input);\n            }\n          });\n          $form.find('input[type=\"number\"]').on('change', function (e) {\n            var $input = _this4.$(e.currentTarget);\n            var value = parseInt($input.val(), 10);\n            var min = parseInt($input.attr('min') || 0, 10);\n            var max = parseInt($input.attr('max') || 9999, 10);\n            var i18nSettings = window.productEstimatorSettings && window.productEstimatorSettings.i18n;\n            if (isNaN(value) || value < min || value > max) {\n              var message = i18nSettings && i18nSettings.numberRange ? i18nSettings.numberRange.replace('%min%', min).replace('%max%', max) : \"Value must be between \".concat(min, \" and \").concat(max);\n              _this4.showFieldError($input, message);\n            } else {\n              _this4.clearFieldError($input);\n            }\n          });\n        }\n      });\n    }\n\n    /**\n     * Get the active tab from URL.\n     * @returns {string|null} The active tab or null.\n     */\n  }, {\n    key: \"getTabFromUrl\",\n    value: function getTabFromUrl() {\n      var urlParams = new URLSearchParams(window.location.search);\n      return urlParams.get('tab');\n    }\n\n    /**\n     * Handle tab click for orchestrator.\n     * @param {Event} e - Click event.\n     */\n  }, {\n    key: \"handleTabClick\",\n    value: function handleTabClick(e) {\n      e.preventDefault();\n      var newTab = this.$(e.currentTarget).data('tab');\n      var i18nSettings = window.productEstimatorSettings && window.productEstimatorSettings.i18n;\n      if (this.formChanged) {\n        if (!confirm(i18nSettings.unsavedChanges || 'You have unsaved changes. Are you sure?')) {\n          return;\n        }\n      }\n      this.switchTab(newTab);\n    }\n\n    /**\n     * Switch to a different tab (orchestrator).\n     * @param {string} tabId - The tab to switch to.\n     */\n  }, {\n    key: \"switchTab\",\n    value: function switchTab(tabId) {\n      var url = new URL(window.location.href);\n      url.searchParams.set('tab', tabId);\n      window.history.pushState({}, '', url.toString());\n      this.$('.nav-tab').removeClass('nav-tab-active');\n      this.$(\".nav-tab[data-tab=\\\"\".concat(tabId, \"\\\"]\")).addClass('nav-tab-active');\n      this.$('.tab-content').hide();\n      this.$(\"#\".concat(tabId)).show();\n      var previousTab = this.currentTab;\n      this.currentTab = tabId;\n      this.formChanged = this.formChangeTrackers && this.formChangeTrackers[tabId] || false;\n      this.$(document).trigger('product_estimator_tab_changed', [tabId, previousTab]);\n    }\n\n    /**\n     * Handle beforeunload event to warn about unsaved changes (orchestrator).\n     * @param {Event} e - BeforeUnload event.\n     * @returns {string|undefined} Warning message if there are unsaved changes, undefined otherwise\n     */\n  }, {\n    key: \"handleBeforeUnload\",\n    value: function handleBeforeUnload(e) {\n      var hasChanges = false;\n      if (this.formChangeTrackers) {\n        for (var tabId in this.formChangeTrackers) {\n          if (this.formChangeTrackers[tabId]) {\n            hasChanges = true;\n            break;\n          }\n        }\n      }\n      if (hasChanges) {\n        var i18nSettings = window.productEstimatorSettings && window.productEstimatorSettings.i18n;\n        var message = i18nSettings.unsavedChanges || 'You have unsaved changes. Are you sure?';\n        e.returnValue = message;\n        return message;\n      }\n    }\n\n    /**\n     * Utility method to clear 'sub_tab' from the URL.\n     * Can be called by derived modules.\n     */\n  }, {\n    key: \"clearSubTabFromUrl\",\n    value: function clearSubTabFromUrl() {\n      var url = new URL(window.location.href);\n      if (url.searchParams.has('sub_tab')) {\n        url.searchParams.delete('sub_tab');\n        window.history.replaceState({}, '', url.toString());\n      }\n    }\n\n    /**\n     * Public method to show field error. Uses the 'validation' utility.\n     * @param {jQuery|HTMLElement} field - The field with an error.\n     * @param {string} message - The error message.\n     */\n  }, {\n    key: \"showFieldError\",\n    value: function showFieldError(field, message) {\n      _utils__WEBPACK_IMPORTED_MODULE_3__.validation.showFieldError(this.$(field), message);\n    }\n\n    /**\n     * Public method to clear field error. Uses the 'validation' utility.\n     * @param {jQuery|HTMLElement} field - The field to clear error for.\n     */\n  }, {\n    key: \"clearFieldError\",\n    value: function clearFieldError(field) {\n      _utils__WEBPACK_IMPORTED_MODULE_3__.validation.clearFieldError(this.$(field));\n    }\n\n    /**\n     * Public method to show notice. Uses the 'validation' utility.\n     * @param {string} message - The message to show.\n     * @param {string} [type] - Notice type ('success' or 'error').\n     */\n  }, {\n    key: \"showNotice\",\n    value: function showNotice(message) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'success';\n      _utils__WEBPACK_IMPORTED_MODULE_3__.validation.showNotice(message, type);\n    }\n\n    /**\n     * Initialize a Select2 dropdown with standardized configuration\n     * @param {jQuery} $element - jQuery element to initialize Select2 on\n     * @param {string} placeholderText - Placeholder text to display\n     * @param {object} config - Additional configuration options for Select2\n     * @returns {jQuery|null} The initialized element or null if initialization failed\n     */\n  }, {\n    key: \"initSelect2\",\n    value: function initSelect2($element, placeholderText) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (!$element || !$element.length) {\n        return null;\n      }\n      if (!this.$ || !this.$.fn.select2) {\n        return null;\n      }\n\n      // Default configuration options\n      var defaultConfig = {\n        placeholder: placeholderText || 'Select an option',\n        width: 'resolve',\n        // 'style' or '100%' might be better depending on CSS\n        allowClear: true,\n        dropdownCssClass: 'product-estimator-dropdown' // Custom class for styling\n      };\n\n      // Merge with custom config, with custom taking precedence\n      var mergedConfig = _objectSpread(_objectSpread({}, defaultConfig), config);\n      try {\n        $element.select2(mergedConfig);\n\n        // Option to clear initial selection\n        if (config.clearInitial) {\n          $element.val(null).trigger('change');\n        }\n        return $element;\n      } catch (error) {\n        return null;\n      }\n    }\n\n    /**\n     * Initializes multiple Select2 dropdowns in batch\n     * @param {object} options - Configuration options\n     * @param {Array} options.elements - Array of elements to initialize\n     * @param {object} options.i18n - Internationalization strings (defaults to this.settings.i18n)\n     * @param {string} options.moduleName - Module name for logging (defaults to this.settings.tab_id)\n     * @param {number} options.delay - Delay in ms before initialization (defaults to 100)\n     * @returns {void}\n     */\n  }, {\n    key: \"initializeSelect2Dropdowns\",\n    value: function initializeSelect2Dropdowns(options) {\n      var _this5 = this;\n      var _options$elements = options.elements,\n        elements = _options$elements === void 0 ? [] : _options$elements,\n        _options$i18n = options.i18n,\n        i18n = _options$i18n === void 0 ? this.settings.i18n || {} : _options$i18n,\n        _options$moduleName = options.moduleName,\n        moduleName = _options$moduleName === void 0 ? this.settings.tab_id || 'Module' : _options$moduleName,\n        _options$delay = options.delay,\n        delay = _options$delay === void 0 ? 100 : _options$delay;\n      if (!this.$ || !this.$.fn.select2) {\n        var logger = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.createLogger)(moduleName);\n        logger.warn(\"Select2 not available for \".concat(moduleName));\n        return;\n      }\n\n      // Use setTimeout to ensure elements are fully rendered\n      setTimeout(function () {\n        elements.forEach(function (el) {\n          if (!el || !el.element) {\n            return;\n          }\n          var placeholder = i18n[el.placeholderKey] || el.fallbackText || \"Select \".concat(el.name);\n          _this5.initSelect2(el.element, placeholder, el.config || {});\n        });\n      }, delay);\n    }\n\n    /**\n     * Destroy and re-initialize Select2 components (useful when elements were hidden)\n     * @param {jQuery} $element - Select2 element to refresh\n     * @param {object} config - Configuration to apply when re-initializing\n     * @returns {jQuery|null} The refreshed element or null if refresh failed\n     */\n  }, {\n    key: \"refreshSelect2\",\n    value: function refreshSelect2($element) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!$element || !$element.length) {\n        return null;\n      }\n      try {\n        // Get current placeholder if not provided\n        var placeholder = config.placeholder || $element.data('placeholder') || '';\n\n        // Destroy and re-initialize\n        $element.select2('destroy');\n        return this.initSelect2($element, placeholder, config);\n      } catch (error) {\n        return null;\n      }\n    }\n  }]);\n}(); // Initialize the main orchestrator when document is ready\n// This ensures ProductEstimatorSettings is available globally if needed by modules\n// before they might be instantiated.\njQuery(document).ready(function () {\n  if (!window.ProductEstimatorSettingsInstance) {\n    // Ensure single instance of orchestrator\n    window.ProductEstimatorSettingsInstance = new ProductEstimatorSettings();\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (ProductEstimatorSettings);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/admin/common/ProductEstimatorSettings.js\n");

/***/ }),

/***/ "./src/js/admin/common/VerticalTabbedModule.js":
/*!*****************************************************!*\
  !*** ./src/js/admin/common/VerticalTabbedModule.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n/* harmony import */ var _ProductEstimatorSettings__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ProductEstimatorSettings */ \"./src/js/admin/common/ProductEstimatorSettings.js\");\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n/**\n * VerticalTabbedModule.js\n *\n * Base class for settings modules that use a vertical tabbed interface.\n * Handles common vertical tab navigation, AJAX form submission, and state management.\n * Extends ProductEstimatorSettings.\n */\n // Import ajax utility and logger creator\n\n // Adjust path if ProductEstimatorSettings is in a different directory\n\n// Module-specific logger. Can be this.logger if preferred and initialized in constructor.\nvar logger = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('VerticalTabbedModule');\nvar VerticalTabbedModule = /*#__PURE__*/function (_ProductEstimatorSett) {\n  /**\n   * Constructor for the VerticalTabbedModule.\n   * @param {object} config - Configuration object for the module.\n   * @param {string} config.mainTabId - The ID of the main horizontal tab for this module (e.g., 'labels', 'notifications'). This is passed as defaultTabId to ProductEstimatorSettings.\n   * @param {string} config.defaultSubTabId - The default vertical sub-tab to show if none is specified.\n   * @param {string} config.ajaxActionPrefix - The prefix for AJAX save actions (e.g., 'save_labels' for 'save_labels_settings').\n   * @param {string} config.localizedDataName - The name of the global object holding localized data for this module (e.g., 'labelSettingsData'). This is passed as settingsObjectName to ProductEstimatorSettings.\n   */\n  function VerticalTabbedModule(config) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, VerticalTabbedModule);\n    // Call the parent constructor (ProductEstimatorSettings)\n    // map mainTabId to defaultTabId for ProductEstimatorSettings' module mode\n    // map localizedDataName to settingsObjectName\n    _this = _callSuper(this, VerticalTabbedModule, [{\n      isModule: true,\n      settingsObjectName: config.localizedDataName,\n      defaultTabId: config.mainTabId\n    }]);\n    _this.config = config; // <<<< ADD THIS LINE\n\n    // Store VTM-specific configuration.\n    // this.settings is populated by the super() call with ajaxUrl, nonce, i18n, tab_id (which is mainTabId)\n    _this.vtmConfig = {\n      defaultSubTabId: config.defaultSubTabId,\n      ajaxActionPrefix: config.ajaxActionPrefix\n      // mainTabId and localizedDataName are available via this.settings.tab_id and this.settingsObjectName respectively\n    };\n    _this.$container = null; // Will be jQuery object for `#mainTabId`\n\n    // Validate VTM-specific config parts that are not covered by super's implicit validation via settingsObjectName/defaultTabId\n    if (!_this.vtmConfig.defaultSubTabId || !_this.vtmConfig.ajaxActionPrefix) {\n      // The super constructor would have already run, but this module might not function correctly.\n      // No explicit return here as super() doesn't allow return before it.\n      // The moduleInit will likely fail or not run as expected if $container isn't found or if these configs are vital early.\n    }\n\n    // Note: jQuery(document).ready() and calling moduleInit() is handled by the ProductEstimatorSettings base class.\n    // this.settings (formerly this.localizedData) is initialized by super().\n    // Fallbacks for nonce and ajax_url within this.settings are handled by ProductEstimatorSettings.\n    // The specific VTM fallback from window.productEstimatorSettings for nonce/ajax_url might need review\n    // if the base class's fallback (from ajaxurl global or direct properties) isn't sufficient.\n    // For now, assume base class handles it.\n    return _this;\n  }\n\n  /**\n   * Module-specific initialization, called by ProductEstimatorSettings on document.ready.\n   * Overridden from ProductEstimatorSettings.\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(VerticalTabbedModule, _ProductEstimatorSett);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(VerticalTabbedModule, [{\n    key: \"moduleInit\",\n    value: function moduleInit() {\n      var _this2 = this;\n      // this.settings.tab_id is the mainTabId for this VTM instance\n      this.$container = this.$(\"#\".concat(this.settings.tab_id));\n      if (!this.$container.length) {\n        // Optionally show a global notice if ProductEstimatorSettings instance is available\n        if (window.ProductEstimatorSettingsInstance) {\n          window.ProductEstimatorSettingsInstance.showNotice(\"Error: UI container for '\".concat(this.settings.tab_id, \"' settings not found. Some features might be unavailable.\"), 'error');\n        }\n        return; // Halt initialization if container is missing\n      }\n      this.bindCommonVTMEvents(); // Renamed from bindCommonEvents to avoid clash if base has it\n      this.bindModuleSpecificEvents(); // Hook for child classes (e.g., AdminTableManager)\n\n      // If this module's main tab is the currently active main tab in the UI\n      // Access currentTab from the global orchestrator instance if available\n      var orchestrator = window.ProductEstimatorSettingsInstance;\n      if (orchestrator && orchestrator.currentTab === this.settings.tab_id) {\n        // Use a small timeout to ensure the DOM is fully settled, especially if tab content was just shown\n        setTimeout(function () {\n          _this2.setupVerticalTabs();\n          _this2.onMainTabActivated(); // Hook for child classes\n        }, 100);\n      }\n    }\n\n    /**\n     * Binds event handlers common to VerticalTabbedModules.\n     */\n  }, {\n    key: \"bindCommonVTMEvents\",\n    value: function bindCommonVTMEvents() {\n      // Listen for global main tab changes (handled by ProductEstimatorSettings orchestrator)\n      // This event is triggered by the orchestrator.\n      this.$(document).on('product_estimator_tab_changed', this.handleMainTabChanged.bind(this));\n\n      // Form submission for forms within this module that are specifically for VTM handling\n      // These forms should have class 'pe-vtabs-tab-form'\n      this.$container.on('submit.vtm', 'form.pe-vtabs-tab-form', this.handleVTMFormSubmit.bind(this));\n\n      // Click handling for vertical tab navigation links - use selectors from PHP's get_common_script_data\n      // ENHANCEMENT: Use a very broad selector that will catch all possible tab links\n      var navSelector = this.settings.selectors.verticalTabNav || '.pe-vtabs-nav-list, .vertical-tabs-nav';\n\n      // Use a more robust selector that will catch any links in the nav area\n      this.$container.on('click.vtm', \"\".concat(navSelector, \" a, .pe-vtabs-nav-item a, .tab-item a\"), this.handleVerticalTabClick.bind(this));\n\n      // Fix data attributes on tab links during binding phase\n      this.setTabAttributesOnLinks();\n    }\n\n    /**\n     * Sets data-tab attributes on any tab links that are missing them.\n     * This ensures all links have consistent data attributes.\n     */\n  }, {\n    key: \"setTabAttributesOnLinks\",\n    value: function setTabAttributesOnLinks() {\n      var _this3 = this;\n      // Find all potential tab links\n      var navSelector = this.settings.selectors.verticalTabNav || '.pe-vtabs-nav-list, .vertical-tabs-nav';\n      var $navLinks = this.$container.find(\"\".concat(navSelector, \" a\"));\n\n      // For each link, ensure it has the proper data-tab attribute based on the URL\n      $navLinks.each(function (i, link) {\n        var $link = _this3.$(link);\n        var href = $link.attr('href') || '';\n\n        // If no data-tab attribute but the href has sub_tab parameter\n        if (!$link.attr('data-tab') && href.includes('sub_tab=')) {\n          var match = href.match(/[?&]sub_tab=([^&#]*)/i);\n          if (match && match[1]) {\n            var subTabId = decodeURIComponent(match[1].replace(/\\+/g, ' '));\n            $link.attr('data-tab', subTabId);\n          }\n        }\n      });\n    }\n\n    /**\n     * Placeholder for module-specific event bindings. Override in child classes.\n     * Child classes should implement this method to bind their own specific events.\n     * For example, AdminTableManager uses this to bind table/form events.\n     * This method is called during initialization after common events are bound.\n     * @returns {void}\n     */\n  }, {\n    key: \"bindModuleSpecificEvents\",\n    value: function bindModuleSpecificEvents() {\n      // Child classes like AdminTableManager will override this to bind their own specific events.\n    }\n\n    /**\n     * Called when this module's main horizontal tab becomes active.\n     * Child classes should override this method to implement specific activation logic.\n     * This is the ideal place to refresh or initialize components that need to be\n     * visible when the tab is shown.\n     * @returns {void}\n     */\n  }, {\n    key: \"onMainTabActivated\",\n    value: function onMainTabActivated() {\n      // Child classes can implement specific logic here.\n    }\n\n    /**\n     * Called when this module's main horizontal tab becomes inactive.\n     * Child classes should override this method to implement specific deactivation logic.\n     * This is the ideal place to clean up resources or pause processes when the tab\n     * is no longer visible.\n     * @returns {void}\n     */\n  }, {\n    key: \"onMainTabDeactivated\",\n    value: function onMainTabDeactivated() {\n      // Child classes can implement specific logic here.\n    }\n  }, {\n    key: \"setupVerticalTabs\",\n    value: function setupVerticalTabs() {\n      if (!this.$container || !this.$container.length) {\n        return;\n      }\n\n      // Use selectors from settings that are provided by PHP via get_common_script_data\n      var navSelector = this.settings.selectors.verticalTabNav || '.pe-vtabs-nav-list, .vertical-tabs-nav';\n      var contentSelector = this.settings.selectors.verticalTabPane || '.pe-vtabs-tab-panel, .vertical-tab-content';\n      var $verticalTabsNav = this.$container.find(navSelector);\n      var $verticalTabContents = this.$container.find(contentSelector);\n      if (!$verticalTabsNav.length || !$verticalTabContents.length) {\n        return;\n      }\n\n      // Make sure all tab links have data-tab attributes\n      // This ensures data attributes are added right before tab initialization\n      this.setTabAttributesOnLinks();\n      var activeSubTabId = this.vtmConfig.defaultSubTabId;\n      var urlParams = new URLSearchParams(window.location.search);\n      var urlSubTab = urlParams.get('sub_tab');\n      if (urlSubTab && $verticalTabsNav.find(\"a[data-tab=\\\"\".concat(urlSubTab, \"\\\"]\")).length) {\n        activeSubTabId = urlSubTab;\n      } else {\n        var $phpActiveLink = $verticalTabsNav.find('.pe-vtabs-nav-item.active a, .tab-item.active a');\n        if ($phpActiveLink.length) {\n          activeSubTabId = $phpActiveLink.data('tab');\n        }\n      }\n      if (!$verticalTabsNav.find(\"a[data-tab=\\\"\".concat(activeSubTabId, \"\\\"]\")).length) {\n        var $firstTabLink = $verticalTabsNav.find('a[data-tab]').first();\n        if ($firstTabLink.length) {\n          activeSubTabId = $firstTabLink.data('tab');\n        } else {\n          return;\n        }\n      }\n      this.showVerticalTab(activeSubTabId, false); // false to prevent history update on initial load\n\n      this.adjustTabContentHeight();\n      // Ensure resize event is namespaced to this module instance to avoid conflicts\n      this.$(window).off(\"resize.vtm.\".concat(this.settings.tab_id)).on(\"resize.vtm.\".concat(this.settings.tab_id), this.adjustTabContentHeight.bind(this));\n    }\n  }, {\n    key: \"handleVerticalTabClick\",\n    value: function handleVerticalTabClick(e) {\n      e.preventDefault();\n      var $targetLink = this.$(e.currentTarget);\n\n      // Multiple ways to get the subTabId, with fallbacks\n      var subTabId = null;\n      var element = $targetLink[0];\n\n      // Direct DOM attribute access - most reliable for elements with data-* attributes\n      var domTabAttr = element ? element.getAttribute('data-tab') : null;\n      if (domTabAttr) {\n        subTabId = domTabAttr;\n      }\n      // Check if there's a data-tabid attribute\n      else if (element && element.hasAttribute('data-tabid')) {\n        subTabId = element.getAttribute('data-tabid');\n      }\n\n      // If we have a subTabId from any of the data-* attributes\n      if (subTabId) {\n        this.showVerticalTab(subTabId, true); // true to update history\n        return;\n      }\n\n      // No data-* attributes found, try the URL as last resort\n      // THIS IS THE MOST IMPORTANT FALLBACK - we prioritize this approach for more reliability\n      var href = $targetLink.attr('href');\n\n      // Direct regex extraction for sub_tab parameter - most reliable method\n      // This works even when URL is relative or malformed\n      if (href) {\n        var subTabMatch = href.match(/[?&]sub_tab=([^&#]*)/i);\n        if (subTabMatch && subTabMatch[1]) {\n          var subTabFromRegex = decodeURIComponent(subTabMatch[1].replace(/\\+/g, ' '));\n          this.showVerticalTab(subTabFromRegex, true);\n\n          // Fix the data-tab attribute for future clicks\n          $targetLink.attr('data-tab', subTabFromRegex);\n          return;\n        }\n\n        // As a backup, try standard URL parsing\n        if (href.includes('sub_tab=')) {\n          try {\n            var hrefUrl = new URL(href, window.location.origin);\n            var subTabFromHref = hrefUrl.searchParams.get('sub_tab');\n            if (subTabFromHref) {\n              this.showVerticalTab(subTabFromHref, true);\n              // Fix the data-tab attribute to prevent future issues\n              $targetLink.attr('data-tab', subTabFromHref);\n              return;\n            }\n          } catch (e) {\n            // If URL parsing fails, try a more direct approach with URLSearchParams\n            try {\n              var queryString = href.split('?')[1];\n              if (queryString) {\n                var _subTabFromHref = new URLSearchParams(queryString).get('sub_tab');\n                if (_subTabFromHref) {\n                  this.showVerticalTab(_subTabFromHref, true);\n                  // Fix the data-tab attribute to prevent future issues\n                  $targetLink.attr('data-tab', _subTabFromHref);\n                  return;\n                }\n              }\n            } catch (e2) {\n              logger.error('Error parsing URL or query string:', e2);\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"adjustTabContentHeight\",\n    value: function adjustTabContentHeight() {\n      if (!this.$container || !this.$container.length) return;\n\n      // Use provided selectors with fallbacks\n      var navAreaSelector = this.settings.selectors.verticalTabNavArea || '.pe-vtabs-nav-area, .vertical-tabs';\n      var contentAreaSelector = this.settings.selectors.verticalTabContentArea || '.pe-vtabs-content-area, .vertical-tabs-content';\n      var $nav = this.$container.find(navAreaSelector);\n      var $contentWrapper = this.$container.find(contentAreaSelector);\n      if ($nav.length && $contentWrapper.length) {\n        var navHeight = $nav.outerHeight();\n        if (navHeight) {\n          // Ensure navHeight is a valid number\n          $contentWrapper.css('min-height', navHeight + 'px');\n        }\n      }\n    }\n  }, {\n    key: \"showVerticalTab\",\n    value: function showVerticalTab(subTabId) {\n      var _this4 = this;\n      var updateHistory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!this.$container || !this.settings.tab_id || !subTabId) {\n        var _this$$container;\n        logger.warn('VerticalTabbedModule: Cannot show vertical tab due to missing container, mainTabId, or subTabId.', {\n          containerExists: !!((_this$$container = this.$container) !== null && _this$$container !== void 0 && _this$$container.length),\n          mainTabId: this.settings.tab_id,\n          subTabId: subTabId\n        });\n        return;\n      }\n\n      // Use shared selectors from settings with fallbacks\n      var navSelector = this.settings.selectors.verticalTabNav || '.pe-vtabs-nav-list, .vertical-tabs-nav';\n      var contentSelector = this.settings.selectors.verticalTabPane || '.pe-vtabs-tab-panel, .vertical-tab-content';\n      var navItemSelector = this.settings.selectors.verticalTabNavItem || '.pe-vtabs-nav-item, .tab-item';\n      var $verticalTabsNav = this.$container.find(navSelector);\n      var $verticalTabContents = this.$container.find(contentSelector);\n\n      // Remove active class from all nav items\n      $verticalTabsNav.find(navItemSelector).removeClass('active');\n\n      // Find the tab link directly using data attribute\n      var $activeLink = $verticalTabsNav.find(\"a[data-tab=\\\"\".concat(subTabId, \"\\\"]\"));\n\n      // If not found, try other ways to find the link\n      if (!$activeLink.length) {\n        // Look for links with matching href containing the tab ID\n        $activeLink = $verticalTabsNav.find(\"a[href*=\\\"sub_tab=\".concat(subTabId, \"\\\"]\"));\n\n        // If still not found, try more aggressive matching\n        if (!$activeLink.length) {\n          $verticalTabsNav.find('a').each(function (i, link) {\n            var $link = _this4.$(link);\n            var href = $link.attr('href') || '';\n\n            // If this link's href contains our tab ID\n            if (href.includes(subTabId)) {\n              $activeLink = $link;\n              // Set the data-tab attribute to fix future lookups\n              $link.attr('data-tab', subTabId);\n            }\n          });\n        }\n      }\n\n      // Now add active class to the parent li of the found link\n      if ($activeLink.length) {\n        $activeLink.closest(navItemSelector).addClass('active');\n      } else {\n        // No active link found - this is OK if this is the initial load\n        // and we'll select the default tab\n      }\n\n      // Hide and deactivate all tab content panels\n      $verticalTabContents.hide().removeClass('active');\n\n      // Find and activate the selected content panel\n      // First try exact ID match\n      var sanitizedTabId = subTabId.replace(/[^a-zA-Z0-9-_]/g, '');\n      var $activeContentPanel = this.$container.find(\"#\".concat(sanitizedTabId));\n\n      // If not found, try more flexible selectors\n      if (!$activeContentPanel.length) {\n        // Try panel with a class that contains the tab ID\n        $activeContentPanel = this.$container.find(\".pe-vtabs-tab-panel-\".concat(sanitizedTabId, \", [data-tab-id=\\\"\").concat(sanitizedTabId, \"\\\"], [data-tab-content=\\\"\").concat(sanitizedTabId, \"\\\"]\"));\n      }\n\n      // If still not found, try searching for a panel that contains the tab ID in class or id\n      if (!$activeContentPanel.length) {\n        $activeContentPanel = this.$container.find(\"[id*=\\\"\".concat(sanitizedTabId, \"\\\"], [class*=\\\"\").concat(sanitizedTabId, \"\\\"]\")).filter('.pe-vtabs-tab-panel, .vertical-tab-content');\n      }\n      if ($activeContentPanel.length) {\n        $activeContentPanel.show().addClass('active');\n      } else {\n        // No matching content panel found with direct ID - try partial matches\n\n        // Last resort: try to find a panel with a similar ID/class\n        var partialMatches = [];\n        var contentPanels = this.$container.find(contentSelector);\n        contentPanels.each(function (i, panel) {\n          var $panel = _this4.$(panel);\n          var panelId = $panel.attr('id') || '';\n          var panelClass = $panel.attr('class') || '';\n\n          // Check if panel ID or class contains parts of the tab ID\n          if (panelId.includes(sanitizedTabId.substring(0, 5)) || panelClass.includes(sanitizedTabId.substring(0, 5))) {\n            partialMatches.push($panel);\n          }\n        });\n        if (partialMatches.length === 1) {\n          // If we have exactly one partial match, use it\n          partialMatches[0].show().addClass('active');\n        } else if (partialMatches.length > 1) {\n          partialMatches[0].show().addClass('active');\n        }\n      }\n      if (updateHistory) {\n        var currentUrl = new URL(window.location.href);\n        currentUrl.searchParams.set('page', currentUrl.searchParams.get('page') || 'product-estimator-settings'); // Ensure page param is present\n        currentUrl.searchParams.set('tab', this.settings.tab_id); // main horizontal tab\n        currentUrl.searchParams.set('sub_tab', subTabId); // vertical sub-tab\n        window.history.pushState({\n          mainTabId: this.settings.tab_id,\n          subTabId: subTabId\n        }, '', currentUrl.toString());\n      }\n      // Trigger a sub-tab changed event, namespaced by the main tab ID\n      this.$(document).trigger(\"pe_sub_tab_changed_\".concat(this.settings.tab_id), [subTabId]);\n    }\n\n    /**\n     * Handles the main horizontal tab change event.\n     * @param {Event} e - The event object.\n     * @param {string} newMainTabId - The ID of the newly activated main horizontal tab.\n     * @param {string} oldMainTabId - The ID of the previously active main horizontal tab.\n     */\n  }, {\n    key: \"handleMainTabChanged\",\n    value: function handleMainTabChanged(e, newMainTabId, oldMainTabId) {\n      var _this5 = this;\n      if (newMainTabId === this.settings.tab_id) {\n        // If this VTM's main tab is now active\n        // Ensure $container is valid, especially if moduleInit was deferred or failed partially\n        if (!this.$container || !this.$container.length) {\n          this.$container = this.$(\"#\".concat(this.settings.tab_id));\n        }\n        if (this.$container.length) {\n          setTimeout(function () {\n            // Use setTimeout to ensure tab content is fully visible and DOM settled\n            _this5.setupVerticalTabs(); // Re-initialize or ensure vertical tabs are correctly set up\n            _this5.onMainTabActivated(); // Call hook for child classes\n          }, 100);\n        } else {\n          // Container not found, log a warning\n          this.logger.warn(\"VerticalTabbedModule: Container for tab '\".concat(this.settings.tab_id, \"' not found when activating main tab\"));\n        }\n      } else if (oldMainTabId === this.settings.tab_id) {\n        // If this VTM's main tab was deactivated\n        this.onMainTabDeactivated(); // Call hook for child classes\n      }\n    }\n\n    /**\n     * Handles AJAX form submission for forms within vertical tabs.\n     * These forms should have the class 'pe-vtabs-tab-form' and a 'data-sub-tab-id' attribute.\n     * @param {Event} e - Submit event.\n     */\n  }, {\n    key: \"handleVTMFormSubmit\",\n    value: function handleVTMFormSubmit(e) {\n      var _this6 = this;\n      var $form = this.$(e.currentTarget);\n      e.preventDefault();\n      var $submitButton = $form.find('.save-settings, button[type=\"submit\"], input[type=\"submit\"]');\n      var $spinner = $form.find('.spinner').first(); // Common spinner class\n\n      // Save TinyMCE editors if any\n      if (typeof tinyMCE !== 'undefined') {\n        $form.find('.wp-editor-area').each(function (idx, editorArea) {\n          var editor = tinyMCE.get(_this6.$(editorArea).attr('id'));\n          if (editor) {\n            editor.save();\n          }\n        });\n      }\n      var formDataStr = $form.serialize();\n      var subTabId = $form.attr('data-sub-tab-id');\n      if (!subTabId || String(subTabId).trim() === '') {\n        this.showNotice('Error: Could not save settings. Form configuration is missing \"data-sub-tab-id\".', 'error');\n        return;\n      }\n\n      // Special handling for multi-select elements using Select2\n      $form.find('select[multiple]').each(function (idx, select) {\n        var $select = _this6.$(select);\n        var name = $select.attr('name');\n\n        // If this is a multi-select that uses Select2\n        if (name && $select.hasClass('pe-select2')) {\n          var values = $select.val();\n\n          // Remove any existing serialized versions of this field\n          var regex = new RegExp(\"\".concat(encodeURIComponent(name), \"=[^&]*&?\"), 'g');\n          formDataStr = formDataStr.replace(regex, '');\n\n          // Add each selected value individually with array notation\n          if (values && values.length) {\n            values.forEach(function (value) {\n              formDataStr += \"&\".concat(encodeURIComponent(name), \"[]=\").concat(encodeURIComponent(value));\n            });\n          } else {\n            // Ensure empty array is sent if nothing selected\n            formDataStr += \"&\".concat(encodeURIComponent(name), \"[]=\");\n          }\n        }\n      });\n\n      // Handle unchecked checkboxes\n      $form.find('input[type=\"checkbox\"]').each(function (idx, cb) {\n        var $cb = _this6.$(cb);\n        var name = $cb.attr('name');\n        if (name && !$cb.is(':checked')) {\n          var paramExistsRegex = new RegExp(\"(^|&)\".concat(encodeURIComponent(name).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"=\"));\n          if (!paramExistsRegex.test(formDataStr)) {\n            formDataStr += \"&\".concat(encodeURIComponent(name), \"=0\");\n          }\n        }\n      });\n      formDataStr = formDataStr.replace(/^&+/, '').replace(/&&+/g, '&');\n      $submitButton.prop('disabled', true);\n      $spinner.addClass('is-active');\n      var ajaxAction = \"\".concat(this.vtmConfig.ajaxActionPrefix, \"_settings\"); // Uses VTM specific prefix\n      var ajaxDataPayload = {\n        action: ajaxAction,\n        nonce: this.settings.nonce,\n        // Nonce from base class settings\n        form_data: formDataStr,\n        sub_tab_id: subTabId.trim(),\n        // Essential for PHP to know which sub-tab's settings to save\n        main_tab_id: this.settings.tab_id // Pass main tab ID for context if needed by backend\n      };\n      _utils__WEBPACK_IMPORTED_MODULE_6__.ajax.ajaxRequest({\n        url: this.settings.ajaxUrl,\n        // ajaxUrl from base class settings\n        type: 'POST',\n        data: ajaxDataPayload\n      }).then(function (response) {\n        var successMsg = response && response.message || _this6.settings.i18n && _this6.settings.i18n.saveSuccess || 'Settings saved successfully.';\n        _this6.showNotice(successMsg, 'success'); // Inherited from ProductEstimatorSettings\n\n        // Reset form change tracking on the main orchestrator if it exists\n        var orchestrator = window.ProductEstimatorSettingsInstance;\n        if (orchestrator && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(orchestrator.formChangeTrackers) === 'object') {\n          orchestrator.formChangeTrackers[_this6.settings.tab_id] = false;\n          if (orchestrator.currentTab === _this6.settings.tab_id) {\n            orchestrator.formChanged = false;\n          }\n        }\n      }).catch(function (error) {\n        var errorMsg = error && error.message ? error.message : _this6.settings.i18n && _this6.settings.i18n.saveError || 'Error saving settings.';\n        _this6.showNotice(errorMsg, 'error'); // Inherited from ProductEstimatorSettings\n      }).finally(function () {\n        $submitButton.prop('disabled', false);\n        $spinner.removeClass('is-active');\n      });\n    }\n\n    // showNotice, showFieldError, clearFieldError are inherited from ProductEstimatorSettings.\n    // No need to redefine them here.\n  }]);\n}(_ProductEstimatorSettings__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (VerticalTabbedModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/admin/common/VerticalTabbedModule.js\n");

/***/ }),

/***/ "./src/js/admin/index.js":
/*!*******************************!*\
  !*** ./src/js/admin/index.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ProductEstimatorAdmin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProductEstimatorAdmin */ \"./src/js/admin/ProductEstimatorAdmin.js\");\n/* harmony import */ var _common_ProductEstimatorSettings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/ProductEstimatorSettings */ \"./src/js/admin/common/ProductEstimatorSettings.js\");\n/* harmony import */ var _modules_GeneralSettingsModule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/GeneralSettingsModule */ \"./src/js/admin/modules/GeneralSettingsModule.js\");\n/* harmony import */ var _modules_NetsuiteSettingsModule__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/NetsuiteSettingsModule */ \"./src/js/admin/modules/NetsuiteSettingsModule.js\");\n/* harmony import */ var _modules_NotificationSettingsModule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/NotificationSettingsModule */ \"./src/js/admin/modules/NotificationSettingsModule.js\");\n/* harmony import */ var _modules_ProductAdditionsSettingsModule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/ProductAdditionsSettingsModule */ \"./src/js/admin/modules/ProductAdditionsSettingsModule.js\");\n/* harmony import */ var _modules_LabelSettingsModule__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/LabelSettingsModule */ \"./src/js/admin/modules/LabelSettingsModule.js\");\n/* harmony import */ var _modules_FeatureSwitchesSettingsModule__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/FeatureSwitchesSettingsModule */ \"./src/js/admin/modules/FeatureSwitchesSettingsModule.js\");\n/* harmony import */ var _modules_PricingRulesSettingsModule__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/PricingRulesSettingsModule */ \"./src/js/admin/modules/PricingRulesSettingsModule.js\");\n/* harmony import */ var _modules_ProductUpgradesSettingsModule__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/ProductUpgradesSettingsModule */ \"./src/js/admin/modules/ProductUpgradesSettingsModule.js\");\n/* harmony import */ var _modules_SimilarProductsSettingsModule__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/SimilarProductsSettingsModule */ \"./src/js/admin/modules/SimilarProductsSettingsModule.js\");\n/**\n * Main entry point for the Product Estimator plugin frontend\n */\n// import './CustomerEstimatesAdmin';\n\n\n\n\n\n\n\n\n\n\n\n\n// This is the main entry point for the frontend script bundle\n// The admin modules are imported separately due to code splitting in webpack\n\n// Frontend functionality can be added here//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYWRtaW4vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDaUM7QUFDVTtBQUNGO0FBQ0M7QUFDSTtBQUNJO0FBQ1g7QUFDVTtBQUNIO0FBQ0c7QUFDQTs7QUFFakQ7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2R1Y3QtZXN0aW1hdG9yLy4vc3JjL2pzL2FkbWluL2luZGV4LmpzPzMzZDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNYWluIGVudHJ5IHBvaW50IGZvciB0aGUgUHJvZHVjdCBFc3RpbWF0b3IgcGx1Z2luIGZyb250ZW5kXG4gKi9cbi8vIGltcG9ydCAnLi9DdXN0b21lckVzdGltYXRlc0FkbWluJztcbmltcG9ydCAnLi9Qcm9kdWN0RXN0aW1hdG9yQWRtaW4nO1xuaW1wb3J0ICcuL2NvbW1vbi9Qcm9kdWN0RXN0aW1hdG9yU2V0dGluZ3MnO1xuaW1wb3J0ICcuL21vZHVsZXMvR2VuZXJhbFNldHRpbmdzTW9kdWxlJztcbmltcG9ydCAnLi9tb2R1bGVzL05ldHN1aXRlU2V0dGluZ3NNb2R1bGUnO1xuaW1wb3J0ICcuL21vZHVsZXMvTm90aWZpY2F0aW9uU2V0dGluZ3NNb2R1bGUnO1xuaW1wb3J0ICcuL21vZHVsZXMvUHJvZHVjdEFkZGl0aW9uc1NldHRpbmdzTW9kdWxlJztcbmltcG9ydCAnLi9tb2R1bGVzL0xhYmVsU2V0dGluZ3NNb2R1bGUnO1xuaW1wb3J0ICcuL21vZHVsZXMvRmVhdHVyZVN3aXRjaGVzU2V0dGluZ3NNb2R1bGUnO1xuaW1wb3J0ICcuL21vZHVsZXMvUHJpY2luZ1J1bGVzU2V0dGluZ3NNb2R1bGUnO1xuaW1wb3J0ICcuL21vZHVsZXMvUHJvZHVjdFVwZ3JhZGVzU2V0dGluZ3NNb2R1bGUnO1xuaW1wb3J0ICcuL21vZHVsZXMvU2ltaWxhclByb2R1Y3RzU2V0dGluZ3NNb2R1bGUnO1xuXG4vLyBUaGlzIGlzIHRoZSBtYWluIGVudHJ5IHBvaW50IGZvciB0aGUgZnJvbnRlbmQgc2NyaXB0IGJ1bmRsZVxuLy8gVGhlIGFkbWluIG1vZHVsZXMgYXJlIGltcG9ydGVkIHNlcGFyYXRlbHkgZHVlIHRvIGNvZGUgc3BsaXR0aW5nIGluIHdlYnBhY2tcblxuLy8gRnJvbnRlbmQgZnVuY3Rpb25hbGl0eSBjYW4gYmUgYWRkZWQgaGVyZVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/admin/index.js\n");

/***/ }),

/***/ "./src/js/admin/modules/FeatureSwitchesSettingsModule.js":
/*!***************************************************************!*\
  !*** ./src/js/admin/modules/FeatureSwitchesSettingsModule.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _common_ProductEstimatorSettings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/ProductEstimatorSettings */ \"./src/js/admin/common/ProductEstimatorSettings.js\");\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n/**\n * Feature Switches Settings JavaScript\n *\n * Handles functionality specific to the feature switches settings tab.\n */\n // Adjust path as needed\nvar FeatureSwitchesSettingsModule = /*#__PURE__*/function (_ProductEstimatorSett) {\n  /**\n   * Initialize the module\n   */\n  function FeatureSwitchesSettingsModule() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, FeatureSwitchesSettingsModule);\n    return _callSuper(this, FeatureSwitchesSettingsModule, [{\n      isModule: true,\n      settingsObjectName: 'featureSwitchesSettings',\n      defaultTabId: 'feature_switches'\n      // loggerName: 'FeatureSwitchesSettingsModule' // Base class now uses constructor.name\n    }]); // Properties like this.$ and this.settings are initialized by super()\n  }\n\n  /**\n   * Module-specific initialization, called by the base class constructor on document.ready.\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(FeatureSwitchesSettingsModule, _ProductEstimatorSett);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(FeatureSwitchesSettingsModule, [{\n    key: \"moduleInit\",\n    value: function moduleInit() {\n      this.bindEvents();\n      // Add any initial setup logic for feature switch fields here if needed\n    }\n\n    /**\n     * Bind event handlers specific to this module\n     */\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      // Listen for tab changes to activate module logic when this tab is shown\n      this.$(document).on('product_estimator_tab_changed', this.handleTabChanged.bind(this));\n\n      // Add any specific event handlers for interactions within the Feature Switches tab\n      // Example: this.$('#enable_example_feature').on('change', this.handleFeatureSwitchChange.bind(this));\n    }\n\n    /**\n     * Handle tab changed event\n     * @param {Event} e Tab changed event\n     * @param {string} tabId The newly active tab ID\n     */\n  }, {\n    key: \"handleTabChanged\",\n    value: function handleTabChanged(e, tabId) {\n      // If our tab becomes active, perform any necessary re-initialization or setup\n      if (tabId === this.settings.tab_id) {\n        // You can call setup functions here if needed when the tab becomes visible\n        // this.setupFeatureSwitchFields();\n      }\n      this.clearSubTabFromUrl(); // Call common URL clearing logic from base\n    }\n\n    // Add other methods as needed for client-side functionality\n    // Example:\n    // setupFeatureSwitchFields() {\n    //\n    //   // Add logic to set initial states, attach event listeners, etc.\n    // }\n  }]);\n}(_common_ProductEstimatorSettings__WEBPACK_IMPORTED_MODULE_5__[\"default\"]); // Initialize the module when the DOM is ready.\n// The base class constructor handles calling moduleInit at the right time.\njQuery(document).ready(function () {\n  // Check if the tab's container element exists before initializing\n  // This ensures the module is only instantiated if its corresponding UI is present.\n  if (jQuery('#feature_switches').length) {\n    // Make it available globally for debugging or if other scripts need to interact with it\n    window.FeatureSwitchesSettingsModuleInstance = new FeatureSwitchesSettingsModule();\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (FeatureSwitchesSettingsModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYWRtaW4vbW9kdWxlcy9GZWF0dXJlU3dpdGNoZXNTZXR0aW5nc01vZHVsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDMEUsQ0FBQztBQUFBLElBRXJFQyw2QkFBNkIsMEJBQUFDLHFCQUFBO0VBQ2pDO0FBQ0Y7QUFDQTtFQUNFLFNBQUFELDhCQUFBLEVBQWM7SUFBQUUsaUZBQUEsT0FBQUYsNkJBQUE7SUFBQSxPQUFBRyxVQUFBLE9BQUFILDZCQUFBLEdBQ047TUFDSkksUUFBUSxFQUFFLElBQUk7TUFDZEMsa0JBQWtCLEVBQUUseUJBQXlCO01BQzdDQyxZQUFZLEVBQUU7TUFDZDtJQUNGLENBQUMsSUFDRDtFQUNGOztFQUVBO0FBQ0Y7QUFDQTtFQUZFQywyRUFBQSxDQUFBUCw2QkFBQSxFQUFBQyxxQkFBQTtFQUFBLE9BQUFPLDhFQUFBLENBQUFSLDZCQUFBO0lBQUFTLEdBQUE7SUFBQUMsS0FBQSxFQUdBLFNBQUFDLFVBQVVBLENBQUEsRUFBRztNQUNYLElBQUksQ0FBQ0MsVUFBVSxDQUFDLENBQUM7TUFDakI7SUFDRjs7SUFFQTtBQUNGO0FBQ0E7RUFGRTtJQUFBSCxHQUFBO0lBQUFDLEtBQUEsRUFHQSxTQUFBRSxVQUFVQSxDQUFBLEVBQUc7TUFDWDtNQUNBLElBQUksQ0FBQ0MsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQ0MsRUFBRSxDQUFDLCtCQUErQixFQUFFLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzs7TUFFdEY7TUFDQTtJQUNGOztJQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRTtJQUFBUixHQUFBO0lBQUFDLEtBQUEsRUFLQSxTQUFBTSxnQkFBZ0JBLENBQUNFLENBQUMsRUFBRUMsS0FBSyxFQUFFO01BQ3pCO01BQ0EsSUFBSUEsS0FBSyxLQUFLLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxNQUFNLEVBQUU7UUFDbEM7UUFDQTtNQUFBO01BRUYsSUFBSSxDQUFDQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM3Qjs7SUFFQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7RUFBQTtBQUFBLEVBcEQwQ3ZCLHdFQUF3QixHQXVEcEU7QUFDQTtBQUNBd0IsTUFBTSxDQUFDVCxRQUFRLENBQUMsQ0FBQ1UsS0FBSyxDQUFDLFlBQVc7RUFDaEM7RUFDQTtFQUNBLElBQUlELE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDRSxNQUFNLEVBQUU7SUFDdEM7SUFDQUMsTUFBTSxDQUFDQyxxQ0FBcUMsR0FBRyxJQUFJM0IsNkJBQTZCLENBQUMsQ0FBQztFQUNwRjtBQUNGLENBQUMsQ0FBQztBQUVGLCtEQUFlQSw2QkFBNkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9kdWN0LWVzdGltYXRvci8uL3NyYy9qcy9hZG1pbi9tb2R1bGVzL0ZlYXR1cmVTd2l0Y2hlc1NldHRpbmdzTW9kdWxlLmpzP2NhN2YiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGZWF0dXJlIFN3aXRjaGVzIFNldHRpbmdzIEphdmFTY3JpcHRcbiAqXG4gKiBIYW5kbGVzIGZ1bmN0aW9uYWxpdHkgc3BlY2lmaWMgdG8gdGhlIGZlYXR1cmUgc3dpdGNoZXMgc2V0dGluZ3MgdGFiLlxuICovXG5pbXBvcnQgUHJvZHVjdEVzdGltYXRvclNldHRpbmdzIGZyb20gJy4uL2NvbW1vbi9Qcm9kdWN0RXN0aW1hdG9yU2V0dGluZ3MnOyAvLyBBZGp1c3QgcGF0aCBhcyBuZWVkZWRcblxuY2xhc3MgRmVhdHVyZVN3aXRjaGVzU2V0dGluZ3NNb2R1bGUgZXh0ZW5kcyBQcm9kdWN0RXN0aW1hdG9yU2V0dGluZ3Mge1xuICAvKipcbiAgICogSW5pdGlhbGl6ZSB0aGUgbW9kdWxlXG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcih7XG4gICAgICBpc01vZHVsZTogdHJ1ZSxcbiAgICAgIHNldHRpbmdzT2JqZWN0TmFtZTogJ2ZlYXR1cmVTd2l0Y2hlc1NldHRpbmdzJyxcbiAgICAgIGRlZmF1bHRUYWJJZDogJ2ZlYXR1cmVfc3dpdGNoZXMnLFxuICAgICAgLy8gbG9nZ2VyTmFtZTogJ0ZlYXR1cmVTd2l0Y2hlc1NldHRpbmdzTW9kdWxlJyAvLyBCYXNlIGNsYXNzIG5vdyB1c2VzIGNvbnN0cnVjdG9yLm5hbWVcbiAgICB9KTtcbiAgICAvLyBQcm9wZXJ0aWVzIGxpa2UgdGhpcy4kIGFuZCB0aGlzLnNldHRpbmdzIGFyZSBpbml0aWFsaXplZCBieSBzdXBlcigpXG4gIH1cblxuICAvKipcbiAgICogTW9kdWxlLXNwZWNpZmljIGluaXRpYWxpemF0aW9uLCBjYWxsZWQgYnkgdGhlIGJhc2UgY2xhc3MgY29uc3RydWN0b3Igb24gZG9jdW1lbnQucmVhZHkuXG4gICAqL1xuICBtb2R1bGVJbml0KCkge1xuICAgIHRoaXMuYmluZEV2ZW50cygpO1xuICAgIC8vIEFkZCBhbnkgaW5pdGlhbCBzZXR1cCBsb2dpYyBmb3IgZmVhdHVyZSBzd2l0Y2ggZmllbGRzIGhlcmUgaWYgbmVlZGVkXG4gIH1cblxuICAvKipcbiAgICogQmluZCBldmVudCBoYW5kbGVycyBzcGVjaWZpYyB0byB0aGlzIG1vZHVsZVxuICAgKi9cbiAgYmluZEV2ZW50cygpIHtcbiAgICAvLyBMaXN0ZW4gZm9yIHRhYiBjaGFuZ2VzIHRvIGFjdGl2YXRlIG1vZHVsZSBsb2dpYyB3aGVuIHRoaXMgdGFiIGlzIHNob3duXG4gICAgdGhpcy4kKGRvY3VtZW50KS5vbigncHJvZHVjdF9lc3RpbWF0b3JfdGFiX2NoYW5nZWQnLCB0aGlzLmhhbmRsZVRhYkNoYW5nZWQuYmluZCh0aGlzKSk7XG5cbiAgICAvLyBBZGQgYW55IHNwZWNpZmljIGV2ZW50IGhhbmRsZXJzIGZvciBpbnRlcmFjdGlvbnMgd2l0aGluIHRoZSBGZWF0dXJlIFN3aXRjaGVzIHRhYlxuICAgIC8vIEV4YW1wbGU6IHRoaXMuJCgnI2VuYWJsZV9leGFtcGxlX2ZlYXR1cmUnKS5vbignY2hhbmdlJywgdGhpcy5oYW5kbGVGZWF0dXJlU3dpdGNoQ2hhbmdlLmJpbmQodGhpcykpO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSB0YWIgY2hhbmdlZCBldmVudFxuICAgKiBAcGFyYW0ge0V2ZW50fSBlIFRhYiBjaGFuZ2VkIGV2ZW50XG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0YWJJZCBUaGUgbmV3bHkgYWN0aXZlIHRhYiBJRFxuICAgKi9cbiAgaGFuZGxlVGFiQ2hhbmdlZChlLCB0YWJJZCkge1xuICAgIC8vIElmIG91ciB0YWIgYmVjb21lcyBhY3RpdmUsIHBlcmZvcm0gYW55IG5lY2Vzc2FyeSByZS1pbml0aWFsaXphdGlvbiBvciBzZXR1cFxuICAgIGlmICh0YWJJZCA9PT0gdGhpcy5zZXR0aW5ncy50YWJfaWQpIHtcbiAgICAgIC8vIFlvdSBjYW4gY2FsbCBzZXR1cCBmdW5jdGlvbnMgaGVyZSBpZiBuZWVkZWQgd2hlbiB0aGUgdGFiIGJlY29tZXMgdmlzaWJsZVxuICAgICAgLy8gdGhpcy5zZXR1cEZlYXR1cmVTd2l0Y2hGaWVsZHMoKTtcbiAgICB9XG4gICAgdGhpcy5jbGVhclN1YlRhYkZyb21VcmwoKTsgLy8gQ2FsbCBjb21tb24gVVJMIGNsZWFyaW5nIGxvZ2ljIGZyb20gYmFzZVxuICB9XG5cbiAgLy8gQWRkIG90aGVyIG1ldGhvZHMgYXMgbmVlZGVkIGZvciBjbGllbnQtc2lkZSBmdW5jdGlvbmFsaXR5XG4gIC8vIEV4YW1wbGU6XG4gIC8vIHNldHVwRmVhdHVyZVN3aXRjaEZpZWxkcygpIHtcbiAgLy9cbiAgLy8gICAvLyBBZGQgbG9naWMgdG8gc2V0IGluaXRpYWwgc3RhdGVzLCBhdHRhY2ggZXZlbnQgbGlzdGVuZXJzLCBldGMuXG4gIC8vIH1cbn1cblxuLy8gSW5pdGlhbGl6ZSB0aGUgbW9kdWxlIHdoZW4gdGhlIERPTSBpcyByZWFkeS5cbi8vIFRoZSBiYXNlIGNsYXNzIGNvbnN0cnVjdG9yIGhhbmRsZXMgY2FsbGluZyBtb2R1bGVJbml0IGF0IHRoZSByaWdodCB0aW1lLlxualF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgLy8gQ2hlY2sgaWYgdGhlIHRhYidzIGNvbnRhaW5lciBlbGVtZW50IGV4aXN0cyBiZWZvcmUgaW5pdGlhbGl6aW5nXG4gIC8vIFRoaXMgZW5zdXJlcyB0aGUgbW9kdWxlIGlzIG9ubHkgaW5zdGFudGlhdGVkIGlmIGl0cyBjb3JyZXNwb25kaW5nIFVJIGlzIHByZXNlbnQuXG4gIGlmIChqUXVlcnkoJyNmZWF0dXJlX3N3aXRjaGVzJykubGVuZ3RoKSB7XG4gICAgLy8gTWFrZSBpdCBhdmFpbGFibGUgZ2xvYmFsbHkgZm9yIGRlYnVnZ2luZyBvciBpZiBvdGhlciBzY3JpcHRzIG5lZWQgdG8gaW50ZXJhY3Qgd2l0aCBpdFxuICAgIHdpbmRvdy5GZWF0dXJlU3dpdGNoZXNTZXR0aW5nc01vZHVsZUluc3RhbmNlID0gbmV3IEZlYXR1cmVTd2l0Y2hlc1NldHRpbmdzTW9kdWxlKCk7XG4gIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBGZWF0dXJlU3dpdGNoZXNTZXR0aW5nc01vZHVsZTtcbiJdLCJuYW1lcyI6WyJQcm9kdWN0RXN0aW1hdG9yU2V0dGluZ3MiLCJGZWF0dXJlU3dpdGNoZXNTZXR0aW5nc01vZHVsZSIsIl9Qcm9kdWN0RXN0aW1hdG9yU2V0dCIsIl9jbGFzc0NhbGxDaGVjayIsIl9jYWxsU3VwZXIiLCJpc01vZHVsZSIsInNldHRpbmdzT2JqZWN0TmFtZSIsImRlZmF1bHRUYWJJZCIsIl9pbmhlcml0cyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwibW9kdWxlSW5pdCIsImJpbmRFdmVudHMiLCIkIiwiZG9jdW1lbnQiLCJvbiIsImhhbmRsZVRhYkNoYW5nZWQiLCJiaW5kIiwiZSIsInRhYklkIiwic2V0dGluZ3MiLCJ0YWJfaWQiLCJjbGVhclN1YlRhYkZyb21VcmwiLCJqUXVlcnkiLCJyZWFkeSIsImxlbmd0aCIsIndpbmRvdyIsIkZlYXR1cmVTd2l0Y2hlc1NldHRpbmdzTW9kdWxlSW5zdGFuY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/admin/modules/FeatureSwitchesSettingsModule.js\n");

/***/ }),

/***/ "./src/js/admin/modules/GeneralSettingsModule.js":
/*!*******************************************************!*\
  !*** ./src/js/admin/modules/GeneralSettingsModule.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils_tinymce_preserver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils/tinymce-preserver */ \"./src/js/utils/tinymce-preserver.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n/* harmony import */ var _common_VerticalTabbedModule__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/VerticalTabbedModule */ \"./src/js/admin/common/VerticalTabbedModule.js\");\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n/**\n * General Settings Module JavaScript\n *\n * Handles functionality specific to the general settings tab.\n * Extends VerticalTabbedModule for common vertical tab and form handling.\n */\n\n\n\nvar logger = (0,_utils__WEBPACK_IMPORTED_MODULE_7__.createLogger)('GeneralSettingsModule');\nvar GeneralSettingsModule = /*#__PURE__*/function (_VerticalTabbedModule) {\n  function GeneralSettingsModule() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, GeneralSettingsModule);\n    var config = {\n      mainTabId: 'general',\n      defaultSubTabId: 'settings',\n      ajaxActionPrefix: 'save_general',\n      localizedDataName: 'generalSettings'\n    };\n    _this = _callSuper(this, GeneralSettingsModule, [config]); // Calls AdminTableManager constructor\n\n    // DOM elements cache\n    _this.dom = {};\n    _this.$(document).on(\"admin_table_manager_ready_\".concat(_this.config.mainTabId), function () {\n      _this.validateMarkup = _this.validateMarkup.bind(_this);\n      _this.validateExpiryDays = _this.validateExpiryDays.bind(_this);\n      _this.handleFileUpload = _this.handleFileUpload.bind(_this);\n      _this.handleFileRemove = _this.handleFileRemove.bind(_this);\n      _this.setupTinyMCEEditors = _this.setupTinyMCEEditors.bind(_this);\n      _this.onSubTabActivated = _this.onSubTabActivated.bind(_this);\n      _this.validateSelect2Field = _this.validateSelect2Field.bind(_this);\n      _this._initializeSelect2 = _this._initializeSelect2.bind(_this);\n      _this._cacheDOM = _this._cacheDOM.bind(_this);\n    });\n    // Bind methods that will be used as event handlers or callbacks\n    return _this;\n  }\n\n  /**\n   * Bind module-specific events beyond what the parent class handles\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(GeneralSettingsModule, _VerticalTabbedModule);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(GeneralSettingsModule, [{\n    key: \"bindModuleSpecificEvents\",\n    value: function bindModuleSpecificEvents() {\n      var _this2 = this;\n      _superPropGet(GeneralSettingsModule, \"bindModuleSpecificEvents\", this, 3)([]);\n\n      // Only bind events if container exists\n      if (!this.$container || !this.$container.length) {\n        return;\n      }\n\n      // Cache DOM elements\n      this._cacheDOM();\n      this.$('.select-file-button').on('click', this.handleFileUpload);\n      this.$('.remove-file-button').on('click', this.handleFileRemove);\n\n      // Add validation events\n      this.$('#default_markup').on('change input', this.validateMarkup);\n      this.$('#estimate_expiry_days').on('change input', this.validateExpiryDays);\n      this.$('#pdf_template').on('change', this.validateFileInput.bind(this, 'pdf_template'));\n\n      // Select2 field validation\n      if (this.dom.primaryProductCategories) {\n        this.dom.primaryProductCategories.on('change', function () {\n          return _this2.validateSelect2Field('primary_product_categories');\n        });\n      }\n\n      // Listen for sub-tab changes\n      this.$(document).on(\"pe_sub_tab_changed_\".concat(this.settings.tab_id), function (e, subTabId) {\n        _this2.onSubTabActivated(subTabId);\n      });\n\n      // Initialize Select2 when ready\n      this._initializeSelect2();\n    }\n\n    /**\n     * Override for actions when the main \"General\" tab is activated.\n     */\n  }, {\n    key: \"onMainTabActivated\",\n    value: function onMainTabActivated() {\n      _superPropGet(GeneralSettingsModule, \"onMainTabActivated\", this, 3)([]);\n\n      // Setup the editors when the tab is activated\n      var activeSubTabId = this.getActiveSubTabId();\n      if (activeSubTabId) {\n        this.setupTinyMCEEditors(activeSubTabId);\n\n        // Reinitialize Select2 fields on the settings tab\n        if (activeSubTabId === 'settings') {\n          // Re-cache DOM elements since they might not have been available on initial load\n          this._cacheDOM();\n          // Refresh Select2 components if they're already initialized\n          if (this.dom.primaryProductCategories && this.dom.primaryProductCategories.hasClass(\"select2-hidden-accessible\")) {\n            this.refreshSelect2(this.dom.primaryProductCategories);\n          }\n        }\n      }\n    }\n\n    /**\n     * Get the currently active sub-tab ID\n     */\n  }, {\n    key: \"getActiveSubTabId\",\n    value: function getActiveSubTabId() {\n      if (!this.$container || !this.$container.length) {\n        return this.vtmConfig.defaultSubTabId;\n      }\n      var activeTabContent = this.$container.find('.vertical-tab-content.active, .pe-vtabs-tab-panel.active');\n      if (activeTabContent.length) {\n        return activeTabContent.data('tab-id') || activeTabContent.attr('id');\n      }\n\n      // Try to get from URL\n      var urlParams = new URLSearchParams(window.location.search);\n      var urlSubTab = urlParams.get('sub_tab');\n      if (urlSubTab) {\n        return urlSubTab;\n      }\n\n      // Fallback to default\n      return this.vtmConfig.defaultSubTabId;\n    }\n\n    /**\n     * Called when sub-tab is changed - needs to setup TinyMCE and field validation\n     */\n  }, {\n    key: \"onSubTabActivated\",\n    value: function onSubTabActivated(subTabId) {\n      logger.log(\"Sub-tab activated: \".concat(subTabId));\n\n      // Setup TinyMCE for the active tab\n      this.setupTinyMCEEditors(subTabId);\n\n      // Reinitialize Select2 fields if we're on the settings tab\n      if (subTabId === 'settings') {\n        // Re-cache DOM elements since they might not have been available on initial load\n        this._cacheDOM();\n        this._initializeSelect2();\n      }\n    }\n\n    /**\n     * Initialize TinyMCE editors for the given sub-tab\n     */\n  }, {\n    key: \"setupTinyMCEEditors\",\n    value: function setupTinyMCEEditors(subTabId) {\n      // Map sub-tab IDs to editor fields\n      var editorFields = {\n        'pdf-settings': ['pdf_footer_text', 'pdf_footer_contact_details_content']\n        // Add other sub-tabs with their editor fields\n      };\n\n      // If this sub-tab has editors, initialize them\n      if (editorFields[subTabId]) {\n        logger.log(\"Setting up TinyMCE editors for \".concat(subTabId, \": \").concat(editorFields[subTabId].join(', ')));\n        (0,_utils_tinymce_preserver__WEBPACK_IMPORTED_MODULE_6__.setupTinyMCEHTMLPreservation)(editorFields[subTabId], \"#\".concat(this.settings.mainTabId, \" .vertical-tab-content[data-tab-id=\\\"\").concat(subTabId, \"\\\"]\"));\n      }\n    }\n  }, {\n    key: \"handleFileUpload\",\n    value: function handleFileUpload(e) {\n      var _this3 = this;\n      e.preventDefault();\n      var button = this.$(e.currentTarget);\n      var targetInputSelector = button.data('target-input'); // Use the data-target-input attribute\n      var targetPreviewSelector = button.data('target-preview'); // Use the data-target-preview attribute\n\n      if (this.mediaFrame) {\n        this.mediaFrame.open();\n        return;\n      }\n      this.mediaFrame = wp.media({\n        title: 'Select or Upload PDF Template',\n        button: {\n          text: 'Use this file'\n        },\n        multiple: false,\n        library: {\n          type: 'application/pdf'\n        } // Only allow PDF files\n      });\n      this.mediaFrame.on('select', function () {\n        var attachment = _this3.mediaFrame.state().get('selection').first().toJSON();\n        if (attachment && attachment.id) {\n          // Use the target input selector from the data attribute\n          if (targetInputSelector) {\n            _this3.$(targetInputSelector).val(attachment.id).trigger('change');\n          } else {\n            logger.warn('No target input selector found for file upload');\n          }\n        } else {\n          logger.warn('Invalid attachment selected from media library');\n        }\n\n        // Use the target preview selector from the data attribute\n        var $previewWrapper = targetPreviewSelector ? _this3.$(targetPreviewSelector) : button.siblings('.file-preview-wrapper');\n\n        // Create a simpler preview that matches the design in the second image\n        var fileSize = _this3._formatFileSize(attachment.filesizeInBytes || 0);\n        $previewWrapper.html(\"\\n        <div class=\\\"file-preview\\\">\\n          <span class=\\\"file-icon dashicons dashicons-pdf\\\"></span>\\n          <div class=\\\"file-details\\\">\\n            <span class=\\\"file-name\\\">\\n              <a href=\\\"\".concat(attachment.url, \"\\\" target=\\\"_blank\\\">\\n                \").concat(attachment.filename, \"\\n              </a>\\n               \").concat(fileSize ? \"(\".concat(fileSize, \" PDF Document)\") : '', \"\\n            </span>\\n          </div>\\n        </div>\\n      \"));\n\n        // Add the file info text below the file preview if not already present\n        if (!_this3.$('.upload-instructions').length) {\n          $previewWrapper.after(\"<span class=\\\"upload-instructions\\\">Upload a PDF template file (optional) *<br>Accepted format: application/pdf</span>\");\n        }\n        // Show the remove button\n        button.siblings('.remove-file-button').removeClass('hidden');\n\n        // Update the button text to \"Replace File\"\n        button.text('Replace File');\n      });\n      this.mediaFrame.open();\n    }\n  }, {\n    key: \"handleFileRemove\",\n    value: function handleFileRemove(e) {\n      e.preventDefault();\n      var button = this.$(e.currentTarget);\n      var targetInputSelector = button.data('target-input');\n      var targetPreviewSelector = button.data('target-preview');\n      var uploadButton = button.siblings('.select-file-button');\n      if (targetInputSelector) {\n        this.$(targetInputSelector).val('').trigger('change');\n      }\n      if (targetPreviewSelector) {\n        this.$(targetPreviewSelector).empty();\n      } else {\n        button.siblings('.file-preview-wrapper').empty();\n      }\n\n      // Hide the remove button\n      button.addClass('hidden');\n\n      // Update the text on the upload button from \"Replace File\" to \"Upload File\"\n      if (uploadButton.length) {\n        uploadButton.text('Upload File');\n      }\n\n      // Remove the upload instructions if they were added\n      this.$('.upload-instructions').remove();\n    }\n  }, {\n    key: \"validateMarkup\",\n    value: function validateMarkup(e) {\n      var $input = this.$(e.currentTarget);\n      var value = parseInt($input.val(), 10);\n      var min = parseInt($input.attr('min') || 0, 10);\n      var max = parseInt($input.attr('max') || 100, 10);\n\n      // Use generalSettings.i18n if available, otherwise use this.settings.i18n\n      var i18n = window.generalSettings && window.generalSettings.i18n || this.settings.i18n || {};\n      if (isNaN(value) || value < min || value > max) {\n        this.showFieldError($input, i18n.validationErrorMarkup || \"Value must be between \".concat(min, \" and \").concat(max, \".\"));\n        return false;\n      }\n      this.clearFieldError($input);\n      return true;\n    }\n  }, {\n    key: \"validateExpiryDays\",\n    value: function validateExpiryDays(e) {\n      var $input = this.$(e.currentTarget);\n      var value = parseInt($input.val(), 10);\n      var min = parseInt($input.attr('min') || 1, 10);\n      var max = parseInt($input.attr('max') || 365, 10);\n      var i18n = window.generalSettings && window.generalSettings.i18n || this.settings.i18n || {};\n      if (isNaN(value) || value < min || value > max) {\n        this.showFieldError($input, i18n.validationErrorExpiry || \"Value must be between \".concat(min, \" and \").concat(max, \".\"));\n        return false;\n      }\n      this.clearFieldError($input);\n      return true;\n    }\n\n    /**\n     * Override validateAllFields to save editor content before validation\n     */\n  }, {\n    key: \"validateAllFields\",\n    value: function validateAllFields() {\n      this.saveEditorContent(); // Save editor content before validation\n\n      var isValid = _superPropGet(GeneralSettingsModule, \"validateAllFields\", this, 3)([]);\n\n      // Also validate file inputs\n      if (!this.validateFileInput('pdf_template')) {\n        isValid = false;\n      }\n\n      // Validate select2 fields\n      if (!this.validateSelect2Field('primary_product_categories')) {\n        isValid = false;\n      }\n      return isValid;\n    }\n  }, {\n    key: \"saveEditorContent\",\n    value: function saveEditorContent() {\n      if (typeof tinyMCE !== 'undefined') {\n        var editors = ['pdf_footer_text', 'pdf_footer_contact_details_content'];\n        editors.forEach(function (editorId) {\n          var editor = tinyMCE.get(editorId);\n          if (editor) {\n            editor.save();\n          }\n        });\n      }\n    }\n\n    /**\n     * Validate file input fields\n     * @param {string} fieldId - The ID of the file input field\n     */\n  }, {\n    key: \"validateFileInput\",\n    value: function validateFileInput(fieldId) {\n      var $input = this.$(\"#\".concat(fieldId));\n      var value = $input.val();\n      var isRequired = $input.prop('required') || $input.data('required') === true;\n      var i18n = window.generalSettings && window.generalSettings.i18n || this.settings.i18n || {};\n      if (isRequired && !value) {\n        this.showFieldError($input, i18n.validationErrorRequired || 'This field is required.');\n        return false;\n      }\n      this.clearFieldError($input);\n      return true;\n    }\n\n    /**\n     * Validate a Select2 field\n     * @param {string} fieldId - The ID of the select2 field\n     * @returns {boolean} Whether the field is valid\n     */\n  }, {\n    key: \"validateSelect2Field\",\n    value: function validateSelect2Field(fieldId) {\n      var $select = this.$(\"#\".concat(fieldId));\n      if (!$select.length) {\n        return true;\n      }\n      var isRequired = $select.prop('required') || $select.data('required') === true;\n      var value = $select.val();\n      var isEmpty = !value || Array.isArray(value) && value.length === 0;\n      if (isRequired && isEmpty) {\n        this.showFieldError($select, 'This field is required.');\n        return false;\n      }\n      this.clearFieldError($select);\n      return true;\n    }\n\n    /**\n     * Cache DOM elements for later use\n     * @private\n     */\n  }, {\n    key: \"_cacheDOM\",\n    value: function _cacheDOM() {\n      // Cache the select2 elements\n      if (!this.dom) {\n        this.dom = {};\n      }\n      this.dom.primaryProductCategories = this.$('#primary_product_categories');\n\n      // Log cache status for debugging\n      if (this.dom.primaryProductCategories && this.dom.primaryProductCategories.length) {\n        logger.log('Successfully cached DOM element for primary categories');\n      } else {\n        logger.warn('Failed to cache primary categories DOM element - element not found');\n      }\n    }\n\n    /**\n     * Initialize Select2 dropdowns\n     * @private\n     */\n  }, {\n    key: \"_initializeSelect2\",\n    value: function _initializeSelect2() {\n      var _this4 = this;\n      this.initializeSelect2Dropdowns({\n        elements: [{\n          element: this.dom.primaryProductCategories,\n          placeholderKey: 'primaryProductCategories',\n          fallbackText: 'Select primary product categories',\n          name: 'primary product categories',\n          config: {\n            width: '100%',\n            dropdownAutoWidth: true,\n            minimumResultsForSearch: 0,\n            matcher: function matcher(params, data) {\n              // If there are no params or no search term, return all data\n              if (!params || !params.term) {\n                return data;\n              }\n\n              // Search in the text field\n              if (data.text.toLowerCase().indexOf(params.term.toLowerCase()) > -1) {\n                return data;\n              }\n\n              // Return null if the term doesn't match\n              return null;\n            },\n            templateResult: function templateResult(data) {\n              // Skip custom formatting for the search field\n              if (data.loading || !data.id) {\n                return data.text;\n              }\n\n              // Highlight selected options in the dropdown with hover-like styling\n              if (data.element && _this4.dom.primaryProductCategories.val() && _this4.dom.primaryProductCategories.val().includes(data.id)) {\n                return _this4.$(\"<span style=\\\"color: #fff; background-color: #2271b1; padding: 3px 6px; border-radius: 3px; display: block;\\\">\".concat(data.text, \"</span>\"));\n              }\n              return data.text;\n            }\n          }\n        }],\n        moduleName: 'General Settings'\n      });\n    }\n\n    /**\n     * Format file size in bytes to a human-readable format\n     * @param {number} bytes - Size in bytes\n     * @returns {string} Formatted size (e.g., \"256 KB\")\n     */\n  }, {\n    key: \"_formatFileSize\",\n    value: function _formatFileSize(bytes) {\n      if (bytes === 0) {\n        return '0 Bytes';\n      }\n      var k = 1024;\n      var sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      var i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n  }]);\n}(_common_VerticalTabbedModule__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\njQuery(document).ready(function ($) {\n  // Ensure module is only instantiated if its corresponding UI is present.\n  if ($('#general').length) {\n    window.GeneralSettingsModuleInstance = new GeneralSettingsModule();\n  } else {\n    logger.warn('Container #general not found. GeneralSettingsModule will not be initialized.');\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (GeneralSettingsModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/admin/modules/GeneralSettingsModule.js\n");

/***/ }),

/***/ "./src/js/admin/modules/LabelSettingsModule.js":
/*!*****************************************************!*\
  !*** ./src/js/admin/modules/LabelSettingsModule.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n/* harmony import */ var _common_VerticalTabbedModule__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/VerticalTabbedModule */ \"./src/js/admin/common/VerticalTabbedModule.js\");\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n/**\n * Label Settings JavaScript\n *\n * Handles functionality specific to the label settings tab.\n * Extends VerticalTabbedModule for common vertical tab and form handling.\n *\n * This module relies on abstract base classes for common functionality,\n * selectors, and internationalization strings.\n */\n\n\nvar logger = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('LabelSettings');\nvar LabelSettingsModule = /*#__PURE__*/function (_VerticalTabbedModule) {\n  function LabelSettingsModule() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, LabelSettingsModule);\n    return _callSuper(this, LabelSettingsModule, [{\n      mainTabId: 'labels',\n      defaultSubTabId: 'labels-general',\n      ajaxActionPrefix: 'save_labels',\n      localizedDataName: 'labelsSettings'\n    }]);\n  }\n\n  /**\n   * Override to bind module-specific events.\n   * Common events are bound by the parent class.\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(LabelSettingsModule, _VerticalTabbedModule);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(LabelSettingsModule, [{\n    key: \"bindModuleSpecificEvents\",\n    value: function bindModuleSpecificEvents() {\n      _superPropGet(LabelSettingsModule, \"bindModuleSpecificEvents\", this, 3)([]);\n      if (!this.$container || !this.$container.length) {\n        return;\n      }\n\n      // No additional specific events needed for this module\n    }\n\n    /**\n     * Override for actions when the main \"Labels\" tab is activated.\n     */\n  }, {\n    key: \"onMainTabActivated\",\n    value: function onMainTabActivated() {\n      _superPropGet(LabelSettingsModule, \"onMainTabActivated\", this, 3)([]);\n      // No additional actions needed when the Labels tab is activated\n    }\n  }]);\n}(_common_VerticalTabbedModule__WEBPACK_IMPORTED_MODULE_7__[\"default\"]); // Initialize the module\njQuery(document).ready(function ($) {\n  // Pass $ to use it directly\n  // Ensure the main container for this module exists before instantiating\n  if ($('#labels').length) {\n    // Use $ directly\n    // Ensure only one instance is created\n    if (!window.ProductEstimatorLabelSettingsModuleInstance) {\n      try {\n        window.ProductEstimatorLabelSettingsModuleInstance = new LabelSettingsModule();\n      } catch (error) {\n        if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n          window.ProductEstimatorSettingsInstance.showNotice('Failed to initialize Label Settings. Check console for errors.', 'error');\n        }\n      }\n    }\n  } else {\n    logger.warn('Container #labels not found. LabelSettingsModule will not be initialized.');\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (LabelSettingsModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYWRtaW4vbW9kdWxlcy9MYWJlbFNldHRpbmdzTW9kdWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNzQztBQUU0QjtBQUVsRSxJQUFNRSxNQUFNLEdBQUdGLG9EQUFZLENBQUMsZUFBZSxDQUFDO0FBQUMsSUFFdkNHLG1CQUFtQiwwQkFBQUMscUJBQUE7RUFDdkIsU0FBQUQsb0JBQUEsRUFBYztJQUFBRSxpRkFBQSxPQUFBRixtQkFBQTtJQUFBLE9BQUFHLFVBQUEsT0FBQUgsbUJBQUEsR0FDTjtNQUNKSSxTQUFTLEVBQUUsUUFBUTtNQUNuQkMsZUFBZSxFQUFFLGdCQUFnQjtNQUNqQ0MsZ0JBQWdCLEVBQUUsYUFBYTtNQUMvQkMsaUJBQWlCLEVBQUU7SUFDckIsQ0FBQztFQUNIOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0VBSEVDLDJFQUFBLENBQUFSLG1CQUFBLEVBQUFDLHFCQUFBO0VBQUEsT0FBQVEsOEVBQUEsQ0FBQVQsbUJBQUE7SUFBQVUsR0FBQTtJQUFBQyxLQUFBLEVBSUEsU0FBQUMsd0JBQXdCQSxDQUFBLEVBQUc7TUFDekJDLGFBQUEsQ0FBQWIsbUJBQUE7TUFFQSxJQUFJLENBQUMsSUFBSSxDQUFDYyxVQUFVLElBQUksQ0FBQyxJQUFJLENBQUNBLFVBQVUsQ0FBQ0MsTUFBTSxFQUFFO1FBQy9DO01BQ0Y7O01BRUE7SUFDRjs7SUFFQTtBQUNGO0FBQ0E7RUFGRTtJQUFBTCxHQUFBO0lBQUFDLEtBQUEsRUFHQSxTQUFBSyxrQkFBa0JBLENBQUEsRUFBRztNQUNuQkgsYUFBQSxDQUFBYixtQkFBQTtNQUNBO0lBQ0Y7RUFBQztBQUFBLEVBOUIrQkYsb0VBQW9CLEdBaUN0RDtBQUNBbUIsTUFBTSxDQUFDQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLFVBQVNDLENBQUMsRUFBRTtFQUFFO0VBQ0E7RUFDbkMsSUFBSUEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDTCxNQUFNLEVBQUU7SUFBRTtJQUN6QjtJQUNBLElBQUksQ0FBQ00sTUFBTSxDQUFDQywyQ0FBMkMsRUFBRTtNQUN2RCxJQUFJO1FBQ0ZELE1BQU0sQ0FBQ0MsMkNBQTJDLEdBQUcsSUFBSXRCLG1CQUFtQixDQUFDLENBQUM7TUFDaEYsQ0FBQyxDQUFDLE9BQU91QixLQUFLLEVBQUU7UUFDZCxJQUFJRixNQUFNLENBQUNHLGdDQUFnQyxJQUFJLE9BQU9ILE1BQU0sQ0FBQ0csZ0NBQWdDLENBQUNDLFVBQVUsS0FBSyxVQUFVLEVBQUU7VUFDdkhKLE1BQU0sQ0FBQ0csZ0NBQWdDLENBQUNDLFVBQVUsQ0FBQyxnRUFBZ0UsRUFBRSxPQUFPLENBQUM7UUFDL0g7TUFDRjtJQUNGO0VBQ0YsQ0FBQyxNQUFNO0lBQ0wxQixNQUFNLENBQUMyQixJQUFJLENBQUMsMkVBQTJFLENBQUM7RUFDMUY7QUFDRixDQUFDLENBQUM7QUFFRiwrREFBZTFCLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2R1Y3QtZXN0aW1hdG9yLy4vc3JjL2pzL2FkbWluL21vZHVsZXMvTGFiZWxTZXR0aW5nc01vZHVsZS5qcz9hN2QxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGFiZWwgU2V0dGluZ3MgSmF2YVNjcmlwdFxuICpcbiAqIEhhbmRsZXMgZnVuY3Rpb25hbGl0eSBzcGVjaWZpYyB0byB0aGUgbGFiZWwgc2V0dGluZ3MgdGFiLlxuICogRXh0ZW5kcyBWZXJ0aWNhbFRhYmJlZE1vZHVsZSBmb3IgY29tbW9uIHZlcnRpY2FsIHRhYiBhbmQgZm9ybSBoYW5kbGluZy5cbiAqXG4gKiBUaGlzIG1vZHVsZSByZWxpZXMgb24gYWJzdHJhY3QgYmFzZSBjbGFzc2VzIGZvciBjb21tb24gZnVuY3Rpb25hbGl0eSxcbiAqIHNlbGVjdG9ycywgYW5kIGludGVybmF0aW9uYWxpemF0aW9uIHN0cmluZ3MuXG4gKi9cbmltcG9ydCB7IGNyZWF0ZUxvZ2dlciB9IGZyb20gJ0B1dGlscyc7XG5cbmltcG9ydCBWZXJ0aWNhbFRhYmJlZE1vZHVsZSBmcm9tICcuLi9jb21tb24vVmVydGljYWxUYWJiZWRNb2R1bGUnO1xuXG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoJ0xhYmVsU2V0dGluZ3MnKTtcblxuY2xhc3MgTGFiZWxTZXR0aW5nc01vZHVsZSBleHRlbmRzIFZlcnRpY2FsVGFiYmVkTW9kdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoe1xuICAgICAgbWFpblRhYklkOiAnbGFiZWxzJyxcbiAgICAgIGRlZmF1bHRTdWJUYWJJZDogJ2xhYmVscy1nZW5lcmFsJyxcbiAgICAgIGFqYXhBY3Rpb25QcmVmaXg6ICdzYXZlX2xhYmVscycsXG4gICAgICBsb2NhbGl6ZWREYXRhTmFtZTogJ2xhYmVsc1NldHRpbmdzJ1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIHRvIGJpbmQgbW9kdWxlLXNwZWNpZmljIGV2ZW50cy5cbiAgICogQ29tbW9uIGV2ZW50cyBhcmUgYm91bmQgYnkgdGhlIHBhcmVudCBjbGFzcy5cbiAgICovXG4gIGJpbmRNb2R1bGVTcGVjaWZpY0V2ZW50cygpIHtcbiAgICBzdXBlci5iaW5kTW9kdWxlU3BlY2lmaWNFdmVudHMoKTtcblxuICAgIGlmICghdGhpcy4kY29udGFpbmVyIHx8ICF0aGlzLiRjb250YWluZXIubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIC8vIE5vIGFkZGl0aW9uYWwgc3BlY2lmaWMgZXZlbnRzIG5lZWRlZCBmb3IgdGhpcyBtb2R1bGVcbiAgfVxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBmb3IgYWN0aW9ucyB3aGVuIHRoZSBtYWluIFwiTGFiZWxzXCIgdGFiIGlzIGFjdGl2YXRlZC5cbiAgICovXG4gIG9uTWFpblRhYkFjdGl2YXRlZCgpIHtcbiAgICBzdXBlci5vbk1haW5UYWJBY3RpdmF0ZWQoKTtcbiAgICAvLyBObyBhZGRpdGlvbmFsIGFjdGlvbnMgbmVlZGVkIHdoZW4gdGhlIExhYmVscyB0YWIgaXMgYWN0aXZhdGVkXG4gIH1cbn1cblxuLy8gSW5pdGlhbGl6ZSB0aGUgbW9kdWxlXG5qUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCQpIHsgLy8gUGFzcyAkIHRvIHVzZSBpdCBkaXJlY3RseVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEVuc3VyZSB0aGUgbWFpbiBjb250YWluZXIgZm9yIHRoaXMgbW9kdWxlIGV4aXN0cyBiZWZvcmUgaW5zdGFudGlhdGluZ1xuICBpZiAoJCgnI2xhYmVscycpLmxlbmd0aCkgeyAvLyBVc2UgJCBkaXJlY3RseVxuICAgIC8vIEVuc3VyZSBvbmx5IG9uZSBpbnN0YW5jZSBpcyBjcmVhdGVkXG4gICAgaWYgKCF3aW5kb3cuUHJvZHVjdEVzdGltYXRvckxhYmVsU2V0dGluZ3NNb2R1bGVJbnN0YW5jZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgd2luZG93LlByb2R1Y3RFc3RpbWF0b3JMYWJlbFNldHRpbmdzTW9kdWxlSW5zdGFuY2UgPSBuZXcgTGFiZWxTZXR0aW5nc01vZHVsZSgpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKHdpbmRvdy5Qcm9kdWN0RXN0aW1hdG9yU2V0dGluZ3NJbnN0YW5jZSAmJiB0eXBlb2Ygd2luZG93LlByb2R1Y3RFc3RpbWF0b3JTZXR0aW5nc0luc3RhbmNlLnNob3dOb3RpY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB3aW5kb3cuUHJvZHVjdEVzdGltYXRvclNldHRpbmdzSW5zdGFuY2Uuc2hvd05vdGljZSgnRmFpbGVkIHRvIGluaXRpYWxpemUgTGFiZWwgU2V0dGluZ3MuIENoZWNrIGNvbnNvbGUgZm9yIGVycm9ycy4nLCAnZXJyb3InKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBsb2dnZXIud2FybignQ29udGFpbmVyICNsYWJlbHMgbm90IGZvdW5kLiBMYWJlbFNldHRpbmdzTW9kdWxlIHdpbGwgbm90IGJlIGluaXRpYWxpemVkLicpO1xuICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgTGFiZWxTZXR0aW5nc01vZHVsZTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVMb2dnZXIiLCJWZXJ0aWNhbFRhYmJlZE1vZHVsZSIsImxvZ2dlciIsIkxhYmVsU2V0dGluZ3NNb2R1bGUiLCJfVmVydGljYWxUYWJiZWRNb2R1bGUiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY2FsbFN1cGVyIiwibWFpblRhYklkIiwiZGVmYXVsdFN1YlRhYklkIiwiYWpheEFjdGlvblByZWZpeCIsImxvY2FsaXplZERhdGFOYW1lIiwiX2luaGVyaXRzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJiaW5kTW9kdWxlU3BlY2lmaWNFdmVudHMiLCJfc3VwZXJQcm9wR2V0IiwiJGNvbnRhaW5lciIsImxlbmd0aCIsIm9uTWFpblRhYkFjdGl2YXRlZCIsImpRdWVyeSIsImRvY3VtZW50IiwicmVhZHkiLCIkIiwid2luZG93IiwiUHJvZHVjdEVzdGltYXRvckxhYmVsU2V0dGluZ3NNb2R1bGVJbnN0YW5jZSIsImVycm9yIiwiUHJvZHVjdEVzdGltYXRvclNldHRpbmdzSW5zdGFuY2UiLCJzaG93Tm90aWNlIiwid2FybiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/admin/modules/LabelSettingsModule.js\n");

/***/ }),

/***/ "./src/js/admin/modules/NetsuiteSettingsModule.js":
/*!********************************************************!*\
  !*** ./src/js/admin/modules/NetsuiteSettingsModule.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils_ajax__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @utils/ajax */ \"./src/js/utils/ajax.js\");\n/* harmony import */ var _utils_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils/dom */ \"./src/js/utils/dom.js\");\n/* harmony import */ var _common_ProductEstimatorSettings__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/ProductEstimatorSettings */ \"./src/js/admin/common/ProductEstimatorSettings.js\");\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n/**\n * NetSuite Settings JavaScript\n *\n * Handles functionality specific to the NetSuite integration settings tab.\n */\n // Specific import from original\n // Specific import from original\n\n // Adjust path as needed\nvar NetsuiteSettingsModule = /*#__PURE__*/function (_ProductEstimatorSett) {\n  /**\n   * Initialize the module\n   */\n  function NetsuiteSettingsModule() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, NetsuiteSettingsModule);\n    _this = _callSuper(this, NetsuiteSettingsModule, [{\n      isModule: true,\n      settingsObjectName: 'netsuiteSettings',\n      defaultTabId: 'netsuite'\n    }]);\n\n    // Bind methods\n    _this.testNetsuiteConnection = _this.testNetsuiteConnection.bind(_this);\n    _this.toggleNetsuiteFields = _this.toggleNetsuiteFields.bind(_this);\n    _this.validateUrl = _this.validateUrl.bind(_this);\n    _this.validateRequestLimit = _this.validateRequestLimit.bind(_this);\n    _this.validateCacheTime = _this.validateCacheTime.bind(_this);\n    _this.handleTabChanged = _this.handleTabChanged.bind(_this);\n    return _this;\n  }\n\n  /**\n   * Module-specific initialization.\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(NetsuiteSettingsModule, _ProductEstimatorSett);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(NetsuiteSettingsModule, [{\n    key: \"moduleInit\",\n    value: function moduleInit() {\n      this.bindEvents();\n      this.setupDependentFields(); // Call after DOM is ready and elements are available\n    }\n\n    /**\n     * Bind event handlers\n     */\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.$(document).on('product_estimator_tab_changed', this.handleTabChanged);\n      this.$('#test-netsuite-connection').on('click', this.testNetsuiteConnection);\n      this.$('#netsuite_enabled').on('change', this.toggleNetsuiteFields);\n      this.$('#netsuite_api_url, #netsuite_token_url').on('blur', this.validateUrl); // Use blur for validation after input\n      this.$('#netsuite_request_limit').on('blur', this.validateRequestLimit);\n      this.$('#netsuite_cache_time').on('blur', this.validateCacheTime);\n    }\n  }, {\n    key: \"setupDependentFields\",\n    value: function setupDependentFields() {\n      this.toggleNetsuiteFields(); // Initial toggle based on current state\n    }\n  }, {\n    key: \"toggleNetsuiteFields\",\n    value: function toggleNetsuiteFields() {\n      var enabled = this.$('#netsuite_enabled').is(':checked');\n      var $fields = this.$('#netsuite_client_id, #netsuite_client_secret, #netsuite_api_url, #netsuite_token_url, #netsuite_request_limit, #netsuite_cache_time').closest('tr');\n      var $testButtonContainer = this.$('#test-netsuite-connection').closest('p'); // Or other container\n\n      if (enabled) {\n        $fields.fadeIn(200);\n        $testButtonContainer.fadeIn(200);\n      } else {\n        $fields.fadeOut(200);\n        $testButtonContainer.fadeOut(200);\n      }\n    }\n  }, {\n    key: \"testNetsuiteConnection\",\n    value: function testNetsuiteConnection() {\n      var $button = this.$('#test-netsuite-connection');\n      var $result = this.$('#connection-result'); // Assuming this element exists\n\n      if ($button.prop('disabled')) return;\n      var i18n = this.settings.i18n || window.netsuiteSettings && window.netsuiteSettings.i18n || {};\n      $button.prop('disabled', true);\n      $result.html(\"<span style=\\\"color:#666;\\\">\".concat(i18n.testing || 'Testing connection...', \"</span>\"));\n      (0,_utils_ajax__WEBPACK_IMPORTED_MODULE_5__.ajaxRequest)({\n        // Using imported ajaxRequest directly as in original\n        url: this.settings.ajaxUrl,\n        // Use ajaxUrl from this.settings\n        type: 'POST',\n        data: {\n          action: 'test_netsuite_connection',\n          // Ensure this action is correct\n          nonce: this.settings.nonce // Use nonce from this.settings\n        }\n      }).then(function (response) {\n        // Assuming response is { success: true/false, data: { message: \"...\" } } or { message: \"...\" }\n        var message = response.data && response.data.message ? response.data.message : response.message;\n        $result.html(\"<span style=\\\"color:green;\\\">\".concat(message || 'Connection successful.', \"</span>\"));\n      }).catch(function (error) {\n        var errorMessage = error && error.message ? error.message : i18n.error || 'Error';\n        $result.html(\"<span style=\\\"color:red;\\\">\".concat(errorMessage, \"</span>\"));\n      }).finally(function () {\n        $button.prop('disabled', false);\n      });\n    }\n  }, {\n    key: \"handleTabChanged\",\n    value: function handleTabChanged(e, tabId) {\n      if (tabId === this.settings.tab_id) {\n        this.toggleNetsuiteFields(); // Refresh field visibility when tab becomes active\n      }\n      this.clearSubTabFromUrl();\n    }\n  }, {\n    key: \"validateUrl\",\n    value: function validateUrl(e) {\n      var $field = this.$(e.currentTarget);\n      var value = $field.val().trim();\n      var i18n = this.settings.i18n || window.netsuiteSettings && window.netsuiteSettings.i18n || {};\n      if (value && !this.isValidUrl(value)) {\n        this.showFieldError($field, i18n.invalidUrl || 'Please enter a valid URL.');\n        return false;\n      }\n      this.clearFieldError($field);\n      return true;\n    }\n  }, {\n    key: \"isValidUrl\",\n    value: function isValidUrl(url) {\n      try {\n        new URL(url);\n        return true;\n      } catch (_) {\n        return false;\n      }\n    }\n  }, {\n    key: \"validateRequestLimit\",\n    value: function validateRequestLimit(e) {\n      var $field = this.$(e.currentTarget);\n      var value = parseInt($field.val(), 10);\n      var i18n = this.settings.i18n || window.netsuiteSettings && window.netsuiteSettings.i18n || {};\n      if (isNaN(value) || value < 1 || value > 100) {\n        // Example range\n        this.showFieldError($field, i18n.requestLimitError || 'Request limit must be between 1 and 100.');\n        return false;\n      }\n      this.clearFieldError($field);\n      return true;\n    }\n  }, {\n    key: \"validateCacheTime\",\n    value: function validateCacheTime(e) {\n      var $field = this.$(e.currentTarget);\n      var value = parseInt($field.val(), 10);\n      var i18n = this.settings.i18n || window.netsuiteSettings && window.netsuiteSettings.i18n || {};\n      if (isNaN(value) || value < 0) {\n        // Example: must be non-negative\n        this.showFieldError($field, i18n.cacheTimeError || 'Cache time must be at least 0.');\n        return false;\n      }\n      this.clearFieldError($field);\n      return true;\n    }\n\n    // showFieldError and clearFieldError are inherited.\n  }, {\n    key: \"addInfoSection\",\n    value: function addInfoSection(message) {\n      // Example of using imported createElement\n      var $settingsTable = this.$('#netsuite-settings-table'); // Ensure this ID exists\n      if (!$settingsTable.length || !message) return;\n      this.$('.netsuite-info-section').remove(); // Remove existing\n\n      var infoSection = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_6__.createElement)('div', {\n        // createElement from @utils/dom\n        className: 'netsuite-info-section notice notice-info',\n        style: {\n          padding: '10px',\n          marginBottom: '15px'\n        },\n        innerHTML: message // Assuming message can be HTML\n      });\n      $settingsTable.before(infoSection);\n    }\n  }]);\n}(_common_ProductEstimatorSettings__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\njQuery(document).ready(function () {\n  if (jQuery('#netsuite').length) {\n    // Assuming 'netsuite' is the ID of the tab content\n    window.NetsuiteSettingsModuleInstance = new NetsuiteSettingsModule();\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (NetsuiteSettingsModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/admin/modules/NetsuiteSettingsModule.js\n");

/***/ }),

/***/ "./src/js/admin/modules/NotificationSettingsModule.js":
/*!************************************************************!*\
  !*** ./src/js/admin/modules/NotificationSettingsModule.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n/* harmony import */ var _common_VerticalTabbedModule__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/VerticalTabbedModule */ \"./src/js/admin/common/VerticalTabbedModule.js\");\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n/**\n * Notification Settings JavaScript\n * Extends VerticalTabbedModule for common vertical tab and form handling.\n */\n // Import utilities needed for this module\n// import { setupTinyMCEHTMLPreservation } from '@utils/tinymce-preserver'; // If still needed specifically here\n\n // Adjust path as needed\nvar NotificationSettingsModule = /*#__PURE__*/function (_VerticalTabbedModule) {\n  function NotificationSettingsModule() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, NotificationSettingsModule);\n    _this = _callSuper(this, NotificationSettingsModule, [{\n      mainTabId: 'notifications',\n      defaultSubTabId: 'notifications-general',\n      // Default vertical tab\n      ajaxActionPrefix: 'save_notifications',\n      // Results in 'save_notifications_settings'\n      localizedDataName: 'notificationSettings'\n    }]);\n    _this.mediaFrame = null; // Specific to notifications for image uploads\n    return _this;\n  }\n\n  /**\n   * Override to bind module-specific events.\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(NotificationSettingsModule, _VerticalTabbedModule);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(NotificationSettingsModule, [{\n    key: \"bindModuleSpecificEvents\",\n    value: function bindModuleSpecificEvents() {\n      _superPropGet(NotificationSettingsModule, \"bindModuleSpecificEvents\", this, 3)([]);\n      if (!this.$container || !this.$container.length) return;\n      this.$container.on('change', '#enable_notifications', this.handleToggleAllNotifications.bind(this));\n      this.$container.on('change', 'input[id^=\"notification_\"][id$=\"_enabled\"]', this.handleToggleSingleNotification.bind(this));\n      this.$container.on('click', '.image-upload-button', this.handleImageUpload.bind(this));\n      this.$container.on('click', '.image-remove-button', this.handleImageRemove.bind(this));\n      this.$container.on('change', 'input[type=\"email\"]', this.handleEmailValidation.bind(this)); // e.g. #from_email\n    }\n\n    /**\n     * Override for actions when the main \"Notifications\" tab is activated.\n     */\n  }, {\n    key: \"onMainTabActivated\",\n    value: function onMainTabActivated() {\n      _superPropGet(NotificationSettingsModule, \"onMainTabActivated\", this, 3)([]);\n      this.setupDependentFieldsState(); // Initial state for toggles\n      this.setupNotificationEditors(); // e.g. TinyMCE\n      // this.setupMediaUploader(); // Media uploader is more general, could be in init if not already.\n      // Or ensure it's setup if it relies on tab being visible.\n    }\n  }, {\n    key: \"setupNotificationEditors\",\n    value: function setupNotificationEditors() {\n      if (!this.$container || !this.localizedData) return;\n      // Example: If using setupTinyMCEHTMLPreservation for specific editors in notifications\n      // const editorIds = this.localizedData.notification_types.map(type => `notification_${type}_content`);\n      // setupTinyMCEHTMLPreservation(editorIds, `#${this.config.mainTabId}`);\n    }\n  }, {\n    key: \"setupDependentFieldsState\",\n    value: function setupDependentFieldsState() {\n      var _this2 = this;\n      if (!this.$container || !this.$container.length) return;\n      this.handleToggleAllNotifications(); // Initial check for global toggle\n\n      // Initial check for individual notification toggles\n      this.$container.find('input[id^=\"notification_\"][id$=\"_enabled\"]').each(function (i, el) {\n        var $toggle = jQuery(el);\n        _this2.toggleSingleNotificationFields($toggle);\n      });\n    }\n  }, {\n    key: \"handleToggleAllNotifications\",\n    value: function handleToggleAllNotifications() {\n      var _this3 = this;\n      if (!this.$container || !this.$container.length) return;\n      var $globalEnableCheckbox = this.$container.find('#enable_notifications');\n      if (!$globalEnableCheckbox.length) {\n        return;\n      }\n      var isEnabled = $globalEnableCheckbox.is(':checked');\n      var $verticalTabsNavList = this.$container.find('.pe-vtabs-nav-list, .vertical-tabs-nav');\n      var $allNotificationTypeForms = this.$container.find('.pe-vtabs-tab-form[data-tab-id*=\"notification_type_\"]');\n      if (isEnabled) {\n        $verticalTabsNavList.removeClass('pe-vtabs-nav-disabled'); // Use class from admin-vertical-tabs.css\n        // Enable fields in specific notification type forms, but respect their individual toggles\n        this.$container.find('input[id^=\"notification_\"][id$=\"_enabled\"]').each(function (i, el) {\n          _this3.toggleSingleNotificationFields(jQuery(el));\n        });\n      } else {\n        $verticalTabsNavList.addClass('pe-vtabs-nav-disabled');\n        // Disable all fields in all notification type forms\n        $allNotificationTypeForms.find('input, textarea, button, select').not('.save-settings').prop('disabled', true);\n        $allNotificationTypeForms.find('.wp-editor-area').each(function () {\n          var editor = tinyMCE.get(jQuery(this).attr('id'));\n          if (editor) editor.setMode('readonly');\n        });\n      }\n    }\n  }, {\n    key: \"handleToggleSingleNotification\",\n    value: function handleToggleSingleNotification(e) {\n      this.toggleSingleNotificationFields(jQuery(e.currentTarget));\n    }\n  }, {\n    key: \"toggleSingleNotificationFields\",\n    value: function toggleSingleNotificationFields($toggleCheckbox) {\n      if (!this.$container || !this.$container.length) return;\n      var $ = jQuery;\n      var isChecked = $toggleCheckbox.is(':checked');\n      var formDataType = $toggleCheckbox.attr('id').replace('notification_', '').replace('_enabled', '');\n      var $form = this.$container.find(\".pe-vtabs-tab-form[data-sub-tab-id=\\\"notification-type-\".concat(formDataType, \"\\\"]\"));\n      if (!$form.length) {\n        return;\n      }\n\n      // Only proceed if global notifications are enabled\n      var $globalEnableCheckbox = this.$container.find('#enable_notifications');\n      if ($globalEnableCheckbox.length && !$globalEnableCheckbox.is(':checked')) {\n        // Fields should remain disabled by handleToggleAllNotifications\n        return;\n      }\n      $form.find('input, textarea, button, select').not($toggleCheckbox) // Don't disable the toggle itself\n      .not('.save-settings') // Don't disable the save button\n      .prop('disabled', !isChecked);\n      $form.find('.wp-editor-area').each(function () {\n        var editor = tinyMCE.get($(this).attr('id'));\n        if (editor) {\n          editor.setMode(isChecked ? 'design' : 'readonly');\n        }\n      });\n    }\n  }, {\n    key: \"handleImageUpload\",\n    value: function handleImageUpload(e) {\n      var _this4 = this;\n      e.preventDefault();\n      var $button = jQuery(e.currentTarget);\n      var fieldId = $button.data('field-id'); // e.g., 'company_logo'\n\n      if (this.mediaFrame) {\n        this.mediaFrame.off('select');\n      } else {\n        if (typeof wp === 'undefined' || !wp.media) {\n          return;\n        }\n        this.mediaFrame = wp.media({\n          title: this.localizedData.i18n.selectImage || 'Select Image',\n          button: {\n            text: this.localizedData.i18n.useThisImage || 'Use this image'\n          },\n          multiple: false,\n          library: {\n            type: 'image'\n          }\n        });\n      }\n      this.mediaFrame.on('select', function () {\n        var attachment = _this4.mediaFrame.state().get('selection').first().toJSON();\n        var $fieldInput = _this4.$container.find(\"#\".concat(fieldId));\n        var $previewWrapper = $fieldInput.closest('td').find('.image-preview-wrapper'); // Find relative to the input\n        var $removeButton = $fieldInput.closest('td').find('.image-remove-button');\n        $fieldInput.val(attachment.id).trigger('change');\n        $previewWrapper.html(\"<img src=\\\"\".concat(attachment.sizes.thumbnail ? attachment.sizes.thumbnail.url : attachment.url, \"\\\" alt=\\\"Preview\\\" />\"));\n        $removeButton.removeClass('hidden');\n      });\n      this.mediaFrame.open();\n    }\n  }, {\n    key: \"handleImageRemove\",\n    value: function handleImageRemove(e) {\n      e.preventDefault();\n      var $button = jQuery(e.currentTarget);\n      var fieldId = $button.data('field-id');\n      var $fieldInput = this.$container.find(\"#\".concat(fieldId));\n      var $previewWrapper = $fieldInput.closest('td').find('.image-preview-wrapper');\n      $fieldInput.val('').trigger('change');\n      $previewWrapper.empty();\n      $button.addClass('hidden');\n    }\n  }, {\n    key: \"handleEmailValidation\",\n    value: function handleEmailValidation(e) {\n      var $field = jQuery(e.target);\n      if (!$field.closest(this.$container).length) return;\n      var email = $field.val().trim();\n      var i18n = this.localizedData && this.localizedData.i18n || {};\n      if (email && !_utils__WEBPACK_IMPORTED_MODULE_6__.validation.validateEmail(email)) {\n        this.showFieldError($field, i18n.validationErrorEmail || 'Please enter a valid email address.');\n        return false;\n      }\n      this.clearFieldError($field);\n      return true;\n    }\n  }]);\n}(_common_VerticalTabbedModule__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\njQuery(document).ready(function () {\n  if (jQuery('#notifications').length) {\n    window.ProductEstimatorNotificationSettingsModule = new NotificationSettingsModule();\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (NotificationSettingsModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/admin/modules/NotificationSettingsModule.js\n");

/***/ }),

/***/ "./src/js/admin/modules/PricingRulesSettingsModule.js":
/*!************************************************************!*\
  !*** ./src/js/admin/modules/PricingRulesSettingsModule.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n/* harmony import */ var _common_AdminTableManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/AdminTableManager */ \"./src/js/admin/common/AdminTableManager.js\");\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n/**\n * Pricing Rules Settings JavaScript\n *\n * Handles functionality specific to the pricing rules settings tab.\n * Extends AdminTableManager for common table and form management.\n */\n\n\nvar PricingRulesSettingsModule = /*#__PURE__*/function (_AdminTableManager) {\n  /**\n   * Constructor for PricingRulesSettingsModule.\n   */\n  function PricingRulesSettingsModule() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, PricingRulesSettingsModule);\n    var config = {\n      mainTabId: 'pricing_rules',\n      defaultSubTabId: 'pricing_rules_table',\n      // Specify default sub-tab ID to match PHP definitions\n      localizedDataName: 'pricingRulesSettings'\n      // AdminTableManager passes this to VerticalTabbedModule,\n      // which passes relevant parts to ProductEstimatorSettings.\n    };\n    _this = _callSuper(this, PricingRulesSettingsModule, [config]); // Calls AdminTableManager constructor\n\n    // this.logger is initialized by AdminTableManager\n    // this.settings is populated by ProductEstimatorSettings via the super chain\n\n    // Defer DOM-dependent specific initializations until the base AdminTableManager signals it's ready\n    _this.$(document).on(\"admin_table_manager_ready_\".concat(_this.config.mainTabId), function () {\n      _this._cachePricingRulesDOM();\n      _this._bindSpecificEvents();\n      _this._initializeSelect2();\n    });\n    return _this;\n  }\n\n  /**\n   * Cache DOM elements specific to Pricing Rules, beyond what AdminTableManager caches.\n   * @private\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(PricingRulesSettingsModule, _AdminTableManager);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(PricingRulesSettingsModule, [{\n    key: \"_cachePricingRulesDOM\",\n    value: function _cachePricingRulesDOM() {\n      // this.dom is initialized by AdminTableManager. Add Pricing Rules specific elements.\n      if (this.settings && this.settings.selectors) {\n        var prSelectors = this.settings.selectors;\n        this.dom.categoriesSelect = this.$container.find(prSelectors.categoriesSelect);\n        this.dom.pricingMethodSelect = this.$container.find(prSelectors.pricingMethodSelect);\n        this.dom.pricingSourceSelect = this.$container.find(prSelectors.pricingSourceSelect);\n      } else {\n        this.logger.warn('PricingRulesSettingsModule: settings or selectors not available for DOM caching');\n      }\n    }\n\n    /**\n     * Bind events specific to Pricing Rules.\n     * This is called after the `admin_table_manager_ready` event.\n     * @private\n     */\n  }, {\n    key: \"_bindSpecificEvents\",\n    value: function _bindSpecificEvents() {\n      // Ensure this.dom elements are available (cached by _cachePricingRulesDOM or base)\n      if (!this.dom.form || !this.dom.form.length) {\n        return;\n      }\n    }\n\n    /**\n     * Initialize Select2 components.\n     * This is called after the `admin_table_manager_ready` event.\n     * @private\n     */\n  }, {\n    key: \"_initializeSelect2\",\n    value: function _initializeSelect2() {\n      this.initializeSelect2Dropdowns({\n        elements: [{\n          element: this.dom.categoriesSelect,\n          placeholderKey: 'selectCategories',\n          fallbackText: 'Select categories',\n          name: 'categories',\n          config: {\n            clearInitial: true\n          }\n        }],\n        moduleName: 'Pricing Rules'\n      });\n    }\n\n    /**\n     * Overridden from VerticalTabbedModule. Called when the \"Pricing Rules\" main tab is activated.\n     */\n  }, {\n    key: \"onMainTabActivated\",\n    value: function onMainTabActivated() {\n      _superPropGet(PricingRulesSettingsModule, \"onMainTabActivated\", this, 3)([]); // Call parent method\n\n      // Refresh Select2 components if they're already initialized\n      if (this.dom.categoriesSelect && this.dom.categoriesSelect.hasClass(\"select2-hidden-accessible\")) {\n        this.refreshSelect2(this.dom.categoriesSelect);\n      }\n    }\n\n    /**\n     * Override AdminTableManager.resetForm to include Pricing Rules specific fields.\n     */\n  }, {\n    key: \"resetForm\",\n    value: function resetForm() {\n      var _this$dom$categoriesS, _this$dom$pricingMeth, _this$dom$pricingSour;\n      _superPropGet(PricingRulesSettingsModule, \"resetForm\", this, 3)([]); // Call base class method first\n\n      // Reset Pricing Rules specific fields\n      (_this$dom$categoriesS = this.dom.categoriesSelect) === null || _this$dom$categoriesS === void 0 || _this$dom$categoriesS.val(null).trigger('change.select2'); // Clear Select2\n      (_this$dom$pricingMeth = this.dom.pricingMethodSelect) === null || _this$dom$pricingMeth === void 0 || _this$dom$pricingMeth.val('');\n      (_this$dom$pricingSour = this.dom.pricingSourceSelect) === null || _this$dom$pricingSour === void 0 || _this$dom$pricingSour.val('');\n    }\n\n    /**\n     * Override AdminTableManager.populateFormWithData for Pricing Rules specific fields.\n     * @param {object} itemData - The data for the pricing rule item to populate the form with\n     * @override\n     */\n  }, {\n    key: \"populateFormWithData\",\n    value: function populateFormWithData(itemData) {\n      var _this2 = this;\n      _superPropGet(PricingRulesSettingsModule, \"populateFormWithData\", this, 3)([itemData]); // Sets item ID, calls base logic\n\n      var categories = itemData.categories || [];\n      var pricingMethod = itemData.pricing_method || '';\n      var pricingSource = itemData.pricing_source || '';\n\n      // Use setTimeout to allow dependent field visibility changes to complete\n      setTimeout(function () {\n        var _this2$dom$categories, _this2$dom$pricingMet, _this2$dom$pricingSou;\n        (_this2$dom$categories = _this2.dom.categoriesSelect) === null || _this2$dom$categories === void 0 || _this2$dom$categories.val(categories).trigger('change.select2');\n        (_this2$dom$pricingMet = _this2.dom.pricingMethodSelect) === null || _this2$dom$pricingMet === void 0 || _this2$dom$pricingMet.val(pricingMethod);\n        (_this2$dom$pricingSou = _this2.dom.pricingSourceSelect) === null || _this2$dom$pricingSou === void 0 || _this2$dom$pricingSou.val(pricingSource);\n        _this2.formModified = false; // Reset modified flag after populating\n      }, 150); // Small delay\n    }\n\n    /**\n     * Override AdminTableManager.validateForm for Pricing Rules specific validation.\n     * @returns {boolean} True if the form passes validation, false otherwise\n     * @override\n     */\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var _this$dom$categoriesS2, _this$dom$pricingMeth2, _this$dom$pricingSour2, _this$dom$categoriesS3;\n      var isValid = _superPropGet(PricingRulesSettingsModule, \"validateForm\", this, 3)([]); // Perform base validation first\n\n      // Get values\n      var categories = (_this$dom$categoriesS2 = this.dom.categoriesSelect) === null || _this$dom$categoriesS2 === void 0 ? void 0 : _this$dom$categoriesS2.val(); // Returns array for multi-select\n      var pricingMethod = (_this$dom$pricingMeth2 = this.dom.pricingMethodSelect) === null || _this$dom$pricingMeth2 === void 0 ? void 0 : _this$dom$pricingMeth2.val();\n      var pricingSource = (_this$dom$pricingSour2 = this.dom.pricingSourceSelect) === null || _this$dom$pricingSour2 === void 0 ? void 0 : _this$dom$pricingSour2.val();\n\n      // i18n messages from this.settings.i18n\n      var i18n = this.settings.i18n || {};\n\n      // Clear previous specific errors\n      this.clearFieldError((_this$dom$categoriesS3 = this.dom.categoriesSelect) === null || _this$dom$categoriesS3 === void 0 ? void 0 : _this$dom$categoriesS3.next('.select2-container'));\n      this.clearFieldError(this.dom.pricingMethodSelect);\n      this.clearFieldError(this.dom.pricingSourceSelect);\n      if (!categories || categories.length === 0) {\n        var _this$dom$categoriesS4;\n        this.showFieldError((_this$dom$categoriesS4 = this.dom.categoriesSelect) === null || _this$dom$categoriesS4 === void 0 ? void 0 : _this$dom$categoriesS4.next('.select2-container'), i18n.selectCategories || 'Please select categories.');\n        isValid = false;\n      }\n      if (!pricingMethod) {\n        this.showFieldError(this.dom.pricingMethodSelect, i18n.selectPricingMethod || 'Please select a pricing method.');\n        isValid = false;\n      }\n      if (!pricingSource) {\n        this.showFieldError(this.dom.pricingSourceSelect, i18n.selectPricingSource || 'Please select a pricing source.');\n        isValid = false;\n      }\n      return isValid;\n    }\n\n    /**\n     * Custom column population method for 'categories' column\n     * @param {jQuery} $cell - The table cell element to populate\n     * @param {object} itemData - The data for the current row\n     */\n  }, {\n    key: \"populateColumn_categories\",\n    value: function populateColumn_categories($cell, itemData) {\n      $cell.text(itemData.category_names || 'N/A');\n    }\n\n    /**\n     * Custom column population method for 'pricing_method' column\n     * @param {jQuery} $cell - The table cell element to populate\n     * @param {object} itemData - The data for the current row\n     */\n  }, {\n    key: \"populateColumn_pricing_method\",\n    value: function populateColumn_pricing_method($cell, itemData) {\n      $cell.text(itemData.pricing_label || 'N/A');\n    }\n  }]);\n}(_common_AdminTableManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"]); // Initialize the module when the DOM is ready and its main tab container exists.\njQuery(document).ready(function ($) {\n  var mainTabId = 'pricing_rules'; // Specific to this module\n  var localizedDataObjectName = 'pricingRulesSettings'; // Global settings object name\n\n  if ($(\"#\".concat(mainTabId)).length) {\n    // Check if the global localized data for this module is available\n    if (window[localizedDataObjectName]) {\n      // Instantiate the module once\n      if (!window.PricingRulesSettingsModuleInstance) {\n        try {\n          // Create a properly configured instance with the correct defaultSubTabId\n          window.PricingRulesSettingsModuleInstance = new PricingRulesSettingsModule();\n        } catch (error) {\n          var errorLogger = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('PricingRulesInit');\n          errorLogger.error('Error instantiating PricingRulesSettingsModule:', error);\n          // Use the global notice system if ProductEstimatorSettings is available\n          if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n            window.ProductEstimatorSettingsInstance.showNotice('Failed to initialize Pricing Rules settings. Check console for errors.', 'error');\n          }\n        }\n      }\n    } else {\n      var _errorLogger = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('PricingRulesInit');\n      _errorLogger.error(\"Localized data object \\\"\".concat(localizedDataObjectName, \"\\\" not found for tab: \").concat(mainTabId, \". Module cannot be initialized.\"));\n      if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n        window.ProductEstimatorSettingsInstance.showNotice(\"Configuration data for Pricing Rules (\\\"\".concat(localizedDataObjectName, \"\\\") is missing. Module disabled.\"), 'error');\n      }\n    }\n  } else {\n    var warnLogger = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('PricingRulesInit');\n    warnLogger.warn(\"Main container #\".concat(mainTabId, \" not found. PricingRulesSettingsModule will not be initialized.\"));\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (PricingRulesSettingsModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/admin/modules/PricingRulesSettingsModule.js\n");

/***/ }),

/***/ "./src/js/admin/modules/ProductAdditionsSettingsModule.js":
/*!****************************************************************!*\
  !*** ./src/js/admin/modules/ProductAdditionsSettingsModule.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n/* harmony import */ var _common_AdminTableManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/AdminTableManager */ \"./src/js/admin/common/AdminTableManager.js\");\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n// File: admin/js/modules/ProductAdditionsSettingsModule.js\n\n/**\n * Product Additions Settings JavaScript\n *\n * Handles functionality specific to the product additions settings tab.\n * Extends AdminTableManager for common table and form management.\n */\n // Import utilities needed for this module\n\n // Adjust path as needed\nvar ProductAdditionsSettingsModule = /*#__PURE__*/function (_AdminTableManager) {\n  /**\n   * Constructor for ProductAdditionsSettingsModule.\n   */\n  function ProductAdditionsSettingsModule() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ProductAdditionsSettingsModule);\n    var config = {\n      mainTabId: 'product_additions',\n      localizedDataName: 'productAdditionsSettings'\n      // AdminTableManager passes this to VerticalTabbedModule,\n      // which passes relevant parts to ProductEstimatorSettings.\n    };\n    _this = _callSuper(this, ProductAdditionsSettingsModule, [config]); // Calls AdminTableManager constructor\n\n    // We can access feature flags via this.settings.feature_flags\n    // This is used in _handleRelationTypeChange to show/hide fields\n\n    // this.logger is initialized by AdminTableManager.\n    // this.settings (formerly this.localizedData in VTM/ATM context before PES refactor)\n    // is populated by ProductEstimatorSettings via the super chain.\n    // this.config from AdminTableManager holds the original config passed here.\n\n    _this.productSearchTimeout = null;\n\n    // Defer DOM-dependent specific initializations until the base AdminTableManager signals it's ready.\n    // The event name uses this.config.mainTabId.\n    // Note: this.config.mainTabId is from the config passed to super(), available after super() call.\n    _this.$(document).on(\"admin_table_manager_ready_\".concat(_this.config.mainTabId), function () {\n      _this._cacheProductAdditionsDOM();\n      _this._bindSpecificEvents();\n      _this._initializeSelect2();\n    });\n    return _this;\n  }\n\n  /**\n   * Cache DOM elements specific to Product Additions, beyond what AdminTableManager caches.\n   * This is called after AdminTableManager's cacheDOM.\n   * @private\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(ProductAdditionsSettingsModule, _AdminTableManager);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ProductAdditionsSettingsModule, [{\n    key: \"_cacheProductAdditionsDOM\",\n    value: function _cacheProductAdditionsDOM() {\n      // this.dom is initialized by AdminTableManager. Add Product Additions specific elements.\n      // Ensure selectors are defined in your localizedData (productAdditionsSettings)\n      // e.g., productAdditionsSettings.selectors.relationTypeSelect\n      if (this.settings && this.settings.selectors) {\n        // this.settings is from ProductEstimatorSettings base\n        var paSelectors = this.settings.selectors; // Assuming selectors are flat in this.settings\n        this.dom.relationTypeSelect = this.$container.find(paSelectors.relationTypeSelect);\n        this.dom.sourceCategorySelect = this.$container.find(paSelectors.sourceCategorySelect);\n        this.dom.targetCategorySelect = this.$container.find(paSelectors.targetCategorySelect);\n        this.dom.targetCategoryRow = this.$container.find(paSelectors.targetCategoryRow);\n        this.dom.productSearchInput = this.$container.find(paSelectors.productSearchInput);\n        this.dom.productSearchRow = this.$container.find(paSelectors.productSearchRow);\n        this.dom.productSearchResults = this.$container.find(paSelectors.productSearchResults);\n        this.dom.selectedProductIdInput = this.$container.find(paSelectors.selectedProductIdInput);\n        this.dom.selectedProductDisplay = this.$container.find(paSelectors.selectedProductDisplay);\n        this.dom.clearProductButton = this.$container.find(paSelectors.clearProductButton);\n        this.dom.noteTextInput = this.$container.find(paSelectors.noteTextInput);\n        this.dom.noteRow = this.$container.find(paSelectors.noteRow);\n      } else {\n        this.logger.warn('ProductAdditionsSettingsModule: Settings or selectors not available for DOM caching');\n      }\n    }\n\n    /**\n     * Bind events specific to Product Additions.\n     * This is called after the `admin_table_manager_ready` event.\n     * @private\n     */\n  }, {\n    key: \"_bindSpecificEvents\",\n    value: function _bindSpecificEvents() {\n      var _this$dom$relationTyp, _this$dom$targetCateg, _this$dom$productSear, _this$dom$clearProduc;\n      // Ensure this.dom elements are available (cached by _cacheProductAdditionsDOM or base)\n      if (!this.dom.form || !this.dom.form.length) {\n        return;\n      }\n      this.dom.form.on('click.productAdditions', '.product-result-item', this._handleProductResultClick.bind(this));\n      (_this$dom$relationTyp = this.dom.relationTypeSelect) === null || _this$dom$relationTyp === void 0 || _this$dom$relationTyp.on('change.productAdditions', this._handleRelationTypeChange.bind(this));\n      (_this$dom$targetCateg = this.dom.targetCategorySelect) === null || _this$dom$targetCateg === void 0 || _this$dom$targetCateg.on('change.productAdditions', this._handleTargetCategoryChange.bind(this));\n      (_this$dom$productSear = this.dom.productSearchInput) === null || _this$dom$productSear === void 0 || _this$dom$productSear.on('keyup.productAdditions', this._handleProductSearchKeyup.bind(this));\n      (_this$dom$clearProduc = this.dom.clearProductButton) === null || _this$dom$clearProduc === void 0 || _this$dom$clearProduc.on('click.productAdditions', this._handleClearProduct.bind(this));\n    }\n\n    /**\n     * Initialize Select2 components.\n     * This is called after the `admin_table_manager_ready` event.\n     * @private\n     */\n  }, {\n    key: \"_initializeSelect2\",\n    value: function _initializeSelect2() {\n      this.initializeSelect2Dropdowns({\n        elements: [{\n          element: this.dom.sourceCategorySelect,\n          placeholderKey: 'selectSourceCategories',\n          fallbackText: 'Select source categories',\n          name: 'source categories',\n          config: {\n            clearInitial: true\n          }\n        }, {\n          element: this.dom.targetCategorySelect,\n          placeholderKey: 'selectTargetCategory',\n          fallbackText: 'Select a category',\n          name: 'target category',\n          config: {\n            clearInitial: true\n          }\n        }],\n        moduleName: 'Product Additions'\n      });\n    }\n\n    /**\n     * Overridden from VerticalTabbedModule. Called when the \"Product Additions\" main tab is activated.\n     */\n  }, {\n    key: \"onMainTabActivated\",\n    value: function onMainTabActivated() {\n      _superPropGet(ProductAdditionsSettingsModule, \"onMainTabActivated\", this, 3)([]); // Call parent method\n\n      // Refresh Select2 components if they're already initialized\n      if (this.dom.sourceCategorySelect && this.dom.sourceCategorySelect.hasClass(\"select2-hidden-accessible\")) {\n        this.refreshSelect2(this.dom.sourceCategorySelect);\n      }\n      if (this.dom.targetCategorySelect && this.dom.targetCategorySelect.hasClass(\"select2-hidden-accessible\")) {\n        this.refreshSelect2(this.dom.targetCategorySelect);\n      }\n\n      // The inherited VerticalTabbedModule.handleMainTabChanged calls setupVerticalTabs,\n      // which correctly handles the sub_tab in the URL. No manual sub_tab clearing needed here.\n    }\n\n    /**\n     * Handles changes in the relation type select dropdown.\n     * Shows/hides appropriate fields based on the selected relation type.\n     * @private\n     */\n  }, {\n    key: \"_handleRelationTypeChange\",\n    value: function _handleRelationTypeChange() {\n      var _this$dom$relationTyp2, _this$dom$targetCateg2, _this$dom$productSear2, _this$dom$noteRow, _this$dom$targetCateg3, _this$dom$noteTextInp;\n      var actionType = (_this$dom$relationTyp2 = this.dom.relationTypeSelect) === null || _this$dom$relationTyp2 === void 0 ? void 0 : _this$dom$relationTyp2.val();\n\n      // Check feature flags to determine UI behavior\n\n      (_this$dom$targetCateg2 = this.dom.targetCategoryRow) === null || _this$dom$targetCateg2 === void 0 || _this$dom$targetCateg2.hide();\n      (_this$dom$productSear2 = this.dom.productSearchRow) === null || _this$dom$productSear2 === void 0 || _this$dom$productSear2.hide();\n      (_this$dom$noteRow = this.dom.noteRow) === null || _this$dom$noteRow === void 0 || _this$dom$noteRow.hide();\n      (_this$dom$targetCateg3 = this.dom.targetCategorySelect) === null || _this$dom$targetCateg3 === void 0 || _this$dom$targetCateg3.val(null).trigger('change.select2'); // Reset Select2\n      this._clearProductSelectionFields();\n      (_this$dom$noteTextInp = this.dom.noteTextInput) === null || _this$dom$noteTextInp === void 0 || _this$dom$noteTextInp.val('');\n      if (actionType === 'auto_add_by_category') {\n        var _this$dom$targetCateg4;\n        (_this$dom$targetCateg4 = this.dom.targetCategoryRow) === null || _this$dom$targetCateg4 === void 0 || _this$dom$targetCateg4.show();\n      } else if (actionType === 'auto_add_note_by_category') {\n        var _this$dom$noteRow2;\n        (_this$dom$noteRow2 = this.dom.noteRow) === null || _this$dom$noteRow2 === void 0 || _this$dom$noteRow2.show();\n      } else if (actionType === 'suggest_products_by_category') {\n        // Only show target category row if feature is enabled\n        if (this.settings.feature_flags && this.settings.feature_flags.suggested_products_enabled) {\n          var _this$dom$targetCateg5;\n          (_this$dom$targetCateg5 = this.dom.targetCategoryRow) === null || _this$dom$targetCateg5 === void 0 || _this$dom$targetCateg5.show();\n        } else {\n          this.logger.warn('ProductAdditionsSettingsModule: Suggested products feature is disabled in feature flags');\n        }\n      }\n    }\n\n    /**\n     * Handles changes in the target category select dropdown.\n     * Shows/hides product search field based on the selected category and relation type.\n     * @private\n     */\n  }, {\n    key: \"_handleTargetCategoryChange\",\n    value: function _handleTargetCategoryChange() {\n      var _this$dom$targetCateg6, _this$dom$relationTyp3;\n      var categoryId = (_this$dom$targetCateg6 = this.dom.targetCategorySelect) === null || _this$dom$targetCateg6 === void 0 ? void 0 : _this$dom$targetCateg6.val();\n      var actionType = (_this$dom$relationTyp3 = this.dom.relationTypeSelect) === null || _this$dom$relationTyp3 === void 0 ? void 0 : _this$dom$relationTyp3.val();\n      this._clearProductSelectionFields(); // Clear previous product search/selection\n      if (categoryId && actionType === 'auto_add_by_category') {\n        var _this$dom$productSear3;\n        (_this$dom$productSear3 = this.dom.productSearchRow) === null || _this$dom$productSear3 === void 0 || _this$dom$productSear3.show();\n      } else {\n        var _this$dom$productSear4;\n        (_this$dom$productSear4 = this.dom.productSearchRow) === null || _this$dom$productSear4 === void 0 || _this$dom$productSear4.hide();\n      }\n    }\n\n    /**\n     * Clears all product selection related fields.\n     * @private\n     */\n  }, {\n    key: \"_clearProductSelectionFields\",\n    value: function _clearProductSelectionFields() {\n      var _this$dom$productSear5, _this$dom$productSear6, _this$dom$selectedPro, _this$dom$selectedPro2;\n      (_this$dom$productSear5 = this.dom.productSearchInput) === null || _this$dom$productSear5 === void 0 || _this$dom$productSear5.val('');\n      (_this$dom$productSear6 = this.dom.productSearchResults) === null || _this$dom$productSear6 === void 0 || _this$dom$productSear6.empty().hide();\n      (_this$dom$selectedPro = this.dom.selectedProductIdInput) === null || _this$dom$selectedPro === void 0 || _this$dom$selectedPro.val('');\n      (_this$dom$selectedPro2 = this.dom.selectedProductDisplay) === null || _this$dom$selectedPro2 === void 0 || _this$dom$selectedPro2.hide().find('.selected-product-info').empty();\n    }\n\n    /**\n     * Handles keyup events in the product search input field.\n     * Triggers product search after debounce period.\n     * @param {Event} e - The keyup event\n     * @private\n     */\n  }, {\n    key: \"_handleProductSearchKeyup\",\n    value: function _handleProductSearchKeyup(e) {\n      var _this$$$val,\n        _this$dom$targetCateg7,\n        _this$dom$productSear8,\n        _this2 = this;\n      var searchTerm = ((_this$$$val = this.$(e.target).val()) === null || _this$$$val === void 0 ? void 0 : _this$$$val.trim()) || '';\n      var categoryId = (_this$dom$targetCateg7 = this.dom.targetCategorySelect) === null || _this$dom$targetCateg7 === void 0 ? void 0 : _this$dom$targetCateg7.val();\n      clearTimeout(this.productSearchTimeout);\n      if (searchTerm.length < 3 || !categoryId) {\n        var _this$dom$productSear7;\n        (_this$dom$productSear7 = this.dom.productSearchResults) === null || _this$dom$productSear7 === void 0 || _this$dom$productSear7.empty().hide();\n        return;\n      }\n      // this.settings.i18n from ProductEstimatorSettings base\n      (_this$dom$productSear8 = this.dom.productSearchResults) === null || _this$dom$productSear8 === void 0 || _this$dom$productSear8.html(\"<p>\".concat(this.settings.i18n && this.settings.i18n.searching || 'Searching...', \"</p>\")).show();\n      this.productSearchTimeout = setTimeout(function () {\n        _this2._searchProducts(searchTerm, categoryId);\n      }, 500); // Debounce\n    }\n\n    /**\n     * Searches for products based on search term and category.\n     * Displays results in the product search results container.\n     * @param {string} searchTerm - The search term to filter products by\n     * @param {string|number} categoryId - The category ID to filter products by\n     * @private\n     */\n  }, {\n    key: \"_searchProducts\",\n    value: function _searchProducts(searchTerm, categoryId) {\n      var _this3 = this;\n      // this.settings.actions and other properties from ProductEstimatorSettings base\n      if (!this.settings.actions || !this.settings.actions.search_products) {\n        var _this$dom$productSear9;\n        (_this$dom$productSear9 = this.dom.productSearchResults) === null || _this$dom$productSear9 === void 0 || _this$dom$productSear9.html(\"<p>\".concat(this.settings.i18n && this.settings.i18n.errorSearching || 'Error: Search action not configured.', \"</p>\")).show();\n        return;\n      }\n      _utils__WEBPACK_IMPORTED_MODULE_6__.ajax.ajaxRequest({\n        url: this.settings.ajaxUrl,\n        data: {\n          action: this.settings.actions.search_products,\n          nonce: this.settings.nonce,\n          search: searchTerm,\n          category: categoryId\n        }\n      }).then(function (response) {\n        var productsArray = null;\n        // Standardize response checking\n        if (response && response.success && response.data && Array.isArray(response.data.products)) {\n          productsArray = response.data.products;\n        } else if (response && Array.isArray(response.products)) {\n          // Fallback for older direct array\n          productsArray = response.products;\n        }\n        if (productsArray) {\n          var _this3$dom$productSea;\n          var resultsHtml = '';\n          if (productsArray.length > 0) {\n            resultsHtml = '<ul class=\"product-results-list\">';\n            productsArray.forEach(function (product) {\n              // Basic escaping for display\n              var escapedName = _this3.$('<div>').text(product.name || '').html();\n              resultsHtml += \"<li class=\\\"product-result-item\\\" data-id=\\\"\".concat(product.id, \"\\\" data-name=\\\"\").concat(escapedName, \"\\\">\").concat(escapedName || 'Unnamed Product', \" (ID: \").concat(product.id, \")</li>\");\n            });\n            resultsHtml += '</ul>';\n          } else {\n            resultsHtml = \"<p>\".concat(_this3.settings.i18n && _this3.settings.i18n.noProductsFound || 'No products found', \"</p>\");\n          }\n          (_this3$dom$productSea = _this3.dom.productSearchResults) === null || _this3$dom$productSea === void 0 || _this3$dom$productSea.html(resultsHtml).show();\n        } else {\n          var _this3$dom$productSea2;\n          (_this3$dom$productSea2 = _this3.dom.productSearchResults) === null || _this3$dom$productSea2 === void 0 || _this3$dom$productSea2.html(\"<p>\".concat(_this3.settings.i18n && _this3.settings.i18n.errorSearching || 'Error searching products', \"</p>\")).show();\n        }\n      }).catch(function () {\n        var _this3$dom$productSea3;\n        (_this3$dom$productSea3 = _this3.dom.productSearchResults) === null || _this3$dom$productSea3 === void 0 || _this3$dom$productSea3.html(\"<p>\".concat(_this3.settings.i18n && _this3.settings.i18n.errorSearching || 'Error searching products', \"</p>\")).show();\n      });\n    }\n\n    /**\n     * Handles clicks on product search results.\n     * Sets the selected product ID and displays product information.\n     * @param {Event} e - The click event\n     * @private\n     */\n  }, {\n    key: \"_handleProductResultClick\",\n    value: function _handleProductResultClick(e) {\n      var _this$dom$selectedPro3, _this$dom$selectedPro4, _this$dom$selectedPro5, _this$dom$productSear0, _this$dom$productSear1;\n      var $item = this.$(e.currentTarget);\n      var productId = $item.data('id');\n      var productName = $item.data('name'); // Already escaped if set by _searchProducts\n\n      (_this$dom$selectedPro3 = this.dom.selectedProductIdInput) === null || _this$dom$selectedPro3 === void 0 || _this$dom$selectedPro3.val(productId);\n      (_this$dom$selectedPro4 = this.dom.selectedProductDisplay) === null || _this$dom$selectedPro4 === void 0 || _this$dom$selectedPro4.find('.selected-product-info').html(\"<strong>\".concat(productName, \"</strong> (ID: \").concat(productId, \")\"));\n      (_this$dom$selectedPro5 = this.dom.selectedProductDisplay) === null || _this$dom$selectedPro5 === void 0 || _this$dom$selectedPro5.show();\n      (_this$dom$productSear0 = this.dom.productSearchInput) === null || _this$dom$productSear0 === void 0 || _this$dom$productSear0.val(''); // Clear search input\n      (_this$dom$productSear1 = this.dom.productSearchResults) === null || _this$dom$productSear1 === void 0 || _this$dom$productSear1.empty().hide(); // Hide results\n      this.formModified = true; // Mark form as modified, inherited from AdminTableManager\n    }\n\n    /**\n     * Handles clicks on the clear product button.\n     * Clears product selection fields and sets focus to search input.\n     * @private\n     */\n  }, {\n    key: \"_handleClearProduct\",\n    value: function _handleClearProduct() {\n      var _this$dom$productSear10;\n      this._clearProductSelectionFields();\n      (_this$dom$productSear10 = this.dom.productSearchInput) === null || _this$dom$productSear10 === void 0 || _this$dom$productSear10.focus();\n      this.formModified = true; // Mark form as modified\n    }\n\n    /**\n     * Override AdminTableManager.resetForm to include Product Additions specific fields.\n     * @override\n     */\n  }, {\n    key: \"resetForm\",\n    value: function resetForm() {\n      var _this$dom$relationTyp4, _this$dom$sourceCateg, _this$dom$noteTextInp2, _this$dom$targetCateg8, _this$dom$productSear11, _this$dom$noteRow3;\n      _superPropGet(ProductAdditionsSettingsModule, \"resetForm\", this, 3)([]); // Call base class method first\n\n      // Reset Product Additions specific fields\n      (_this$dom$relationTyp4 = this.dom.relationTypeSelect) === null || _this$dom$relationTyp4 === void 0 || _this$dom$relationTyp4.val('').trigger('change.productAdditions'); // Triggers _handleRelationTypeChange\n      (_this$dom$sourceCateg = this.dom.sourceCategorySelect) === null || _this$dom$sourceCateg === void 0 || _this$dom$sourceCateg.val(null).trigger('change.select2'); // Clear Select2\n      // Target category and product search fields are typically handled by _handleRelationTypeChange\n      this._clearProductSelectionFields(); // Explicitly clear product fields\n      (_this$dom$noteTextInp2 = this.dom.noteTextInput) === null || _this$dom$noteTextInp2 === void 0 || _this$dom$noteTextInp2.val('');\n\n      // Ensure dependent rows are hidden according to the reset relationType\n      (_this$dom$targetCateg8 = this.dom.targetCategoryRow) === null || _this$dom$targetCateg8 === void 0 || _this$dom$targetCateg8.hide();\n      (_this$dom$productSear11 = this.dom.productSearchRow) === null || _this$dom$productSear11 === void 0 || _this$dom$productSear11.hide();\n      (_this$dom$noteRow3 = this.dom.noteRow) === null || _this$dom$noteRow3 === void 0 || _this$dom$noteRow3.hide();\n    }\n\n    /**\n     * Override AdminTableManager.populateFormWithData for Product Additions specific fields.\n     * @param {object} itemData - The data for the product addition item to populate the form with\n     * @override\n     */\n  }, {\n    key: \"populateFormWithData\",\n    value: function populateFormWithData(itemData) {\n      var _this$dom$relationTyp5,\n        _this4 = this;\n      _superPropGet(ProductAdditionsSettingsModule, \"populateFormWithData\", this, 3)([itemData]); // Sets item ID, calls base logic\n\n      var relationType = itemData.relation_type || '';\n      var sourceCategories = itemData.source_category || []; // Expecting array for multi-select\n      var targetCategory = itemData.target_category || '';\n      var productId = itemData.product_id || '';\n      var noteText = itemData.note_text || '';\n\n      // Set relation type first, as it might control visibility of other fields\n      (_this$dom$relationTyp5 = this.dom.relationTypeSelect) === null || _this$dom$relationTyp5 === void 0 || _this$dom$relationTyp5.val(relationType).trigger('change.productAdditions');\n\n      // Use setTimeout to allow dependent field visibility changes from 'change.productAdditions' to complete\n      setTimeout(function () {\n        var _this4$dom$sourceCate;\n        (_this4$dom$sourceCate = _this4.dom.sourceCategorySelect) === null || _this4$dom$sourceCate === void 0 || _this4$dom$sourceCate.val(sourceCategories).trigger('change.select2');\n        if (relationType === 'auto_add_by_category') {\n          var _this4$dom$targetCate;\n          (_this4$dom$targetCate = _this4.dom.targetCategorySelect) === null || _this4$dom$targetCate === void 0 || _this4$dom$targetCate.val(targetCategory).trigger('change.select2');\n          if (productId && itemData.product_name) {\n            var _this4$dom$selectedPr, _this4$dom$selectedPr2, _this4$dom$selectedPr3;\n            (_this4$dom$selectedPr = _this4.dom.selectedProductIdInput) === null || _this4$dom$selectedPr === void 0 || _this4$dom$selectedPr.val(productId);\n            // Ensure productName is properly escaped if it comes directly from itemData and hasn't been\n            var escapedProductName = _this4.$('<div>').text(itemData.product_name).html();\n            (_this4$dom$selectedPr2 = _this4.dom.selectedProductDisplay) === null || _this4$dom$selectedPr2 === void 0 || _this4$dom$selectedPr2.find('.selected-product-info').html(\"<strong>\".concat(escapedProductName, \"</strong> (ID: \").concat(productId, \")\"));\n            (_this4$dom$selectedPr3 = _this4.dom.selectedProductDisplay) === null || _this4$dom$selectedPr3 === void 0 || _this4$dom$selectedPr3.show();\n          } else if (productId) {\n            var _this4$dom$selectedPr4, _this4$dom$selectedPr5, _this4$dom$selectedPr6;\n            // Fallback if product_name is missing\n            (_this4$dom$selectedPr4 = _this4.dom.selectedProductIdInput) === null || _this4$dom$selectedPr4 === void 0 || _this4$dom$selectedPr4.val(productId);\n            (_this4$dom$selectedPr5 = _this4.dom.selectedProductDisplay) === null || _this4$dom$selectedPr5 === void 0 || _this4$dom$selectedPr5.find('.selected-product-info').html(\"Product ID: \".concat(productId, \" (Name not available)\"));\n            (_this4$dom$selectedPr6 = _this4.dom.selectedProductDisplay) === null || _this4$dom$selectedPr6 === void 0 || _this4$dom$selectedPr6.show();\n          }\n        } else if (relationType === 'suggest_products_by_category') {\n          if (_this4.settings.feature_flags && _this4.settings.feature_flags.suggested_products_enabled) {\n            var _this4$dom$targetCate2;\n            (_this4$dom$targetCate2 = _this4.dom.targetCategorySelect) === null || _this4$dom$targetCate2 === void 0 || _this4$dom$targetCate2.val(targetCategory).trigger('change.select2');\n          }\n        } else if (relationType === 'auto_add_note_by_category') {\n          var _this4$dom$noteTextIn;\n          (_this4$dom$noteTextIn = _this4.dom.noteTextInput) === null || _this4$dom$noteTextIn === void 0 || _this4$dom$noteTextIn.val(noteText);\n        }\n        _this4.formModified = false; // Reset modified flag after populating\n      }, 150); // Small delay\n    }\n\n    /**\n     * Override AdminTableManager.validateForm for Product Additions specific validation.\n     * @returns {boolean} True if the form passes validation, false otherwise\n     * @override\n     */\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var _this$dom$relationTyp6, _this$dom$sourceCateg2, _this$dom$targetCateg9, _this$dom$selectedPro6, _this$dom$noteTextInp3, _this$dom$sourceCateg3, _this$dom$targetCateg0;\n      var isValid = _superPropGet(ProductAdditionsSettingsModule, \"validateForm\", this, 3)([]); // Perform base validation first\n\n      // Get values\n      var actionType = (_this$dom$relationTyp6 = this.dom.relationTypeSelect) === null || _this$dom$relationTyp6 === void 0 ? void 0 : _this$dom$relationTyp6.val();\n      var sourceCategories = (_this$dom$sourceCateg2 = this.dom.sourceCategorySelect) === null || _this$dom$sourceCateg2 === void 0 ? void 0 : _this$dom$sourceCateg2.val(); // Returns array for multi-select\n      var targetCategory = (_this$dom$targetCateg9 = this.dom.targetCategorySelect) === null || _this$dom$targetCateg9 === void 0 ? void 0 : _this$dom$targetCateg9.val();\n      var productId = (_this$dom$selectedPro6 = this.dom.selectedProductIdInput) === null || _this$dom$selectedPro6 === void 0 ? void 0 : _this$dom$selectedPro6.val();\n      var noteText = ((_this$dom$noteTextInp3 = this.dom.noteTextInput) === null || _this$dom$noteTextInp3 === void 0 || (_this$dom$noteTextInp3 = _this$dom$noteTextInp3.val()) === null || _this$dom$noteTextInp3 === void 0 ? void 0 : _this$dom$noteTextInp3.trim()) || '';\n\n      // i18n messages from this.settings.i18n\n      var i18n = this.settings.i18n || {};\n\n      // Clear previous specific errors (showFieldError/clearFieldError are inherited)\n      this.clearFieldError(this.dom.relationTypeSelect);\n      this.clearFieldError((_this$dom$sourceCateg3 = this.dom.sourceCategorySelect) === null || _this$dom$sourceCateg3 === void 0 ? void 0 : _this$dom$sourceCateg3.next('.select2-container')); // Target Select2 container for error\n      this.clearFieldError((_this$dom$targetCateg0 = this.dom.targetCategorySelect) === null || _this$dom$targetCateg0 === void 0 ? void 0 : _this$dom$targetCateg0.next('.select2-container'));\n      this.clearFieldError(this.dom.productSearchInput); // Or selectedProductDisplay\n      this.clearFieldError(this.dom.noteTextInput);\n      if (!actionType) {\n        this.showFieldError(this.dom.relationTypeSelect, i18n.selectAction || 'Please select an action type.');\n        isValid = false;\n      }\n      if (!sourceCategories || sourceCategories.length === 0) {\n        var _this$dom$sourceCateg4;\n        this.showFieldError((_this$dom$sourceCateg4 = this.dom.sourceCategorySelect) === null || _this$dom$sourceCateg4 === void 0 ? void 0 : _this$dom$sourceCateg4.next('.select2-container'), i18n.selectSourceCategories || 'Please select source categories.');\n        isValid = false;\n      }\n      if (actionType === 'auto_add_by_category') {\n        if (!targetCategory) {\n          var _this$dom$targetCateg1;\n          this.showFieldError((_this$dom$targetCateg1 = this.dom.targetCategorySelect) === null || _this$dom$targetCateg1 === void 0 ? void 0 : _this$dom$targetCateg1.next('.select2-container'), i18n.selectTargetCategory || 'Please select a target category.');\n          isValid = false;\n        }\n        if (!productId) {\n          var _this$dom$selectedPro7;\n          // Show error near search input or the display area if visible\n          var $productErrorTarget = (_this$dom$selectedPro7 = this.dom.selectedProductDisplay) !== null && _this$dom$selectedPro7 !== void 0 && _this$dom$selectedPro7.is(':visible') ? this.dom.selectedProductDisplay : this.dom.productSearchInput;\n          this.showFieldError($productErrorTarget, i18n.selectProduct || 'Please select a product.');\n          isValid = false;\n        }\n      } else if (actionType === 'suggest_products_by_category') {\n        if (this.settings.feature_flags && this.settings.feature_flags.suggested_products_enabled) {\n          if (!targetCategory) {\n            var _this$dom$targetCateg10;\n            this.showFieldError((_this$dom$targetCateg10 = this.dom.targetCategorySelect) === null || _this$dom$targetCateg10 === void 0 ? void 0 : _this$dom$targetCateg10.next('.select2-container'), i18n.selectTargetCategory || 'Please select a target category.');\n            isValid = false;\n          }\n        }\n      } else if (actionType === 'auto_add_note_by_category') {\n        if (!noteText) {\n          this.showFieldError(this.dom.noteTextInput, i18n.noteTextRequired || 'Note text is required.');\n          isValid = false;\n        }\n      }\n      return isValid;\n    }\n\n    /**\n     * Custom column population method for 'source_categories' column\n     * This method follows the naming convention for column handlers in AdminTableManager\n     * @param {jQuery} $cell - The table cell element to populate\n     * @param {object} itemData - The data for the current row\n     */\n  }, {\n    key: \"populateColumn_source_categories\",\n    value: function populateColumn_source_categories($cell, itemData) {\n      $cell.text(itemData.source_category_display || 'N/A');\n    }\n\n    /**\n     * Custom column population method for 'action_type' column\n     * @param {jQuery} $cell - The table cell element to populate\n     * @param {object} itemData - The data for the current row\n     */\n  }, {\n    key: \"populateColumn_action_type\",\n    value: function populateColumn_action_type($cell, itemData) {\n      var $actionTypeSpan = this.$('<span></span>').addClass(\"relation-type pe-relation-\".concat(itemData.relation_type || 'unknown')).text(itemData.action_type_display || itemData.relation_type || 'N/A');\n      $cell.append($actionTypeSpan);\n    }\n\n    /**\n     * Custom column population method for 'target_details' column\n     * @param {jQuery} $cell - The table cell element to populate\n     * @param {object} itemData - The data for the current row\n     */\n  }, {\n    key: \"populateColumn_target_details\",\n    value: function populateColumn_target_details($cell, itemData) {\n      $cell.text(itemData.target_details_display || 'N/A');\n    }\n\n    /**\n     * Binds event handlers for custom action buttons.\n     * This overrides the base AdminTableManager.bindCustomActionButtons method.\n     * @override\n     */\n  }, {\n    key: \"bindCustomActionButtons\",\n    value: function bindCustomActionButtons() {\n      if (this.dom.listTableBody && this.dom.listTableBody.length) {\n        // Bind the view product button click event\n        this.dom.listTableBody.on('click.productAdditions', '.pe-view-product-button', this.handleViewProduct.bind(this));\n      }\n    }\n\n    /**\n     * Handles clicks on the \"View Product\" button.\n     * @param {Event} e - The click event\n     */\n  }, {\n    key: \"handleViewProduct\",\n    value: function handleViewProduct(e) {\n      e.preventDefault();\n      var $button = this.$(e.currentTarget);\n      var productId = $button.data('product-id');\n      if (!productId) {\n        this.showNotice('Error: Could not determine the product to view.', 'error');\n        return;\n      }\n\n      // Open the product in a new window/tab\n      // This could be a link to the WordPress admin edit page for the product\n      var adminUrl = window.ajaxurl ? window.ajaxurl.replace('admin-ajax.php', '') : '/wp-admin/';\n      var productUrl = \"\".concat(adminUrl, \"post.php?post=\").concat(productId, \"&action=edit\");\n      window.open(productUrl, '_blank');\n    }\n  }]);\n}(_common_AdminTableManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"]); // Initialize the module when the DOM is ready and its main tab container exists.\njQuery(document).ready(function ($) {\n  var mainTabId = 'product_additions'; // Specific to this module\n  var localizedDataObjectName = 'productAdditionsSettings'; // Global settings object name\n\n  if ($(\"#\".concat(mainTabId)).length) {\n    // Check if the global localized data for this module is available\n    if (window[localizedDataObjectName]) {\n      // Instantiate the module once\n      if (!window.ProductAdditionsSettingsModuleInstance) {\n        try {\n          window.ProductAdditionsSettingsModuleInstance = new ProductAdditionsSettingsModule();\n          (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('ProductAdditionsInit').log('ProductAdditionsSettingsModule instance initiated.');\n        } catch (error) {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('ProductAdditionsInit').error('Error instantiating ProductAdditionsSettingsModule:', error);\n          // Use the global notice system if ProductEstimatorSettings is available\n          if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n            window.ProductEstimatorSettingsInstance.showNotice('Failed to initialize Product Additions settings. Check console for errors.', 'error');\n          }\n        }\n      }\n    } else {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('ProductAdditionsInit').error(\"Localized data object \\\"\".concat(localizedDataObjectName, \"\\\" not found for tab: \").concat(mainTabId, \". Module cannot be initialized.\"));\n      if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n        window.ProductEstimatorSettingsInstance.showNotice(\"Configuration data for Product Additions (\\\"\".concat(localizedDataObjectName, \"\\\") is missing. Module disabled.\"), 'error');\n      }\n    }\n    // The module's inherited `handleMainTabChanged` (from VerticalTabbedModule)\n    // will manage activation/deactivation logic, including calling `onMainTabActivated`.\n    // No separate `product_estimator_tab_changed` listener is needed here for re-initialization\n    // or for clearing `sub_tab` from URL, as `VerticalTabbedModule.showVerticalTab` handles URL state.\n  } else {\n    (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('ProductAdditionsInit').warn(\"Main container #\".concat(mainTabId, \" not found. ProductAdditionsSettingsModule will not be initialized.\"));\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (ProductAdditionsSettingsModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/admin/modules/ProductAdditionsSettingsModule.js\n");

/***/ }),

/***/ "./src/js/admin/modules/ProductUpgradesSettingsModule.js":
/*!***************************************************************!*\
  !*** ./src/js/admin/modules/ProductUpgradesSettingsModule.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n/* harmony import */ var _common_AdminTableManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/AdminTableManager */ \"./src/js/admin/common/AdminTableManager.js\");\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n// File: admin/js/modules/ProductUpgradesSettingsModule.js\n\n/**\n * Product Upgrades Settings JavaScript\n *\n * Handles functionality specific to the product upgrades settings tab.\n * Extends AdminTableManager for common table and form management.\n */\n\n\nvar ProductUpgradesSettingsModule = /*#__PURE__*/function (_AdminTableManager) {\n  /**\n   * Constructor for ProductUpgradesSettingsModule.\n   */\n  function ProductUpgradesSettingsModule() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ProductUpgradesSettingsModule);\n    var config = {\n      mainTabId: 'product_upgrades',\n      localizedDataName: 'productUpgradesSettings'\n      // AdminTableManager passes this to VerticalTabbedModule,\n      // which passes relevant parts to ProductEstimatorSettings.\n    };\n    _this = _callSuper(this, ProductUpgradesSettingsModule, [config]); // Calls AdminTableManager constructor\n\n    // this.logger is initialized by AdminTableManager\n    // this.settings is populated by ProductEstimatorSettings via the super chain\n    // this.config from AdminTableManager holds the original config passed here\n\n    // Defer DOM-dependent specific initializations until the base AdminTableManager signals it's ready\n    _this.$(document).on(\"admin_table_manager_ready_\".concat(_this.config.mainTabId), function () {\n      _this._cacheProductUpgradesDOM();\n      _this._bindSpecificEvents();\n      _this._initializeSelect2();\n    });\n    return _this;\n  }\n\n  /**\n   * Cache DOM elements specific to Product Upgrades, beyond what AdminTableManager caches.\n   * This is called after AdminTableManager's cacheDOM.\n   * @private\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(ProductUpgradesSettingsModule, _AdminTableManager);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ProductUpgradesSettingsModule, [{\n    key: \"_cacheProductUpgradesDOM\",\n    value: function _cacheProductUpgradesDOM() {\n      // this.dom is initialized by AdminTableManager. Add Product Upgrades specific elements.\n      if (this.settings && this.settings.selectors) {\n        var puSelectors = this.settings.selectors;\n        this.dom.baseCategories = this.$container.find(puSelectors.baseCategories);\n        this.dom.upgradeCategories = this.$container.find(puSelectors.upgradeCategories);\n        this.dom.upgradeTitle = this.$container.find(puSelectors.upgradeTitle);\n        this.dom.upgradeDescription = this.$container.find(puSelectors.upgradeDescription);\n      } else {\n        this.logger.warn('ProductUpgradesSettingsModule: settings or selectors not available for DOM caching');\n      }\n    }\n\n    /**\n     * Bind events specific to Product Upgrades.\n     * This is called after the `admin_table_manager_ready` event.\n     * @private\n     */\n  }, {\n    key: \"_bindSpecificEvents\",\n    value: function _bindSpecificEvents() {\n      // Ensure this.dom elements are available\n      if (!this.dom.form || !this.dom.form.length) {\n        return;\n      }\n\n      // Any product upgrades specific events can be bound here\n    }\n\n    /**\n     * Initialize Select2 components.\n     * This is called after the `admin_table_manager_ready` event.\n     * @private\n     */\n  }, {\n    key: \"_initializeSelect2\",\n    value: function _initializeSelect2() {\n      this.initializeSelect2Dropdowns({\n        elements: [{\n          element: this.dom.baseCategories,\n          placeholderKey: 'selectBaseCategories',\n          fallbackText: 'Select base categories',\n          name: 'base categories',\n          config: {\n            clearInitial: true,\n            width: '100%'\n          }\n        }, {\n          element: this.dom.upgradeCategories,\n          placeholderKey: 'selectUpgradeCategories',\n          fallbackText: 'Select upgrade categories',\n          name: 'upgrade categories',\n          config: {\n            clearInitial: true,\n            width: '100%'\n          }\n        }],\n        moduleName: 'Product Upgrades'\n      });\n    }\n\n    /**\n     * Overridden from VerticalTabbedModule. Called when the \"Product Upgrades\" main tab is activated.\n     */\n  }, {\n    key: \"onMainTabActivated\",\n    value: function onMainTabActivated() {\n      _superPropGet(ProductUpgradesSettingsModule, \"onMainTabActivated\", this, 3)([]); // Call parent method\n\n      // Refresh Select2 components if they're already initialized\n      if (this.dom.baseCategories && this.dom.baseCategories.hasClass(\"select2-hidden-accessible\")) {\n        this.refreshSelect2(this.dom.baseCategories);\n      }\n      if (this.dom.upgradeCategories && this.dom.upgradeCategories.hasClass(\"select2-hidden-accessible\")) {\n        this.refreshSelect2(this.dom.upgradeCategories);\n      }\n    }\n\n    /**\n     * Override AdminTableManager.resetForm to include Product Upgrades specific fields.\n     */\n  }, {\n    key: \"resetForm\",\n    value: function resetForm() {\n      var _this$dom$baseCategor, _this$dom$upgradeCate, _this$dom$upgradeTitl, _this$dom$upgradeDesc;\n      _superPropGet(ProductUpgradesSettingsModule, \"resetForm\", this, 3)([]); // Call base class method first\n\n      // Reset Product Upgrades specific fields\n      (_this$dom$baseCategor = this.dom.baseCategories) === null || _this$dom$baseCategor === void 0 || _this$dom$baseCategor.val(null).trigger('change.select2');\n      (_this$dom$upgradeCate = this.dom.upgradeCategories) === null || _this$dom$upgradeCate === void 0 || _this$dom$upgradeCate.val(null).trigger('change.select2');\n      (_this$dom$upgradeTitl = this.dom.upgradeTitle) === null || _this$dom$upgradeTitl === void 0 || _this$dom$upgradeTitl.val('');\n      (_this$dom$upgradeDesc = this.dom.upgradeDescription) === null || _this$dom$upgradeDesc === void 0 || _this$dom$upgradeDesc.val('');\n    }\n\n    /**\n     * Override AdminTableManager.populateFormWithData for Product Upgrades specific fields.\n     * @param {object} itemData - The data for the product upgrade item to populate the form with\n     * @override\n     */\n  }, {\n    key: \"populateFormWithData\",\n    value: function populateFormWithData(itemData) {\n      var _this2 = this;\n      _superPropGet(ProductUpgradesSettingsModule, \"populateFormWithData\", this, 3)([itemData]); // Sets item ID, calls base logic\n\n      var baseCategories = itemData.base_categories || [];\n      var upgradeCategories = itemData.upgrade_categories || [];\n\n      // Look for field values in multiple possible locations\n      var title = itemData.upgrade_title || itemData.title || '';\n      var description = itemData.upgrade_description || itemData.description || '';\n\n      // Use setTimeout to allow dependent field visibility changes to complete\n      setTimeout(function () {\n        var _this2$dom$baseCatego, _this2$dom$upgradeCat, _this2$dom$upgradeTit, _this2$dom$upgradeDes;\n        (_this2$dom$baseCatego = _this2.dom.baseCategories) === null || _this2$dom$baseCatego === void 0 || _this2$dom$baseCatego.val(baseCategories).trigger('change.select2');\n        (_this2$dom$upgradeCat = _this2.dom.upgradeCategories) === null || _this2$dom$upgradeCat === void 0 || _this2$dom$upgradeCat.val(upgradeCategories).trigger('change.select2');\n        (_this2$dom$upgradeTit = _this2.dom.upgradeTitle) === null || _this2$dom$upgradeTit === void 0 || _this2$dom$upgradeTit.val(title);\n        (_this2$dom$upgradeDes = _this2.dom.upgradeDescription) === null || _this2$dom$upgradeDes === void 0 || _this2$dom$upgradeDes.val(description);\n        _this2.formModified = false; // Reset modified flag after populating\n      }, 150);\n    }\n\n    /**\n     * Override AdminTableManager.validateForm for Product Upgrades specific validation.\n     * @returns {boolean} True if the form passes validation, false otherwise\n     * @override\n     */\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var _this$dom$baseCategor2, _this$dom$upgradeCate2, _this$dom$baseCategor3, _this$dom$upgradeCate3;\n      var isValid = _superPropGet(ProductUpgradesSettingsModule, \"validateForm\", this, 3)([]); // Perform base validation first\n\n      // Get values\n      var baseCategories = (_this$dom$baseCategor2 = this.dom.baseCategories) === null || _this$dom$baseCategor2 === void 0 ? void 0 : _this$dom$baseCategor2.val();\n      var upgradeCategories = (_this$dom$upgradeCate2 = this.dom.upgradeCategories) === null || _this$dom$upgradeCate2 === void 0 ? void 0 : _this$dom$upgradeCate2.val();\n\n      // i18n messages from this.settings.i18n\n      var i18n = this.settings.i18n || {};\n\n      // Clear previous specific errors\n      this.clearFieldError((_this$dom$baseCategor3 = this.dom.baseCategories) === null || _this$dom$baseCategor3 === void 0 ? void 0 : _this$dom$baseCategor3.next('.select2-container'));\n      this.clearFieldError((_this$dom$upgradeCate3 = this.dom.upgradeCategories) === null || _this$dom$upgradeCate3 === void 0 ? void 0 : _this$dom$upgradeCate3.next('.select2-container'));\n      if (!baseCategories || baseCategories.length === 0) {\n        var _this$dom$baseCategor4;\n        this.showFieldError((_this$dom$baseCategor4 = this.dom.baseCategories) === null || _this$dom$baseCategor4 === void 0 ? void 0 : _this$dom$baseCategor4.next('.select2-container'), i18n.selectBaseCategories || 'Please select at least one base category.');\n        isValid = false;\n      }\n      if (!upgradeCategories || upgradeCategories.length === 0) {\n        var _this$dom$upgradeCate4;\n        this.showFieldError((_this$dom$upgradeCate4 = this.dom.upgradeCategories) === null || _this$dom$upgradeCate4 === void 0 ? void 0 : _this$dom$upgradeCate4.next('.select2-container'), i18n.selectUpgradeCategories || 'Please select at least one upgrade category.');\n        isValid = false;\n      }\n      return isValid;\n    }\n\n    /**\n     * Custom column population method for 'base_categories' column\n     * This method follows the naming convention for column handlers in AdminTableManager\n     * @param {jQuery} $cell - The table cell element to populate\n     * @param {object} itemData - The data for the current row\n     */\n  }, {\n    key: \"populateColumn_base_categories\",\n    value: function populateColumn_base_categories($cell, itemData) {\n      // Look in all possible data fields to find the display value\n      var displayValue = itemData.base_categories_display || itemData.base_category_names || (Array.isArray(itemData.base_categories) ? itemData.base_categories.join(',') : '') || 'N/A';\n      $cell.text(displayValue);\n    }\n\n    /**\n     * Custom column population method for 'upgrade_categories' column\n     * @param {jQuery} $cell - The table cell element to populate\n     * @param {object} itemData - The data for the current row\n     */\n  }, {\n    key: \"populateColumn_upgrade_categories\",\n    value: function populateColumn_upgrade_categories($cell, itemData) {\n      // Look in all possible data fields to find the display value\n      var displayValue = itemData.upgrade_categories_display || itemData.upgrade_category_names || (Array.isArray(itemData.upgrade_categories) ? itemData.upgrade_categories.join(',') : '') || 'N/A';\n      $cell.text(displayValue);\n    }\n  }]);\n}(_common_AdminTableManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"]); // Initialize the module when the DOM is ready and its main tab container exists.\njQuery(document).ready(function ($) {\n  var mainTabId = 'product_upgrades'; // Specific to this module\n  var localizedDataObjectName = 'productUpgradesSettings'; // Global settings object name\n\n  if ($(\"#\".concat(mainTabId)).length) {\n    // Check if the global localized data for this module is available\n    if (window[localizedDataObjectName]) {\n      // Instantiate the module once\n      if (!window.ProductUpgradesSettingsModuleInstance) {\n        try {\n          window.ProductUpgradesSettingsModuleInstance = new ProductUpgradesSettingsModule();\n          (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('ProductUpgradesInit').log('ProductUpgradesSettingsModule instance initiated.');\n        } catch (error) {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('ProductUpgradesInit').error('Error instantiating ProductUpgradesSettingsModule:', error);\n          // Use the global notice system if ProductEstimatorSettings is available\n          if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n            window.ProductEstimatorSettingsInstance.showNotice('Failed to initialize Product Upgrades settings. Check console for errors.', 'error');\n          }\n        }\n      }\n    } else {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('ProductUpgradesInit').error(\"Localized data object \\\"\".concat(localizedDataObjectName, \"\\\" not found for tab: \").concat(mainTabId, \". Module cannot be initialized.\"));\n      if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n        window.ProductEstimatorSettingsInstance.showNotice(\"Configuration data for Product Upgrades (\\\"\".concat(localizedDataObjectName, \"\\\") is missing. Module disabled.\"), 'error');\n      }\n    }\n  } else {\n    (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('ProductUpgradesInit').warn(\"Main container #\".concat(mainTabId, \" not found. ProductUpgradesSettingsModule will not be initialized.\"));\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (ProductUpgradesSettingsModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/admin/modules/ProductUpgradesSettingsModule.js\n");

/***/ }),

/***/ "./src/js/admin/modules/SimilarProductsSettingsModule.js":
/*!***************************************************************!*\
  !*** ./src/js/admin/modules/SimilarProductsSettingsModule.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @utils */ \"./src/js/utils/index.js\");\n/* harmony import */ var _common_AdminTableManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/AdminTableManager */ \"./src/js/admin/common/AdminTableManager.js\");\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0,_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n/**\n * Similar Products Settings Module (Class-based)\n *\n * Handles functionality for the similar products settings tab in the admin area.\n */\n // Import utilities needed for this module\n\n // Adjust path as needed\nvar SimilarProductsSettingsModule = /*#__PURE__*/function (_AdminTableManager) {\n  /**\n   * Constructor for SimilarProductsSettingsModule\n   */\n  function SimilarProductsSettingsModule() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, SimilarProductsSettingsModule);\n    var config = {\n      mainTabId: 'similar_products',\n      localizedDataName: 'similarProductsSettings'\n      // AdminTableManager passes this to VerticalTabbedModule,\n      // which passes relevant parts to ProductEstimatorSettings.\n    };\n    _this = _callSuper(this, SimilarProductsSettingsModule, [config]); // Calls AdminTableManager constructor\n\n    _this.$(document).on(\"admin_table_manager_ready_\".concat(_this.config.mainTabId), function () {\n      // POTENTIAL ERROR HERE\n      _this._cacheSimilarProductsDOM();\n      _this._bindSpecificEvents();\n      _this._initializeSelect2();\n    });\n    return _this;\n  }\n\n  /**\n   * Cache DOM elements specific to Similar Products, beyond what AdminTableManager caches.\n   * This is called after AdminTableManager's cacheDOM.\n   * @private\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(SimilarProductsSettingsModule, _AdminTableManager);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(SimilarProductsSettingsModule, [{\n    key: \"_cacheSimilarProductsDOM\",\n    value: function _cacheSimilarProductsDOM() {\n      // this.dom is initialized by AdminTableManager. Add Similar Products specific elements.\n      if (this.settings && this.settings.selectors) {\n        // this.settings is from ProductEstimatorSettings base\n        var selectors = this.settings.selectors;\n        this.dom.sourceCategoriesSelect = this.$container.find(selectors.sourceCategoriesSelect);\n        this.dom.attributesContainer = this.$container.find(selectors.attributesContainer);\n        this.dom.attributesList = this.$container.find(selectors.attributesList);\n        this.dom.attributesLoading = this.$container.find(selectors.attributesLoading);\n        this.dom.selectedAttributesInput = this.$container.find(selectors.selectedAttributesInput);\n      } else {\n        (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('SimilarProductsModule').warn('SimilarProductsSettingsModule: settings or selectors not available for DOM caching');\n      }\n    }\n\n    /**\n     * Bind core event handlers\n     */\n  }, {\n    key: \"_bindSpecificEvents\",\n    value: function _bindSpecificEvents() {\n      var _this$dom$sourceCateg;\n      if (!this.dom.form || !this.dom.form.length) {\n        return;\n      }\n      (_this$dom$sourceCateg = this.dom.sourceCategoriesSelect) === null || _this$dom$sourceCateg === void 0 || _this$dom$sourceCateg.on('change.SimilarProducts', this._handleSourceCategoriesChange.bind(this));\n    }\n\n    /**\n     * Initialize Select2 components.\n     * This is called after the `admin_table_manager_ready` event.\n     * Using the base class Select2 initialization methods.\n     * @private\n     */\n  }, {\n    key: \"_initializeSelect2\",\n    value: function _initializeSelect2() {\n      // Use the base class initializeSelect2Dropdowns method with our specific configuration\n      this.initializeSelect2Dropdowns({\n        elements: [{\n          element: this.dom.sourceCategoriesSelect,\n          placeholderKey: 'selectCategoryError',\n          fallbackText: 'Select source categories',\n          name: 'source categories',\n          config: {\n            clearInitial: true\n          }\n        }],\n        // Settings and i18n are automatically provided by the base method\n        moduleName: 'Similar Products'\n      });\n    }\n\n    /**\n     * Overridden from VerticalTabbedModule. Called when the \"Product Additions\" main tab is activated.\n     */\n  }, {\n    key: \"onMainTabActivated\",\n    value: function onMainTabActivated() {\n      _superPropGet(SimilarProductsSettingsModule, \"onMainTabActivated\", this, 3)([]); // Call parent method\n      // Specific actions for Product Additions when its tab is shown.\n      // For example, if Select2 or other components need re-initialization or refresh when tab becomes visible.\n      // The `admin_table_manager_ready` event handles initial setup. This is for subsequent activations.\n      // If Select2 was initialized while hidden, it might need a refresh.\n      if (this.dom.sourceCategoriesSelect && this.dom.sourceCategoriesSelect.hasClass(\"select2-hidden-accessible\")) {\n        // this.dom.sourceCategorySelect.select2('destroy').select2({...}); // Full re-init\n        // Or just trigger a resize/redraw if that helps.\n      }\n      // The inherited VerticalTabbedModule.handleMainTabChanged calls setupVerticalTabs,\n      // which correctly handles the sub_tab in the URL. No manual sub_tab clearing needed here.\n    }\n  }, {\n    key: \"_handleSourceCategoriesChange\",\n    value: function _handleSourceCategoriesChange() {\n      var _this$dom$sourceCateg2;\n      var categoryIds = (_this$dom$sourceCateg2 = this.dom.sourceCategoriesSelect) === null || _this$dom$sourceCateg2 === void 0 ? void 0 : _this$dom$sourceCateg2.val();\n      if (categoryIds && categoryIds.length > 0) {\n        this._fetchAttributesForCategories(categoryIds);\n      } else {\n        this._updateAttributeSelectionField([], []);\n      }\n    }\n  }, {\n    key: \"_updateAttributeSelectionField\",\n    value: function _updateAttributeSelectionField(attributes) {\n      var selectedAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      // Clear previous content\n      this.dom.attributesList.empty();\n      if (!attributes || attributes.length === 0) {\n        // Show loading message if no attributes passed\n        this.dom.attributesLoading.show();\n        this.dom.attributesList.hide();\n        return;\n      }\n\n      // Hide loading, show attributes list\n      this.dom.attributesLoading.hide();\n      this.dom.attributesList.show();\n\n      // Convert selectedAttributes to array if needed\n      if (typeof selectedAttributes === 'string') {\n        selectedAttributes = selectedAttributes.split(',').filter(Boolean);\n      }\n\n      // Create checkbox for each attribute\n      var attributesHtml = attributes.map(function (attr) {\n        var isChecked = selectedAttributes.includes(attr.name) ? 'checked' : '';\n        return \"\\n        <div class=\\\"attribute-item\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\"\\n                   name=\\\"attribute_checkbox[]\\\"\\n                   value=\\\"\".concat(attr.name, \"\\\"\\n                   data-label=\\\"\").concat(attr.label, \"\\\"\\n                   \").concat(isChecked, \">\\n            \").concat(attr.label, \"\\n          </label>\\n        </div>\");\n      }).join('');\n\n      // Add to the DOM and bind events\n      this.dom.attributesList.html(attributesHtml);\n\n      // Bind change event to update the hidden input\n      this.dom.attributesList.find('input[type=\"checkbox\"]').on('change', this._handleAttributeCheckboxChange.bind(this));\n\n      // Update hidden input with currently selected attributes\n      this._updateSelectedAttributesInput();\n    }\n  }, {\n    key: \"_fetchAttributesForCategories\",\n    value: function _fetchAttributesForCategories(categoryIds) {\n      var _this2 = this;\n      var selectedAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (!this.settings.actions || !this.settings.actions.get_attributes) {\n        return;\n      }\n\n      // Show loading indicator\n      this.dom.attributesLoading.text(this.settings.i18n.loadingAttributes || 'Loading attributes...');\n      this.dom.attributesLoading.show();\n      this.dom.attributesList.hide();\n\n      // Get currently selected attributes - either from parameter or from the input field\n      var currentlySelectedAttributes = selectedAttributes || this.dom.selectedAttributesInput.val().split(',').filter(Boolean);\n      _utils__WEBPACK_IMPORTED_MODULE_6__.ajax.ajaxRequest({\n        url: this.settings.ajaxUrl,\n        data: {\n          action: this.settings.actions.get_attributes,\n          nonce: this.settings.nonce,\n          category_ids: categoryIds\n        }\n      }).then(function (response) {\n        var attributesArray = null;\n\n        // Standardize response checking\n        if (response && response.success && response.data && Array.isArray(response.data.attributes)) {\n          attributesArray = response.data.attributes;\n        } else if (response && Array.isArray(response.attributes)) {\n          // Fallback for older direct array\n          attributesArray = response.attributes;\n        }\n        if (attributesArray) {\n          if (attributesArray.length > 0) {\n            _this2._updateAttributeSelectionField(attributesArray, currentlySelectedAttributes);\n          } else {\n            _this2.dom.attributesLoading.text(_this2.settings.i18n.noAttributes || 'No product attributes found for these categories.');\n            _this2.dom.attributesList.hide();\n          }\n        } else {\n          _this2.dom.attributesLoading.text(_this2.settings.i18n.errorLoading || 'Error loading attributes. Please try again.');\n          _this2.dom.attributesList.hide();\n        }\n      }).catch(function () {\n        _this2.dom.attributesLoading.text(_this2.settings.i18n.errorLoading || 'Error loading attributes. Please try again.');\n        _this2.dom.attributesList.hide();\n      });\n    }\n\n    /**\n     * Handle attribute checkbox change events\n     * @private\n     */\n  }, {\n    key: \"_handleAttributeCheckboxChange\",\n    value: function _handleAttributeCheckboxChange() {\n      this._updateSelectedAttributesInput();\n    }\n\n    /**\n     * Update the hidden input with selected attribute values\n     * @private\n     */\n  }, {\n    key: \"_updateSelectedAttributesInput\",\n    value: function _updateSelectedAttributesInput() {\n      var _this3 = this;\n      var selectedAttributes = [];\n      this.dom.attributesList.find('input[type=\"checkbox\"]:checked').each(function (i, checkbox) {\n        selectedAttributes.push(_this3.$(checkbox).val());\n      });\n      this.dom.selectedAttributesInput.val(selectedAttributes.join(','));\n    }\n\n    /**\n     * Override AdminTableManager.resetForm to include Similar Products specific fields.\n     */\n  }, {\n    key: \"resetForm\",\n    value: function resetForm() {\n      var _this$dom$sourceCateg3;\n      _superPropGet(SimilarProductsSettingsModule, \"resetForm\", this, 3)([]); // Call base class method first\n\n      // Reset Similar Products specific fields\n      (_this$dom$sourceCateg3 = this.dom.sourceCategoriesSelect) === null || _this$dom$sourceCateg3 === void 0 || _this$dom$sourceCateg3.val(null).trigger('change.select2'); // Clear Select2\n      this.dom.attributesList.empty();\n      this.dom.attributesLoading.text(this.settings.i18n.selectCategory || 'Select categories to load available attributes...');\n      this.dom.attributesLoading.show();\n      this.dom.selectedAttributesInput.val('');\n    }\n\n    /**\n     * Override AdminTableManager.populateFormWithData for Similar Products specific fields.\n     * @param {object} itemData - The data for the similar product item to populate the form with\n     * @override\n     */\n  }, {\n    key: \"populateFormWithData\",\n    value: function populateFormWithData(itemData) {\n      var _this4 = this;\n      _superPropGet(SimilarProductsSettingsModule, \"populateFormWithData\", this, 3)([itemData]); // Sets item ID, calls base logic\n\n      var sourceCategories = itemData.source_categories || []; // Expecting array for multi-select\n      var attributes = Array.isArray(itemData.attributes) ? itemData.attributes : itemData.attributes ? itemData.attributes.split(',') : [];\n\n      // Set the hidden input value for selected attributes first\n      this.dom.selectedAttributesInput.val(attributes.join(','));\n\n      // Use setTimeout to allow dependent field visibility changes to complete\n      setTimeout(function () {\n        var _this4$dom$sourceCate;\n        // Set source categories and trigger change to load attributes\n        (_this4$dom$sourceCate = _this4.dom.sourceCategoriesSelect) === null || _this4$dom$sourceCate === void 0 || _this4$dom$sourceCate.val(sourceCategories).trigger('change.select2');\n\n        // If we have both categories and attributes selected, manually fetch the attributes\n        // This ensures attributes are loaded and selected when editing an existing item\n        if (sourceCategories.length > 0 && attributes.length > 0) {\n          _this4._fetchAttributesForCategories(sourceCategories, attributes);\n        }\n        _this4.formModified = false; // Reset modified flag after populating\n      }, 150); // Small delay\n    }\n\n    /**\n     * Override AdminTableManager.validateForm for Similar Products specific validation.\n     * @returns {boolean} True if the form passes validation, false otherwise\n     * @override\n     */\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var _this$dom$sourceCateg4, _this$dom$sourceCateg5;\n      var isValid = _superPropGet(SimilarProductsSettingsModule, \"validateForm\", this, 3)([]); // Perform base validation first\n\n      // Get values\n      var sourceCategories = (_this$dom$sourceCateg4 = this.dom.sourceCategoriesSelect) === null || _this$dom$sourceCateg4 === void 0 ? void 0 : _this$dom$sourceCateg4.val(); // Returns array for multi-select\n      var selectedAttributes = this.dom.selectedAttributesInput.val();\n\n      // i18n messages from this.settings.i18n\n      var i18n = this.settings.i18n || {};\n\n      // Clear previous specific errors (showFieldError/clearFieldError are inherited)\n      this.clearFieldError((_this$dom$sourceCateg5 = this.dom.sourceCategoriesSelect) === null || _this$dom$sourceCateg5 === void 0 ? void 0 : _this$dom$sourceCateg5.next('.select2-container')); // Target Select2 container for error\n      this.clearFieldError(this.dom.attributesList); // Clear error on attributes list\n\n      if (!sourceCategories || sourceCategories.length === 0) {\n        var _this$dom$sourceCateg6;\n        this.showFieldError((_this$dom$sourceCateg6 = this.dom.sourceCategoriesSelect) === null || _this$dom$sourceCateg6 === void 0 ? void 0 : _this$dom$sourceCateg6.next('.select2-container'), i18n.selectCategoryError || 'Please select at least one source category.');\n        isValid = false;\n      }\n      if (!selectedAttributes) {\n        this.showFieldError(this.dom.attributesList, i18n.selectAttributesError || 'Please select at least one attribute.');\n        isValid = false;\n      }\n      return isValid;\n    }\n\n    /**\n     * Custom column population method for 'source_categories' column\n     * This method follows the naming convention for column handlers in AdminTableManager\n     * @param {jQuery} $cell - The table cell element to populate\n     * @param {object} itemData - The data for the current row\n     */\n  }, {\n    key: \"populateColumn_source_categories\",\n    value: function populateColumn_source_categories($cell, itemData) {\n      $cell.text(itemData.source_categories_display || 'N/A');\n    }\n\n    /**\n     * Custom column population method for 'attributes' column\n     * @param {jQuery} $cell - The table cell element to populate\n     * @param {object} itemData - The data for the current row\n     */\n  }, {\n    key: \"populateColumn_attributes\",\n    value: function populateColumn_attributes($cell, itemData) {\n      $cell.text(itemData.attributes_display || 'None selected');\n    }\n  }]);\n}(_common_AdminTableManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"]); // Initialize the module when the DOM is ready and its main tab container exists.\njQuery(document).ready(function ($) {\n  var mainTabId = 'similar_products'; // Specific to this module\n  var localizedDataObjectName = 'similarProductsSettings'; // Global settings object name\n\n  if ($(\"#\".concat(mainTabId)).length) {\n    // Check if the global localized data for this module is available\n    if (window[localizedDataObjectName]) {\n      // Instantiate the module once\n      if (!window.SimilarProductsSettingsModuleInstance) {\n        try {\n          window.SimilarProductsSettingsModuleInstance = new SimilarProductsSettingsModule();\n          (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('SimilarProductsInit').log('SimilarProductsSettingsModuleInstance instance initiated.');\n        } catch (error) {\n          (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('SimilarProductsInit').error('Error instantiating SimilarProductsSettingsModuleInstance:', error);\n          // Use the global notice system if ProductEstimatorSettings is available\n          if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n            window.ProductEstimatorSettingsInstance.showNotice('Failed to initialize Similar Products settings. Check console for errors.', 'error');\n          }\n        }\n      }\n    } else {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('SimilarProductsInit').error(\"Localized data object \\\"\".concat(localizedDataObjectName, \"\\\" not found for tab: \").concat(mainTabId, \". Module cannot be initialized.\"));\n      if (window.ProductEstimatorSettingsInstance && typeof window.ProductEstimatorSettingsInstance.showNotice === 'function') {\n        window.ProductEstimatorSettingsInstance.showNotice(\"Configuration data for Similar Products (\\\"\".concat(localizedDataObjectName, \"\\\") is missing. Module disabled.\"), 'error');\n      }\n    }\n    // The module's inherited `handleMainTabChanged` (from VerticalTabbedModule)\n    // will manage activation/deactivation logic, including calling `onMainTabActivated`.\n    // No separate `product_estimator_tab_changed` listener is needed here for re-initialization\n    // or for clearing `sub_tab` from URL, as `VerticalTabbedModule.showVerticalTab` handles URL state.\n  } else {\n    (0,_utils__WEBPACK_IMPORTED_MODULE_6__.createLogger)('SimilarProductsInit').warn(\"Main container #\".concat(mainTabId, \" not found. SimilarProductsSettingsModule will not be initialized.\"));\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (SimilarProductsSettingsModule);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYWRtaW4vbW9kdWxlcy9TaW1pbGFyUHJvZHVjdHNTZXR0aW5nc01vZHVsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzRDLENBQUM7O0FBRWUsQ0FBQztBQUFBLElBRXZERyw2QkFBNkIsMEJBQUFDLGtCQUFBO0VBQ2pDO0FBQ0Y7QUFDQTtFQUNFLFNBQUFELDhCQUFBLEVBQWM7SUFBQSxJQUFBRSxLQUFBO0lBQUFDLGlGQUFBLE9BQUFILDZCQUFBO0lBQ1osSUFBTUksTUFBTSxHQUFHO01BQ2JDLFNBQVMsRUFBRSxrQkFBa0I7TUFDN0JDLGlCQUFpQixFQUFFO01BQ25CO01BQ0E7SUFDRixDQUFDO0lBRURKLEtBQUEsR0FBQUssVUFBQSxPQUFBUCw2QkFBQSxHQUFNSSxNQUFNLEdBQUUsQ0FBQzs7SUFFZkYsS0FBQSxDQUFLTSxDQUFDLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxFQUFFLDhCQUFBQyxNQUFBLENBQThCVCxLQUFBLENBQUtFLE1BQU0sQ0FBQ0MsU0FBUyxHQUFJLFlBQU07TUFBRTtNQUNoRkgsS0FBQSxDQUFLVSx3QkFBd0IsQ0FBQyxDQUFDO01BQy9CVixLQUFBLENBQUtXLG1CQUFtQixDQUFDLENBQUM7TUFDMUJYLEtBQUEsQ0FBS1ksa0JBQWtCLENBQUMsQ0FBQztJQUMzQixDQUFDLENBQUM7SUFBQyxPQUFBWixLQUFBO0VBQ0w7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUpFYSwyRUFBQSxDQUFBZiw2QkFBQSxFQUFBQyxrQkFBQTtFQUFBLE9BQUFlLDhFQUFBLENBQUFoQiw2QkFBQTtJQUFBaUIsR0FBQTtJQUFBQyxLQUFBLEVBS0EsU0FBQU4sd0JBQXdCQSxDQUFBLEVBQUc7TUFDekI7TUFDQSxJQUFJLElBQUksQ0FBQ08sUUFBUSxJQUFJLElBQUksQ0FBQ0EsUUFBUSxDQUFDQyxTQUFTLEVBQUU7UUFBRTtRQUM5QyxJQUFNQSxTQUFTLEdBQUcsSUFB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YWNrOi8vcHJvZHVjdC1lc3RpbWF0b3IvLi9zcmMvanMvYWRtaW4vbW9kdWxlcy9TaW1pbGFyUHJvZHVjdHNTZXR0aW5nc01vZHVsZS5qcz9mMDkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2ltaWxhciBQcm9kdWN0cyBTZXR0aW5ncyBNb2R1bGUgKENsYXNzLWJhc2VkKVxuICpcbiAqIEhhbmRsZXMgZnVuY3Rpb25hbGl0eSBmb3IgdGhlIHNpbWlsYXIgcHJvZHVjdHMgc2V0dGluZ3MgdGFiIGluIHRoZSBhZG1pbiBhcmVhLlxuICovXG5pbXBvcnQgeyBhamF4LCBjcmVhdGVMb2dnZXIgfSBmcm9tICdAdXRpbHMnOyAvLyBJbXBvcnQgdXRpbGl0aWVzIG5lZWRlZCBmb3IgdGhpcyBtb2R1bGVcblxuaW1wb3J0IEFkbWluVGFibGVNYW5hZ2VyIGZyb20gJy4uL2NvbW1vbi9BZG1pblRhYmxlTWFuYWdlcic7IC8vIEFkanVzdCBwYXRoIGFzIG5lZWRlZFxuXG5jbGFzcyBTaW1pbGFyUHJvZHVjdHNTZXR0aW5nc01vZHVsZSBleHRlbmRzIEFkbWluVGFibGVNYW5hZ2VyIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yIGZvciBTaW1pbGFyUHJvZHVjdHNTZXR0aW5nc01vZHVsZVxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3QgY29uZmlnID0ge1xuICAgICAgbWFpblRhYklkOiAnc2ltaWxhcl9wcm9kdWN0cycsXG4gICAgICBsb2NhbGl6ZWREYXRhTmFtZTogJ3NpbWlsYXJQcm9kdWN0c1NldHRpbmdzJ1xuICAgICAgLy8gQWRtaW5UYWJsZU1hbmFnZXIgcGFzc2VzIHRoaXMgdG8gVmVydGljYWxUYWJiZWRNb2R1bGUsXG4gICAgICAvLyB3aGljaCBwYXNzZXMgcmVsZXZhbnQgcGFydHMgdG8gUHJvZHVjdEVzdGltYXRvclNldHRpbmdzLlxuICAgIH07XG5cbiAgICBzdXBlcihjb25maWcpOyAvLyBDYWxscyBBZG1pblRhYmxlTWFuYWdlciBjb25zdHJ1Y3RvclxuXG4gICAgdGhpcy4kKGRvY3VtZW50KS5vbihgYWRtaW5fdGFibGVfbWFuYWdlcl9yZWFkeV8ke3RoaXMuY29uZmlnLm1haW5UYWJJZH1gLCAoKSA9PiB7IC8vIFBPVEVOVElBTCBFUlJPUiBIRVJFXG4gICAgICB0aGlzLl9jYWNoZVNpbWlsYXJQcm9kdWN0c0RPTSgpO1xuICAgICAgdGhpcy5fYmluZFNwZWNpZmljRXZlbnRzKCk7XG4gICAgICB0aGlzLl9pbml0aWFsaXplU2VsZWN0MigpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIENhY2hlIERPTSBlbGVtZW50cyBzcGVjaWZpYyB0byBTaW1pbGFyIFByb2R1Y3RzLCBiZXlvbmQgd2hhdCBBZG1pblRhYmxlTWFuYWdlciBjYWNoZXMuXG4gICAqIFRoaXMgaXMgY2FsbGVkIGFmdGVyIEFkbWluVGFibGVNYW5hZ2VyJ3MgY2FjaGVET00uXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfY2FjaGVTaW1pbGFyUHJvZHVjdHNET00oKSB7XG4gICAgLy8gdGhpcy5kb20gaXMgaW5pdGlhbGl6ZWQgYnkgQWRtaW5UYWJsZU1hbmFnZXIuIEFkZCBTaW1pbGFyIFByb2R1Y3RzIHNwZWNpZmljIGVsZW1lbnRzLlxuICAgIGlmICh0aGlzLnNldHRpbmdzICYmIHRoaXMuc2V0dGluZ3Muc2VsZWN0b3JzKSB7IC8vIHRoaXMuc2V0dGluZ3MgaXMgZnJvbSBQcm9kdWN0RXN0aW1hdG9yU2V0dGluZ3MgYmFzZVxuICAgICAgY29uc3Qgc2VsZWN0b3JzID0gdGhpcy5zZXR0aW5ncy5zZWxlY3RvcnM7XG4gICAgICB0aGlzLmRvbS5zb3VyY2VDYXRlZ29yaWVzU2VsZWN0ID0gdGhpcy4kY29udGFpbmVyLmZpbmQoc2VsZWN0b3JzLnNvdXJjZUNhdGVnb3JpZXNTZWxlY3QpO1xuICAgICAgdGhpcy5kb20uYXR0cmlidXRlc0NvbnRhaW5lciA9IHRoaXMuJGNvbnRhaW5lci5maW5kKHNlbGVjdG9ycy5hdHRyaWJ1dGVzQ29udGFpbmVyKTtcbiAgICAgIHRoaXMuZG9tLmF0dHJpYnV0ZXNMaXN0ID0gdGhpcy4kY29udGFpbmVyLmZpbmQoc2VsZWN0b3JzLmF0dHJpYnV0ZXNMaXN0KTtcbiAgICAgIHRoaXMuZG9tLmF0dHJpYnV0ZXNMb2FkaW5nID0gdGhpcy4kY29udGFpbmVyLmZpbmQoc2VsZWN0b3JzLmF0dHJpYnV0ZXNMb2FkaW5nKTtcbiAgICAgIHRoaXMuZG9tLnNlbGVjdGVkQXR0cmlidXRlc0lucHV0ID0gdGhpcy4kY29udGFpbmVyLmZpbmQoc2VsZWN0b3JzLnNlbGVjdGVkQXR0cmlidXRlc0lucHV0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3JlYXRlTG9nZ2VyKCdTaW1pbGFyUHJvZHVjdHNNb2R1bGUnKS53YXJuKCdTaW1pbGFyUHJvZHVjdHNTZXR0aW5nc01vZHVsZTogc2V0dGluZ3Mgb3Igc2VsZWN0b3JzIG5vdCBhdmFpbGFibGUgZm9yIERPTSBjYWNoaW5nJyk7XG4gICAgfVxuXG4gIH1cblxuICAvKipcbiAgICogQmluZCBjb3JlIGV2ZW50IGhhbmRsZXJzXG4gICAqL1xuICBfYmluZFNwZWNpZmljRXZlbnRzKCkge1xuICAgIGlmICghdGhpcy5kb20uZm9ybSB8fCAhdGhpcy5kb20uZm9ybS5sZW5ndGgpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmRvbS5zb3VyY2VDYXRlZ29yaWVzU2VsZWN0Py5vbignY2hhbmdlLlNpbWlsYXJQcm9kdWN0cycsIHRoaXMuX2hhbmRsZVNvdXJjZUNhdGVnb3JpZXNDaGFuZ2UuYmluZCh0aGlzKSk7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbGl6ZSBTZWxlY3QyIGNvbXBvbmVudHMuXG4gICAqIFRoaXMgaXMgY2FsbGVkIGFmdGVyIHRoZSBgYWRtaW5fdGFibGVfbWFuYWdlcl9yZWFkeWAgZXZlbnQuXG4gICAqIFVzaW5nIHRoZSBiYXNlIGNsYXNzIFNlbGVjdDIgaW5pdGlhbGl6YXRpb24gbWV0aG9kcy5cbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9pbml0aWFsaXplU2VsZWN0MigpIHtcbiAgICAvLyBVc2UgdGhlIGJhc2UgY2xhc3MgaW5pdGlhbGl6ZVNlbGVjdDJEcm9wZG93bnMgbWV0aG9kIHdpdGggb3VyIHNwZWNpZmljIGNvbmZpZ3VyYXRpb25cbiAgICB0aGlzLmluaXRpYWxpemVTZWxlY3QyRHJvcGRvd25zKHtcbiAgICAgIGVsZW1lbnRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBlbGVtZW50OiB0aGlzLmRvbS5zb3VyY2VDYXRlZ29yaWVzU2VsZWN0LFxuICAgICAgICAgIHBsYWNlaG9sZGVyS2V5OiAnc2VsZWN0Q2F0ZWdvcnlFcnJvcicsXG4gICAgICAgICAgZmFsbGJhY2tUZXh0OiAnU2VsZWN0IHNvdXJjZSBjYXRlZ29yaWVzJyxcbiAgICAgICAgICBuYW1lOiAnc291cmNlIGNhdGVnb3JpZXMnLFxuICAgICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgY2xlYXJJbml0aWFsOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgLy8gU2V0dGluZ3MgYW5kIGkxOG4gYXJlIGF1dG9tYXRpY2FsbHkgcHJvdmlkZWQgYnkgdGhlIGJhc2UgbWV0aG9kXG4gICAgICBtb2R1bGVOYW1lOiAnU2ltaWxhciBQcm9kdWN0cydcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBPdmVycmlkZGVuIGZyb20gVmVydGljYWxUYWJiZWRNb2R1bGUuIENhbGxlZCB3aGVuIHRoZSBcIlByb2R1Y3QgQWRkaXRpb25zXCIgbWFpbiB0YWIgaXMgYWN0aXZhdGVkLlxuICAgKi9cbiAgb25NYWluVGFiQWN0aXZhdGVkKCkge1xuICAgIHN1cGVyLm9uTWFpblRhYkFjdGl2YXRlZCgpOyAvLyBDYWxsIHBhcmVudCBtZXRob2RcbiAgICAvLyBTcGVjaWZpYyBhY3Rpb25zIGZvciBQcm9kdWN0IEFkZGl0aW9ucyB3aGVuIGl0cyB0YWIgaXMgc2hvd24uXG4gICAgLy8gRm9yIGV4YW1wbGUsIGlmIFNlbGVjdDIgb3Igb3RoZXIgY29tcG9uZW50cyBuZWVkIHJlLWluaXRpYWxpemF0aW9uIG9yIHJlZnJlc2ggd2hlbiB0YWIgYmVjb21lcyB2aXNpYmxlLlxuICAgIC8vIFRoZSBgYWRtaW5fdGFibGVfbWFuYWdlcl9yZWFkeWAgZXZlbnQgaGFuZGxlcyBpbml0aWFsIHNldHVwLiBUaGlzIGlzIGZvciBzdWJzZXF1ZW50IGFjdGl2YXRpb25zLlxuICAgIC8vIElmIFNlbGVjdDIgd2FzIGluaXRpYWxpemVkIHdoaWxlIGhpZGRlbiwgaXQgbWlnaHQgbmVlZCBhIHJlZnJlc2guXG4gICAgaWYgKHRoaXMuZG9tLnNvdXJjZUNhdGVnb3JpZXNTZWxlY3QgJiYgdGhpcy5kb20uc291cmNlQ2F0ZWdvcmllc1NlbGVjdC5oYXNDbGFzcyhcInNlbGVjdDItaGlkZGVuLWFjY2Vzc2libGVcIikpIHtcbiAgICAgIC8vIHRoaXMuZG9tLnNvdXJjZUNhdGVnb3J5U2VsZWN0LnNlbGVjdDIoJ2Rlc3Ryb3knKS5zZWxlY3QyKHsuLi59KTsgLy8gRnVsbCByZS1pbml0XG4gICAgICAvLyBPciBqdXN0IHRyaWdnZXIgYSByZXNpemUvcmVkcmF3IGlmIHRoYXQgaGVscHMuXG4gICAgfVxuICAgIC8vIFRoZSBpbmhlcml0ZWQgVmVydGljYWxUYWJiZWRNb2R1bGUuaGFuZGxlTWFpblRhYkNoYW5nZWQgY2FsbHMgc2V0dXBWZXJ0aWNhbFRhYnMsXG4gICAgLy8gd2hpY2ggY29ycmVjdGx5IGhhbmRsZXMgdGhlIHN1Yl90YWIgaW4gdGhlIFVSTC4gTm8gbWFudWFsIHN1Yl90YWIgY2xlYXJpbmcgbmVlZGVkIGhlcmUuXG4gIH1cblxuXG4gIF9oYW5kbGVTb3VyY2VDYXRlZ29yaWVzQ2hhbmdlKCkge1xuICAgIGNvbnN0IGNhdGVnb3J5SWRzID0gdGhpcy5kb20uc291cmNlQ2F0ZWdvcmllc1NlbGVjdD8udmFsKCk7XG5cbiAgICBpZiAoY2F0ZWdvcnlJZHMgJiYgY2F0ZWdvcnlJZHMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5fZmV0Y2hBdHRyaWJ1dGVzRm9yQ2F0ZWdvcmllcyhjYXRlZ29yeUlkcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3VwZGF0ZUF0dHJpYnV0ZVNlbGVjdGlvbkZpZWxkKFtdLCBbXSk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZUF0dHJpYnV0ZVNlbGVjdGlvbkZpZWxkKGF0dHJpYnV0ZXMsIHNlbGVjdGVkQXR0cmlidXRlcyA9IFtdKSB7XG4gICAgLy8gQ2xlYXIgcHJldmlvdXMgY29udGVudFxuICAgIHRoaXMuZG9tLmF0dHJpYnV0ZXNMaXN0LmVtcHR5KCk7XG5cbiAgICBpZiAoIWF0dHJpYnV0ZXMgfHwgYXR0cmlidXRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgIC8vIFNob3cgbG9hZGluZyBtZXNzYWdlIGlmIG5vIGF0dHJpYnV0ZXMgcGFzc2VkXG4gICAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTG9hZGluZy5zaG93KCk7XG4gICAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTGlzdC5oaWRlKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSGlkZSBsb2FkaW5nLCBzaG93IGF0dHJpYnV0ZXMgbGlzdFxuICAgIHRoaXMuZG9tLmF0dHJpYnV0ZXNMb2FkaW5nLmhpZGUoKTtcbiAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTGlzdC5zaG93KCk7XG5cbiAgICAvLyBDb252ZXJ0IHNlbGVjdGVkQXR0cmlidXRlcyB0byBhcnJheSBpZiBuZWVkZWRcbiAgICBpZiAodHlwZW9mIHNlbGVjdGVkQXR0cmlidXRlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHNlbGVjdGVkQXR0cmlidXRlcyA9IHNlbGVjdGVkQXR0cmlidXRlcy5zcGxpdCgnLCcpLmZpbHRlcihCb29sZWFuKTtcbiAgICB9XG5cbiAgICAvLyBDcmVhdGUgY2hlY2tib3ggZm9yIGVhY2ggYXR0cmlidXRlXG4gICAgY29uc3QgYXR0cmlidXRlc0h0bWwgPSBhdHRyaWJ1dGVzLm1hcChhdHRyID0+IHtcbiAgICAgIGNvbnN0IGlzQ2hlY2tlZCA9IHNlbGVjdGVkQXR0cmlidXRlcy5pbmNsdWRlcyhhdHRyLm5hbWUpID8gJ2NoZWNrZWQnIDogJyc7XG4gICAgICByZXR1cm4gYFxuICAgICAgICA8ZGl2IGNsYXNzPVwiYXR0cmlidXRlLWl0ZW1cIj5cbiAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICBuYW1lPVwiYXR0cmlidXRlX2NoZWNrYm94W11cIlxuICAgICAgICAgICAgICAgICAgIHZhbHVlPVwiJHthdHRyLm5hbWV9XCJcbiAgICAgICAgICAgICAgICAgICBkYXRhLWxhYmVsPVwiJHthdHRyLmxhYmVsfVwiXG4gICAgICAgICAgICAgICAgICAgJHtpc0NoZWNrZWR9PlxuICAgICAgICAgICAgJHthdHRyLmxhYmVsfVxuICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgIDwvZGl2PmA7XG4gICAgfSkuam9pbignJyk7XG5cbiAgICAvLyBBZGQgdG8gdGhlIERPTSBhbmQgYmluZCBldmVudHNcbiAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTGlzdC5odG1sKGF0dHJpYnV0ZXNIdG1sKTtcblxuICAgIC8vIEJpbmQgY2hhbmdlIGV2ZW50IHRvIHVwZGF0ZSB0aGUgaGlkZGVuIGlucHV0XG4gICAgdGhpcy5kb20uYXR0cmlidXRlc0xpc3QuZmluZCgnaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdJykub24oJ2NoYW5nZScsIHRoaXMuX2hhbmRsZUF0dHJpYnV0ZUNoZWNrYm94Q2hhbmdlLmJpbmQodGhpcykpO1xuXG4gICAgLy8gVXBkYXRlIGhpZGRlbiBpbnB1dCB3aXRoIGN1cnJlbnRseSBzZWxlY3RlZCBhdHRyaWJ1dGVzXG4gICAgdGhpcy5fdXBkYXRlU2VsZWN0ZWRBdHRyaWJ1dGVzSW5wdXQoKTtcbiAgfVxuXG4gIF9mZXRjaEF0dHJpYnV0ZXNGb3JDYXRlZ29yaWVzKGNhdGVnb3J5SWRzLCBzZWxlY3RlZEF0dHJpYnV0ZXMgPSBudWxsKSB7XG5cbiAgICBpZiAoIXRoaXMuc2V0dGluZ3MuYWN0aW9ucyB8fCAhdGhpcy5zZXR0aW5ncy5hY3Rpb25zLmdldF9hdHRyaWJ1dGVzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gU2hvdyBsb2FkaW5nIGluZGljYXRvclxuICAgIHRoaXMuZG9tLmF0dHJpYnV0ZXNMb2FkaW5nLnRleHQodGhpcy5zZXR0aW5ncy5pMThuLmxvYWRpbmdBdHRyaWJ1dGVzIHx8ICdMb2FkaW5nIGF0dHJpYnV0ZXMuLi4nKTtcbiAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTG9hZGluZy5zaG93KCk7XG4gICAgdGhpcy5kb20uYXR0cmlidXRlc0xpc3QuaGlkZSgpO1xuXG4gICAgLy8gR2V0IGN1cnJlbnRseSBzZWxlY3RlZCBhdHRyaWJ1dGVzIC0gZWl0aGVyIGZyb20gcGFyYW1ldGVyIG9yIGZyb20gdGhlIGlucHV0IGZpZWxkXG4gICAgY29uc3QgY3VycmVudGx5U2VsZWN0ZWRBdHRyaWJ1dGVzID0gc2VsZWN0ZWRBdHRyaWJ1dGVzIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRvbS5zZWxlY3RlZEF0dHJpYnV0ZXNJbnB1dC52YWwoKS5zcGxpdCgnLCcpLmZpbHRlcihCb29sZWFuKTtcblxuXG4gICAgYWpheC5hamF4UmVxdWVzdCh7XG4gICAgICB1cmw6IHRoaXMuc2V0dGluZ3MuYWpheFVybCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgYWN0aW9uOiB0aGlzLnNldHRpbmdzLmFjdGlvbnMuZ2V0X2F0dHJpYnV0ZXMsXG4gICAgICAgIG5vbmNlOiB0aGlzLnNldHRpbmdzLm5vbmNlLFxuICAgICAgICBjYXRlZ29yeV9pZHM6IGNhdGVnb3J5SWRzLFxuICAgICAgfVxuICAgIH0pXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgbGV0IGF0dHJpYnV0ZXNBcnJheSA9IG51bGw7XG5cbiAgICAgIC8vIFN0YW5kYXJkaXplIHJlc3BvbnNlIGNoZWNraW5nXG4gICAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3VjY2VzcyAmJiByZXNwb25zZS5kYXRhICYmIEFycmF5LmlzQXJyYXkocmVzcG9uc2UuZGF0YS5hdHRyaWJ1dGVzKSkge1xuICAgICAgICBhdHRyaWJ1dGVzQXJyYXkgPSByZXNwb25zZS5kYXRhLmF0dHJpYnV0ZXM7XG4gICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlICYmIEFycmF5LmlzQXJyYXkocmVzcG9uc2UuYXR0cmlidXRlcykpIHsgLy8gRmFsbGJhY2sgZm9yIG9sZGVyIGRpcmVjdCBhcnJheVxuICAgICAgICBhdHRyaWJ1dGVzQXJyYXkgPSByZXNwb25zZS5hdHRyaWJ1dGVzO1xuICAgICAgfVxuXG4gICAgICBpZiAoYXR0cmlidXRlc0FycmF5KSB7XG4gICAgICAgIGlmIChhdHRyaWJ1dGVzQXJyYXkubGVuZ3RoID4gMCkge1xuICAgICAgICAgIHRoaXMuX3VwZGF0ZUF0dHJpYnV0ZVNlbGVjdGlvbkZpZWxkKGF0dHJpYnV0ZXNBcnJheSwgY3VycmVudGx5U2VsZWN0ZWRBdHRyaWJ1dGVzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTG9hZGluZy50ZXh0KHRoaXMuc2V0dGluZ3MuaTE4bi5ub0F0dHJpYnV0ZXMgfHwgJ05vIHByb2R1Y3QgYXR0cmlidXRlcyBmb3VuZCBmb3IgdGhlc2UgY2F0ZWdvcmllcy4nKTtcbiAgICAgICAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTGlzdC5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZG9tLmF0dHJpYnV0ZXNMb2FkaW5nLnRleHQodGhpcy5zZXR0aW5ncy5pMThuLmVycm9yTG9hZGluZyB8fCAnRXJyb3IgbG9hZGluZyBhdHRyaWJ1dGVzLiBQbGVhc2UgdHJ5IGFnYWluLicpO1xuICAgICAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTGlzdC5oaWRlKCk7XG4gICAgICB9XG4gICAgfSlcbiAgICAuY2F0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5kb20uYXR0cmlidXRlc0xvYWRpbmcudGV4dCh0aGlzLnNldHRpbmdzLmkxOG4uZXJyb3JMb2FkaW5nIHx8ICdFcnJvciBsb2FkaW5nIGF0dHJpYnV0ZXMuIFBsZWFzZSB0cnkgYWdhaW4uJyk7XG4gICAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTGlzdC5oaWRlKCk7XG4gICAgfSk7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBIYW5kbGUgYXR0cmlidXRlIGNoZWNrYm94IGNoYW5nZSBldmVudHNcbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9oYW5kbGVBdHRyaWJ1dGVDaGVja2JveENoYW5nZSgpIHtcbiAgICB0aGlzLl91cGRhdGVTZWxlY3RlZEF0dHJpYnV0ZXNJbnB1dCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZSB0aGUgaGlkZGVuIGlucHV0IHdpdGggc2VsZWN0ZWQgYXR0cmlidXRlIHZhbHVlc1xuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgX3VwZGF0ZVNlbGVjdGVkQXR0cmlidXRlc0lucHV0KCkge1xuICAgIGNvbnN0IHNlbGVjdGVkQXR0cmlidXRlcyA9IFtdO1xuXG4gICAgdGhpcy5kb20uYXR0cmlidXRlc0xpc3QuZmluZCgnaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQnKS5lYWNoKChpLCBjaGVja2JveCkgPT4ge1xuICAgICAgc2VsZWN0ZWRBdHRyaWJ1dGVzLnB1c2godGhpcy4kKGNoZWNrYm94KS52YWwoKSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmRvbS5zZWxlY3RlZEF0dHJpYnV0ZXNJbnB1dC52YWwoc2VsZWN0ZWRBdHRyaWJ1dGVzLmpvaW4oJywnKSk7XG4gIH1cblxuICAvKipcbiAgICogT3ZlcnJpZGUgQWRtaW5UYWJsZU1hbmFnZXIucmVzZXRGb3JtIHRvIGluY2x1ZGUgU2ltaWxhciBQcm9kdWN0cyBzcGVjaWZpYyBmaWVsZHMuXG4gICAqL1xuICByZXNldEZvcm0oKSB7XG4gICAgc3VwZXIucmVzZXRGb3JtKCk7IC8vIENhbGwgYmFzZSBjbGFzcyBtZXRob2QgZmlyc3RcblxuICAgIC8vIFJlc2V0IFNpbWlsYXIgUHJvZHVjdHMgc3BlY2lmaWMgZmllbGRzXG4gICAgdGhpcy5kb20uc291cmNlQ2F0ZWdvcmllc1NlbGVjdD8udmFsKG51bGwpLnRyaWdnZXIoJ2NoYW5nZS5zZWxlY3QyJyk7IC8vIENsZWFyIFNlbGVjdDJcbiAgICB0aGlzLmRvbS5hdHRyaWJ1dGVzTGlzdC5lbXB0eSgpO1xuICAgIHRoaXMuZG9tLmF0dHJpYnV0ZXNMb2FkaW5nLnRleHQodGhpcy5zZXR0aW5ncy5pMThuLnNlbGVjdENhdGVnb3J5IHx8ICdTZWxlY3QgY2F0ZWdvcmllcyB0byBsb2FkIGF2YWlsYWJsZSBhdHRyaWJ1dGVzLi4uJyk7XG4gICAgdGhpcy5kb20uYXR0cmlidXRlc0xvYWRpbmcuc2hvdygpO1xuICAgIHRoaXMuZG9tLnNlbGVjdGVkQXR0cmlidXRlc0lucHV0LnZhbCgnJyk7XG5cbiAgfVxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBBZG1pblRhYmxlTWFuYWdlci5wb3B1bGF0ZUZvcm1XaXRoRGF0YSBmb3IgU2ltaWxhciBQcm9kdWN0cyBzcGVjaWZpYyBmaWVsZHMuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBpdGVtRGF0YSAtIFRoZSBkYXRhIGZvciB0aGUgc2ltaWxhciBwcm9kdWN0IGl0ZW0gdG8gcG9wdWxhdGUgdGhlIGZvcm0gd2l0aFxuICAgKiBAb3ZlcnJpZGVcbiAgICovXG4gIHBvcHVsYXRlRm9ybVdpdGhEYXRhKGl0ZW1EYXRhKSB7XG4gICAgc3VwZXIucG9wdWxhdGVGb3JtV2l0aERhdGEoaXRlbURhdGEpOyAvLyBTZXRzIGl0ZW0gSUQsIGNhbGxzIGJhc2UgbG9naWNcblxuICAgIGNvbnN0IHNvdXJjZUNhdGVnb3JpZXMgPSBpdGVtRGF0YS5zb3VyY2VfY2F0ZWdvcmllcyB8fCBbXTsgLy8gRXhwZWN0aW5nIGFycmF5IGZvciBtdWx0aS1zZWxlY3RcbiAgICBjb25zdCBhdHRyaWJ1dGVzID0gQXJyYXkuaXNBcnJheShpdGVtRGF0YS5hdHRyaWJ1dGVzKSA/IGl0ZW1EYXRhLmF0dHJpYnV0ZXMgOlxuICAgICAgICAgICAgICAgICAgICAgIChpdGVtRGF0YS5hdHRyaWJ1dGVzID8gaXRlbURhdGEuYXR0cmlidXRlcy5zcGxpdCgnLCcpIDogW10pO1xuXG4gICAgLy8gU2V0IHRoZSBoaWRkZW4gaW5wdXQgdmFsdWUgZm9yIHNlbGVjdGVkIGF0dHJpYnV0ZXMgZmlyc3RcbiAgICB0aGlzLmRvbS5zZWxlY3RlZEF0dHJpYnV0ZXNJbnB1dC52YWwoYXR0cmlidXRlcy5qb2luKCcsJykpO1xuXG4gICAgLy8gVXNlIHNldFRpbWVvdXQgdG8gYWxsb3cgZGVwZW5kZW50IGZpZWxkIHZpc2liaWxpdHkgY2hhbmdlcyB0byBjb21wbGV0ZVxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgLy8gU2V0IHNvdXJjZSBjYXRlZ29yaWVzIGFuZCB0cmlnZ2VyIGNoYW5nZSB0byBsb2FkIGF0dHJpYnV0ZXNcbiAgICAgIHRoaXMuZG9tLnNvdXJjZUNhdGVnb3JpZXNTZWxlY3Q/LnZhbChzb3VyY2VDYXRlZ29yaWVzKS50cmlnZ2VyKCdjaGFuZ2Uuc2VsZWN0MicpO1xuXG4gICAgICAvLyBJZiB3ZSBoYXZlIGJvdGggY2F0ZWdvcmllcyBhbmQgYXR0cmlidXRlcyBzZWxlY3RlZCwgbWFudWFsbHkgZmV0Y2ggdGhlIGF0dHJpYnV0ZXNcbiAgICAgIC8vIFRoaXMgZW5zdXJlcyBhdHRyaWJ1dGVzIGFyZSBsb2FkZWQgYW5kIHNlbGVjdGVkIHdoZW4gZWRpdGluZyBhbiBleGlzdGluZyBpdGVtXG4gICAgICBpZiAoc291cmNlQ2F0ZWdvcmllcy5sZW5ndGggPiAwICYmIGF0dHJpYnV0ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLl9mZXRjaEF0dHJpYnV0ZXNGb3JDYXRlZ29yaWVzKHNvdXJjZUNhdGVnb3JpZXMsIGF0dHJpYnV0ZXMpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmZvcm1Nb2RpZmllZCA9IGZhbHNlOyAvLyBSZXNldCBtb2RpZmllZCBmbGFnIGFmdGVyIHBvcHVsYXRpbmdcbiAgICB9LCAxNTApOyAvLyBTbWFsbCBkZWxheVxuICB9XG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIEFkbWluVGFibGVNYW5hZ2VyLnZhbGlkYXRlRm9ybSBmb3IgU2ltaWxhciBQcm9kdWN0cyBzcGVjaWZpYyB2YWxpZGF0aW9uLlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgZm9ybSBwYXNzZXMgdmFsaWRhdGlvbiwgZmFsc2Ugb3RoZXJ3aXNlXG4gICAqIEBvdmVycmlkZVxuICAgKi9cbiAgdmFsaWRhdGVGb3JtKCkge1xuICAgIGxldCBpc1ZhbGlkID0gc3VwZXIudmFsaWRhdGVGb3JtKCk7IC8vIFBlcmZvcm0gYmFzZSB2YWxpZGF0aW9uIGZpcnN0XG5cbiAgICAvLyBHZXQgdmFsdWVzXG4gICAgY29uc3Qgc291cmNlQ2F0ZWdvcmllcyA9IHRoaXMuZG9tLnNvdXJjZUNhdGVnb3JpZXNTZWxlY3Q/LnZhbCgpOyAvLyBSZXR1cm5zIGFycmF5IGZvciBtdWx0aS1zZWxlY3RcbiAgICBjb25zdCBzZWxlY3RlZEF0dHJpYnV0ZXMgPSB0aGlzLmRvbS5zZWxlY3RlZEF0dHJpYnV0ZXNJbnB1dC52YWwoKTtcblxuICAgIC8vIGkxOG4gbWVzc2FnZXMgZnJvbSB0aGlzLnNldHRpbmdzLmkxOG5cbiAgICBjb25zdCBpMThuID0gdGhpcy5zZXR0aW5ncy5pMThuIHx8IHt9O1xuXG4gICAgLy8gQ2xlYXIgcHJldmlvdXMgc3BlY2lmaWMgZXJyb3JzIChzaG93RmllbGRFcnJvci9jbGVhckZpZWxkRXJyb3IgYXJlIGluaGVyaXRlZClcbiAgICB0aGlzLmNsZWFyRmllbGRFcnJvcih0aGlzLmRvbS5zb3VyY2VDYXRlZ29yaWVzU2VsZWN0Py5uZXh0KCcuc2VsZWN0Mi1jb250YWluZXInKSk7IC8vIFRhcmdldCBTZWxlY3QyIGNvbnRhaW5lciBmb3IgZXJyb3JcbiAgICB0aGlzLmNsZWFyRmllbGRFcnJvcih0aGlzLmRvbS5hdHRyaWJ1dGVzTGlzdCk7IC8vIENsZWFyIGVycm9yIG9uIGF0dHJpYnV0ZXMgbGlzdFxuXG4gICAgaWYgKCFzb3VyY2VDYXRlZ29yaWVzIHx8IHNvdXJjZUNhdGVnb3JpZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLnNob3dGaWVsZEVycm9yKHRoaXMuZG9tLnNvdXJjZUNhdGVnb3JpZXNTZWxlY3Q/Lm5leHQoJy5zZWxlY3QyLWNvbnRhaW5lcicpLCBpMThuLnNlbGVjdENhdGVnb3J5RXJyb3IgfHwgJ1BsZWFzZSBzZWxlY3QgYXQgbGVhc3Qgb25lIHNvdXJjZSBjYXRlZ29yeS4nKTtcbiAgICAgIGlzVmFsaWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoIXNlbGVjdGVkQXR0cmlidXRlcykge1xuICAgICAgdGhpcy5zaG93RmllbGRFcnJvcih0aGlzLmRvbS5hdHRyaWJ1dGVzTGlzdCwgaTE4bi5zZWxlY3RBdHRyaWJ1dGVzRXJyb3IgfHwgJ1BsZWFzZSBzZWxlY3QgYXQgbGVhc3Qgb25lIGF0dHJpYnV0ZS4nKTtcbiAgICAgIGlzVmFsaWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gaXNWYWxpZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDdXN0b20gY29sdW1uIHBvcHVsYXRpb24gbWV0aG9kIGZvciAnc291cmNlX2NhdGVnb3JpZXMnIGNvbHVtblxuICAgKiBUaGlzIG1ldGhvZCBmb2xsb3dzIHRoZSBuYW1pbmcgY29udmVudGlvbiBmb3IgY29sdW1uIGhhbmRsZXJzIGluIEFkbWluVGFibGVNYW5hZ2VyXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSAkY2VsbCAtIFRoZSB0YWJsZSBjZWxsIGVsZW1lbnQgdG8gcG9wdWxhdGVcbiAgICogQHBhcmFtIHtvYmplY3R9IGl0ZW1EYXRhIC0gVGhlIGRhdGEgZm9yIHRoZSBjdXJyZW50IHJvd1xuICAgKi9cbiAgcG9wdWxhdGVDb2x1bW5fc291cmNlX2NhdGVnb3JpZXMoJGNlbGwsIGl0ZW1EYXRhKSB7XG4gICAgJGNlbGwudGV4dChpdGVtRGF0YS5zb3VyY2VfY2F0ZWdvcmllc19kaXNwbGF5IHx8ICdOL0EnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDdXN0b20gY29sdW1uIHBvcHVsYXRpb24gbWV0aG9kIGZvciAnYXR0cmlidXRlcycgY29sdW1uXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSAkY2VsbCAtIFRoZSB0YWJsZSBjZWxsIGVsZW1lbnQgdG8gcG9wdWxhdGVcbiAgICogQHBhcmFtIHtvYmplY3R9IGl0ZW1EYXRhIC0gVGhlIGRhdGEgZm9yIHRoZSBjdXJyZW50IHJvd1xuICAgKi9cbiAgcG9wdWxhdGVDb2x1bW5fYXR0cmlidXRlcygkY2VsbCwgaXRlbURhdGEpIHtcbiAgICAkY2VsbC50ZXh0KGl0ZW1EYXRhLmF0dHJpYnV0ZXNfZGlzcGxheSB8fCAnTm9uZSBzZWxlY3RlZCcpO1xuICB9XG59XG5cbi8vIEluaXRpYWxpemUgdGhlIG1vZHVsZSB3aGVuIHRoZSBET00gaXMgcmVhZHkgYW5kIGl0cyBtYWluIHRhYiBjb250YWluZXIgZXhpc3RzLlxuICBqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgkKSB7XG4gICAgY29uc3QgbWFpblRhYklkID0gJ3NpbWlsYXJfcHJvZHVjdHMnOyAvLyBTcGVjaWZpYyB0byB0aGlzIG1vZHVsZVxuICAgIGNvbnN0IGxvY2FsaXplZERhdGFPYmplY3ROYW1lID0gJ3NpbWlsYXJQcm9kdWN0c1NldHRpbmdzJzsgLy8gR2xvYmFsIHNldHRpbmdzIG9iamVjdCBuYW1lXG5cbiAgICBpZiAoJChgIyR7bWFpblRhYklkfWApLmxlbmd0aCkge1xuXG4gICAgICAvLyBDaGVjayBpZiB0aGUgZ2xvYmFsIGxvY2FsaXplZCBkYXRhIGZvciB0aGlzIG1vZHVsZSBpcyBhdmFpbGFibGVcbiAgICAgIGlmICh3aW5kb3dbbG9jYWxpemVkRGF0YU9iamVjdE5hbWVdKSB7XG4gICAgICAgIC8vIEluc3RhbnRpYXRlIHRoZSBtb2R1bGUgb25jZVxuICAgICAgICBpZiAoIXdpbmRvdy5TaW1pbGFyUHJvZHVjdHNTZXR0aW5nc01vZHVsZUluc3RhbmNlKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHdpbmRvdy5TaW1pbGFyUHJvZHVjdHNTZXR0aW5nc01vZHVsZUluc3RhbmNlID0gbmV3IFNpbWlsYXJQcm9kdWN0c1NldHRpbmdzTW9kdWxlKCk7XG4gICAgICAgICAgICBjcmVhdGVMb2dnZXIoJ1NpbWlsYXJQcm9kdWN0c0luaXQnKS5sb2coJ1NpbWlsYXJQcm9kdWN0c1NldHRpbmdzTW9kdWxlSW5zdGFuY2UgaW5zdGFuY2UgaW5pdGlhdGVkLicpO1xuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjcmVhdGVMb2dnZXIoJ1NpbWlsYXJQcm9kdWN0c0luaXQnKS5lcnJvcignRXJyb3IgaW5zdGFudGlhdGluZyBTaW1pbGFyUHJvZHVjdHNTZXR0aW5nc01vZHVsZUluc3RhbmNlOicsIGVycm9yKTtcbiAgICAgICAgICAgIC8vIFVzZSB0aGUgZ2xvYmFsIG5vdGljZSBzeXN0ZW0gaWYgUHJvZHVjdEVzdGltYXRvclNldHRpbmdzIGlzIGF2YWlsYWJsZVxuICAgICAgICAgICAgaWYgKHdpbmRvdy5Qcm9kdWN0RXN0aW1hdG9yU2V0dGluZ3NJbnN0YW5jZSAmJiB0eXBlb2Ygd2luZG93LlByb2R1Y3RFc3RpbWF0b3JTZXR0aW5nc0luc3RhbmNlLnNob3dOb3RpY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgd2luZG93LlByb2R1Y3RFc3RpbWF0b3JTZXR0aW5nc0luc3RhbmNlLnNob3dOb3RpY2UoJ0ZhaWxlZCB0byBpbml0aWFsaXplIFNpbWlsYXIgUHJvZHVjdHMgc2V0dGluZ3MuIENoZWNrIGNvbnNvbGUgZm9yIGVycm9ycy4nLCAnZXJyb3InKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNyZWF0ZUxvZ2dlcignU2ltaWxhclByb2R1Y3RzSW5pdCcpLmVycm9yKGBMb2NhbGl6ZWQgZGF0YSBvYmplY3QgXCIke2xvY2FsaXplZERhdGFPYmplY3ROYW1lfVwiIG5vdCBmb3VuZCBmb3IgdGFiOiAke21haW5UYWJJZH0uIE1vZHVsZSBjYW5ub3QgYmUgaW5pdGlhbGl6ZWQuYCk7XG4gICAgICAgIGlmICh3aW5kb3cuUHJvZHVjdEVzdGltYXRvclNldHRpbmdzSW5zdGFuY2UgJiYgdHlwZW9mIHdpbmRvdy5Qcm9kdWN0RXN0aW1hdG9yU2V0dGluZ3NJbnN0YW5jZS5zaG93Tm90aWNlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgd2luZG93LlByb2R1Y3RFc3RpbWF0b3JTZXR0aW5nc0luc3RhbmNlLnNob3dOb3RpY2UoYENvbmZpZ3VyYXRpb24gZGF0YSBmb3IgU2ltaWxhciBQcm9kdWN0cyAoXCIke2xvY2FsaXplZERhdGFPYmplY3ROYW1lfVwiKSBpcyBtaXNzaW5nLiBNb2R1bGUgZGlzYWJsZWQuYCwgJ2Vycm9yJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vIFRoZSBtb2R1bGUncyBpbmhlcml0ZWQgYGhhbmRsZU1haW5UYWJDaGFuZ2VkYCAoZnJvbSBWZXJ0aWNhbFRhYmJlZE1vZHVsZSlcbiAgICAgIC8vIHdpbGwgbWFuYWdlIGFjdGl2YXRpb24vZGVhY3RpdmF0aW9uIGxvZ2ljLCBpbmNsdWRpbmcgY2FsbGluZyBgb25NYWluVGFiQWN0aXZhdGVkYC5cbiAgICAgIC8vIE5vIHNlcGFyYXRlIGBwcm9kdWN0X2VzdGltYXRvcl90YWJfY2hhbmdlZGAgbGlzdGVuZXIgaXMgbmVlZGVkIGhlcmUgZm9yIHJlLWluaXRpYWxpemF0aW9uXG4gICAgICAvLyBvciBmb3IgY2xlYXJpbmcgYHN1Yl90YWJgIGZyb20gVVJMLCBhcyBgVmVydGljYWxUYWJiZWRNb2R1bGUuc2hvd1ZlcnRpY2FsVGFiYCBoYW5kbGVzIFVSTCBzdGF0ZS5cbiAgICB9IGVsc2Uge1xuICAgICAgY3JlYXRlTG9nZ2VyKCdTaW1pbGFyUHJvZHVjdHNJbml0Jykud2FybihgTWFpbiBjb250YWluZXIgIyR7bWFpblRhYklkfSBub3QgZm91bmQuIFNpbWlsYXJQcm9kdWN0c1NldHRpbmdzTW9kdWxlIHdpbGwgbm90IGJlIGluaXRpYWxpemVkLmApO1xuICAgIH1cbiAgfSk7XG5cbiAgZXhwb3J0IGRlZmF1bHQgU2ltaWxhclByb2R1Y3RzU2V0dGluZ3NNb2R1bGU7XG4iXSwibmFtZXMiOlsiYWpheCIsImNyZWF0ZUxvZ2dlciIsIkFkbWluVGFibGVNYW5hZ2VyIiwiU2ltaWxhclByb2R1Y3RzU2V0dGluZ3NNb2R1bGUiLCJfQWRtaW5UYWJsZU1hbmFnZXIiLCJfdGhpcyIsIl9jbGFzc0NhbGxDaGVjayIsImNvbmZpZyIsIm1haW5UYWJJZCIsImxvY2FsaXplZERhdGFOYW1lIiwiX2NhbGxTdXBlciIsIiQiLCJkb2N1bWVudCIsIm9uIiwiY29uY2F0IiwiX2NhY2hlU2ltaWxhclByb2R1Y3RzRE9NIiwiX2JpbmRTcGVjaWZpY0V2ZW50cyIsIl9pbml0aWFsaXplU2VsZWN0MiIsIl9pbmhlcml0cyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwic2V0dGluZ3MiLCJzZWxlY3RvcnMiLCJkb20iLCJzb3VyY2VDYXRlZ29yaWVzU2VsZWN0IiwiJGNvbnRhaW5lciIsImZpbmQiLCJhdHRyaWJ1dGVzQ29udGFpbmVyIiwiYXR0cmlidXRlc0xpc3QiLCJhdHRyaWJ1dGVzTG9hZGluZyIsInNlbGVjdGVkQXR0cmlidXRlc0lucHV0Iiwid2FybiIsIl90aGlzJGRvbSRzb3VyY2VDYXRlZyIsImZvcm0iLCJsZW5ndGgiLCJfaGFuZGxlU291cmNlQ2F0ZWdvcmllc0NoYW5nZSIsImJpbmQiLCJpbml0aWFsaXplU2VsZWN0MkRyb3Bkb3ducyIsImVsZW1lbnRzIiwiZWxlbWVudCIsInBsYWNlaG9sZGVyS2V5IiwiZmFsbGJhY2tUZXh0IiwibmFtZSIsImNsZWFySW5pdGlhbCIsIm1vZHVsZU5hbWUiLCJvbk1haW5UYWJBY3RpdmF0ZWQiLCJfc3VwZXJQcm9wR2V0IiwiaGFzQ2xhc3MiLCJfdGhpcyRkb20kc291cmNlQ2F0ZWcyIiwiY2F0ZWdvcnlJZHMiLCJ2YWwiLCJfZmV0Y2hBdHRyaWJ1dGVzRm9yQ2F0ZWdvcmllcyIsIl91cGRhdGVBdHRyaWJ1dGVTZWxlY3Rpb25GaWVsZCIsImF0dHJpYnV0ZXMiLCJzZWxlY3RlZEF0dHJpYnV0ZXMiLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJlbXB0eSIsInNob3ciLCJoaWRlIiwic3BsaXQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiYXR0cmlidXRlc0h0bWwiLCJtYXAiLCJhdHRyIiwiaXNDaGVja2VkIiwiaW5jbHVkZXMiLCJsYWJlbCIsImpvaW4iLCJodG1sIiwiX2hhbmRsZUF0dHJpYnV0ZUNoZWNrYm94Q2hhbmdlIiwiX3VwZGF0ZVNlbGVjdGVkQXR0cmlidXRlc0lucHV0IiwiX3RoaXMyIiwiYWN0aW9ucyIsImdldF9hdHRyaWJ1dGVzIiwidGV4dCIsImkxOG4iLCJsb2FkaW5nQXR0cmlidXRlcyIsImN1cnJlbnRseVNlbGVjdGVkQXR0cmlidXRlcyIsImFqYXhSZXF1ZXN0IiwidXJsIiwiYWpheFVybCIsImRhdGEiLCJhY3Rpb24iLCJub25jZSIsImNhdGVnb3J5X2lkcyIsInRoZW4iLCJyZXNwb25zZSIsImF0dHJpYnV0ZXNBcnJheSIsInN1Y2Nlc3MiLCJBcnJheSIsImlzQXJyYXkiLCJub0F0dHJpYnV0ZXMiLCJlcnJvckxvYWRpbmciLCJjYXRjaCIsIl90aGlzMyIsImVhY2giLCJpIiwiY2hlY2tib3giLCJwdXNoIiwicmVzZXRGb3JtIiwiX3RoaXMkZG9tJHNvdXJjZUNhdGVnMyIsInRyaWdnZXIiLCJzZWxlY3RDYXRlZ29yeSIsInBvcHVsYXRlRm9ybVdpdGhEYXRhIiwiaXRlbURhdGEiLCJfdGhpczQiLCJzb3VyY2VDYXRlZ29yaWVzIiwic291cmNlX2NhdGVnb3JpZXMiLCJzZXRUaW1lb3V0IiwiX3RoaXM0JGRvbSRzb3VyY2VDYXRlIiwiZm9ybU1vZGlmaWVkIiwidmFsaWRhdGVGb3JtIiwiX3RoaXMkZG9tJHNvdXJjZUNhdGVnNCIsIl90aGlzJGRvbSRzb3VyY2VDYXRlZzUiLCJpc1ZhbGlkIiwiY2xlYXJGaWVsZEVycm9yIiwibmV4dCIsIl90aGlzJGRvbSRzb3VyY2VDYXRlZzYiLCJzaG93RmllbGRFcnJvciIsInNlbGVjdENhdGVnb3J5RXJyb3IiLCJzZWxlY3RBdHRyaWJ1dGVzRXJyb3IiLCJwb3B1bGF0ZUNvbHVtbl9zb3VyY2VfY2F0ZWdvcmllcyIsIiRjZWxsIiwic291cmNlX2NhdGVnb3JpZXNfZGlzcGxheSIsInBvcHVsYXRlQ29sdW1uX2F0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzX2Rpc3BsYXkiLCJqUXVlcnkiLCJyZWFkeSIsImxvY2FsaXplZERhdGFPYmplY3ROYW1lIiwid2luZG93IiwiU2ltaWxhclByb2R1Y3RzU2V0dGluZ3NNb2R1bGVJbnN0YW5jZSIsImxvZyIsImVycm9yIiwiUHJvZHVjdEVzdGltYXRvclNldHRpbmdzSW5zdGFuY2UiLCJzaG93Tm90aWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/admin/modules/SimilarProductsSettingsModule.js\n");

/***/ }),

/***/ "./src/js/utils/tinymce-preserver.js":
/*!*******************************************!*\
  !*** ./src/js/utils/tinymce-preserver.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setupTinyMCEHTMLPreservation: function() { return /* binding */ setupTinyMCEHTMLPreservation; }\n/* harmony export */ });\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ \"./src/js/utils/logger.js\");\n/**\n * Direct copy of the working setupWpEditors function as a utility\n */\n\n\nvar logger = (0,_logger__WEBPACK_IMPORTED_MODULE_0__.createLogger)('UtilsTinyMCEPreserver');\n/**\n * Set up TinyMCE HTML preservation to properly handle special tags like <br>\n * @param {string[]} editorIds - Array of TinyMCE editor IDs to configure\n * @param {string} containerSelector - CSS selector for the container with editors\n * @returns {void}\n */\nfunction setupTinyMCEHTMLPreservation(editorIds) {\n  var containerSelector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';\n  var $ = jQuery;\n\n  // Check if we're in the right container\n  if ($(containerSelector).length === 0) {\n    return;\n  }\n  logger.log('Setting up rich text editors with <br> tag preservation');\n\n  // Store original HTML content to restore after mode switches\n  window._originalEditorContent = window._originalEditorContent || {};\n\n  // Function to prepare content for the Visual editor\n  // This specifically handles the <br> tag issue\n  var prepareForVisualEditor = function prepareForVisualEditor(content) {\n    // Ensure <br> tags are properly preserved by adding a marker\n    // TinyMCE often strips solo <br> tags, so we add a zero-width space after them\n    return content.replace(/<br\\s*\\/?>/gi, \"<br>\\u200B\");\n  };\n\n  // Function to clean up content when retrieving from the Visual editor\n  var cleanupFromVisualEditor = function cleanupFromVisualEditor(content) {\n    // Remove any zero-width spaces we added\n    return content.replace(/\\u200B/g, '');\n  };\n\n  // Function to properly initialize TinyMCE with br tag preservation\n  var initEditor = function initEditor(editorId) {\n    if (!tinyMCE || !tinyMCE.get(editorId)) {\n      return false;\n    }\n    var editor = tinyMCE.get(editorId);\n\n    // Configure editor for HTML preservation\n    editor.settings.wpautop = false;\n    editor.settings.forced_root_block = '';\n    editor.settings.valid_elements = '*[*]';\n    editor.settings.entity_encoding = 'raw';\n    editor.settings.verify_html = false;\n    editor.settings.br_in_pre = false;\n\n    // Additional BR specific settings\n    editor.settings.keep_styles = true;\n    editor.settings.remove_linebreaks = false;\n    editor.settings.convert_newlines_to_brs = true;\n    editor.settings.remove_redundant_brs = false;\n\n    // Get raw content from textarea\n    var $textarea = $(\"#\".concat(editorId));\n    if ($textarea.length) {\n      var rawContent = $textarea.val();\n      window._originalEditorContent[editorId] = rawContent;\n\n      // Set the content in editor with our <br> preservation function\n      setTimeout(function () {\n        var preparedContent = prepareForVisualEditor(rawContent);\n        editor.setContent(preparedContent, {\n          format: 'raw'\n        });\n      }, 100);\n    }\n\n    // Add event listeners for content filtering\n\n    // Process content before it's set in the editor\n    editor.on('BeforeSetContent', function (e) {\n      if (e.content) {\n        // Process the content to preserve <br> tags\n        e.content = prepareForVisualEditor(e.content);\n      }\n\n      // Store original content if this is initial load or switching from text mode\n      if (e.initial || e.source_view) {\n        window._originalEditorContent[editorId] = e.content;\n      }\n    });\n\n    // Process content when it's retrieved from the editor\n    editor.on('GetContent', function (e) {\n      if (e.content) {\n        // Clean up our marker characters\n        e.content = cleanupFromVisualEditor(e.content);\n      }\n    });\n\n    // Capture raw content when editor is initialized\n    editor.on('init', function () {\n      var content = editor.getContent({\n        format: 'raw'\n      });\n      window._originalEditorContent[editorId] = cleanupFromVisualEditor(content);\n      logger.log(\"Editor \".concat(editorId, \" initialized with content length: \").concat(content.length));\n    });\n\n    // Prevent content loss when switching modes\n    var $tabButtons = $(\".wp-editor-tabs button[data-wp-editor-id=\\\"\".concat(editorId, \"\\\"]\"));\n    $tabButtons.on('click', function () {\n      var isTextMode = $(this).hasClass('switch-html');\n      var isVisualMode = $(this).hasClass('switch-tmce');\n      if (isTextMode) {\n        // Switching to text mode - get content from visual editor first\n        if (tinyMCE.get(editorId)) {\n          var content = tinyMCE.get(editorId).getContent({\n            format: 'raw'\n          });\n          var cleanContent = cleanupFromVisualEditor(content);\n          window._originalEditorContent[editorId] = cleanContent;\n          // Update the textarea directly with clean content\n          $(\"#\".concat(editorId)).val(cleanContent);\n        }\n      }\n      if (isVisualMode) {\n        // Switching to visual mode - restore original content after a delay\n        setTimeout(function () {\n          if (tinyMCE.get(editorId) && window._originalEditorContent[editorId]) {\n            var preparedContent = prepareForVisualEditor(window._originalEditorContent[editorId]);\n            tinyMCE.get(editorId).setContent(preparedContent, {\n              format: 'raw'\n            });\n          }\n        }, 100);\n      }\n    });\n    logger.log(\"Editor \".concat(editorId, \" configured with <br> tag protection\"));\n    return true;\n  };\n\n  // Initialize editors\n  var initEditors = function initEditors() {\n    if (typeof tinyMCE !== 'undefined' && tinyMCE.editors) {\n      var allInitialized = true;\n      editorIds.forEach(function (id) {\n        if (!initEditor(id)) {\n          allInitialized = false;\n        }\n      });\n      return allInitialized;\n    }\n    return false;\n  };\n\n  // Try to initialize immediately\n  if (!initEditors()) {\n    // If not successful, poll until ready\n    var attempts = 0;\n    var interval = setInterval(function () {\n      attempts++;\n      if (initEditors() || attempts > 20) {\n        clearInterval(interval);\n      }\n    }, 300);\n  }\n\n  // Ensure text mode changes are stored\n  editorIds.forEach(function (id) {\n    $(\"#\".concat(id)).on('input change', function () {\n      window._originalEditorContent[id] = $(this).val();\n    });\n  });\n\n  // Handle form submission to ensure HTML content is preserved\n  $(\"\".concat(containerSelector, \" form\")).off('submit.htmlPreservation').on('submit.htmlPreservation', function () {\n    // Update all editor content before form submission\n    editorIds.forEach(function (id) {\n      var finalContent = '';\n\n      // First try to get content from active editor (Visual or Text)\n      if (tinyMCE.get(id) && tinyMCE.get(id).isHidden()) {\n        // Text mode is active - get directly from textarea\n        var $textarea = $(\"#\".concat(id));\n        if ($textarea.length) {\n          finalContent = $textarea.val();\n        }\n      } else if (tinyMCE.get(id)) {\n        // Visual mode is active - get from editor and clean up\n        var content = tinyMCE.get(id).getContent({\n          format: 'raw'\n        });\n        finalContent = cleanupFromVisualEditor(content);\n      }\n\n      // If no content found but we have stored content, use that\n      if (!finalContent && window._originalEditorContent[id]) {\n        finalContent = window._originalEditorContent[id];\n      }\n\n      // Update the textarea with final content\n      if (finalContent) {\n        $(\"#\".concat(id)).val(finalContent);\n        logger.log(\"Form submission: Updated \".concat(id, \" with content length: \").concat(finalContent.length));\n      }\n    });\n\n    // Let the form submit normally\n    return true;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/utils/tinymce-preserver.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	!function() {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = function(result, chunkIds, fn, priority) {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"admin/product-estimator-admin": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkproduct_estimator"] = self["webpackChunkproduct_estimator"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["common"], function() { return __webpack_require__("./src/js/admin.js"); })
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;